// video editing

<div>
import React, { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import {
  Play, Film, VideoIcon, Sparkles, Users, BarChart4, BadgeCheck, MonitorPlay, Camera, Headphones, Folders, Check, ChevronRight, Star, MessageCircle, TrendingUp, ShoppingBag
} from "lucide-react";
import PageTransition from '../components/PageTransition';
import Navbar from '../components/Navbar';
import FooterWithNewsletter from '../components/Footer';
import { AuroraText } from "../components/magicui/aurora-text";

const THEME_ACCENT = {
  primary: "#8B5CF6",
  secondary: "#EC4899",
  tertiary: "#3B82F6",
  accent: "#10B981",
  gradient: "linear-gradient(135deg, #8B5CF6 0%, #EC4899 50%, #3B82F6 100%)"
};

// --- HERO SECTION ---
const HeroSection = () => (
  <section className="relative min-h-[80vh] flex items-center justify-center overflow-hidden bg-black text-white">
    {/* Video Background */}
    <video
      autoPlay
      loop
      muted
      playsInline
      className="absolute inset-0 w-full h-full object-cover opacity-70"
    >
      <source src="/videos/big-eyed-fluff-ball.mp4" type="video/mp4" />
    </video>
    <div className="absolute inset-0 bg-gradient-to-tr from-primary/30 via-secondary/20 to-blue-500/20" />
    <div className="absolute inset-0 bg-black/60" />
    <div className="relative z-10 text-center px-4 max-w-3xl mx-auto py-24">
      <motion.div
        initial={{ opacity: 0, scale: 0.9 }}
        animate={{ opacity: 1, scale: 1 }}
        transition={{ duration: 0.6 }}
        className="inline-block mb-6"
      >
        <div className="bg-primary/20 text-white px-6 py-2 rounded-full text-sm font-medium backdrop-blur-md border border-primary/20">
          Professional Video Editing Studio
        </div>
      </motion.div>
      <motion.h1
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.6 }}
        className="text-4xl sm:text-5xl md:text-7xl font-bold mb-4 text-white leading-tight"
      >
        Transform Your <AuroraText>Vision</AuroraText>
        <span className="block mt-1">Into Reality</span>
      </motion.h1>
      <motion.p
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.8, delay: 0.4 }}
        className="text-lg md:text-2xl text-white/90 max-w-2xl mx-auto mb-10 font-light"
      >
        Elevate your content with cinematic editing, color grading, and motion graphics that captivate and convert.
      </motion.p>
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.6, delay: 0.6 }}
        className="flex flex-col sm:flex-row items-center justify-center gap-5 mb-10"
      >
        <button className="group relative overflow-hidden rounded-full bg-primary text-white px-10 py-4 w-full sm:w-auto flex items-center justify-center gap-3 font-medium transition-all border border-primary/50 hover:bg-primary/90 hover:scale-[0.98]">
          <div className="w-10 h-10 rounded-full bg-white flex items-center justify-center">
            <Play className="w-5 h-5 text-primary ml-0.5" />
          </div>
          <span className="text-lg">Watch Showreel</span>
        </button>
        <button className="group relative overflow-hidden rounded-full bg-white/5 backdrop-blur-md border border-white/10 px-10 py-4 w-full sm:w-auto text-white font-medium transition-all hover:bg-white/10 hover:scale-[0.98]">
          <span className="text-lg">Start Project</span>
          <ChevronRight className="w-5 h-5 opacity-70 ml-2 inline-block" />
        </button>
      </motion.div>
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.2 }}
        className="flex flex-wrap items-center justify-center gap-4 text-xs md:text-sm text-white"
      >
        {[{ icon: <BadgeCheck className="text-white" />, text: "Certified Editors" }, { icon: <Sparkles className="text-white" />, text: "Hollywood-Grade Tools" }, { icon: <BarChart4 className="text-white" />, text: "Data-Driven Results" }].map((feature, i) => (
          <div key={i} className="flex items-center gap-2">
            <div className="w-4 h-4 text-white">{feature.icon}</div>
            <span>{feature.text}</span>
          </div>
        ))}
      </motion.div>
    </div>
  </section>
);

// --- SERVICES SECTION ---
const SERVICES = [
  {
    title: "Commercial Editing",
    description: "High-impact promotional videos that drive conversions.",
    icon: <MonitorPlay className="w-10 h-10 text-primary" />,
    color: "from-violet-600 to-indigo-400"
  },
  {
    title: "Film Post-Production",
    description: "Cinematic color grading and seamless storytelling.",
    icon: <Film className="w-10 h-10 text-primary" />,
    color: "from-pink-600 to-rose-400"
  },
  {
    title: "Motion Graphics",
    description: "Dynamic animation and VFX for standout content.",
    icon: <Sparkles className="w-10 h-10 text-primary" />,
    color: "from-green-500 to-emerald-400"
  },
  {
    title: "Content Optimization",
    description: "Platform-specific edits for maximum engagement.",
    icon: <BarChart4 className="w-10 h-10 text-primary" />,
    color: "from-blue-600 to-sky-400"
  }
];

const ServicesSection = () => (
  <section className="relative py-24 px-4 sm:px-6 lg:px-8 bg-white dark:bg-black">
    <div className="max-w-4xl mx-auto text-center mb-16">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        whileInView={{ opacity: 1, y: 0 }}
        viewport={{ once: true }}
        className="inline-flex items-center justify-center px-4 py-1.5 mb-6 text-sm font-medium uppercase tracking-wider text-violet-700 dark:text-violet-300 bg-violet-50 dark:bg-violet-900/30 rounded-full border border-violet-200 dark:border-violet-700/50"
      >
        Our Services
      </motion.div>
      <motion.h2
        initial={{ opacity: 0, y: 20 }}
        whileInView={{ opacity: 1, y: 0 }}
        viewport={{ once: true }}
        transition={{ delay: 0.1 }}
        className="text-3xl md:text-5xl font-bold mb-6 text-gray-900 dark:text-white"
      >
        Editing Services That <span className="text-transparent bg-clip-text" style={{ backgroundImage: THEME_ACCENT.gradient }}>Shine</span>
      </motion.h2>
      <motion.p
        initial={{ opacity: 0, y: 20 }}
        whileInView={{ opacity: 1, y: 0 }}
        viewport={{ once: true }}
        transition={{ delay: 0.2 }}
        className="text-xl text-gray-600 dark:text-zinc-300"
      >
        Professional solutions for every stage of your video journey
      </motion.p>
    </div>
    <div className="max-w-7xl mx-auto">
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
        {SERVICES.map((service, index) => (
          <motion.div
            key={index}
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5, delay: index * 0.1 }}
            whileHover={{ y: -8, transition: { duration: 0.3 } }}
            className="group relative"
          >
            <div className="relative bg-white dark:bg-zinc-900 rounded-2xl p-8 shadow-lg border border-gray-100 dark:border-zinc-800 h-full transition-all duration-300 group-hover:shadow-xl">
              <div className={`mb-6 w-16 h-16 rounded-2xl flex items-center justify-center bg-gradient-to-br ${service.color} text-white text-2xl`}>
                {service.icon}
              </div>
              <h3 className="text-xl font-bold mb-4 text-gray-900 dark:text-white group-hover:text-transparent bg-clip-text transition-all duration-300" style={{ backgroundImage: `linear-gradient(to right, ${service.color.replace('from-', '').replace('to-', '')})` }}>{service.title}</h3>
              <p className="text-gray-600 dark:text-zinc-400 mb-8">{service.description}</p>
            </div>
          </motion.div>
        ))}
      </div>
    </div>
  </section>
);

// --- PLATFORMS/EXPERTISE SECTION ---
const PLATFORMS = {
  Premiere: {
    name: "Premiere Pro",
    icon: <Play className="w-7 h-7" />,
    color: "#A259FF",
    secondaryColor: "#0056D2",
    features: [
      "Industry-standard editing",
      "Multi-cam & proxy workflows",
      "Advanced color grading",
      "Seamless Adobe integration"
    ],
    image: "https://images.unsplash.com/photo-1464983953574-0892a716854b?auto=format&fit=crop&w=800&q=80"
  },
  FinalCut: {
    name: "Final Cut Pro",
    icon: <Film className="w-7 h-7" />,
    color: "#FF5C57",
    secondaryColor: "#FFD600",
    features: [
      "Magnetic timeline",
      "Real-time effects",
      "Optimized for Mac",
      "HDR & 360Â° video"
    ],
    image: "https://images.unsplash.com/photo-1519125323398-675f0ddb6308?auto=format&fit=crop&w=800&q=80"
  },
  DaVinci: {
    name: "DaVinci Resolve",
    icon: <VideoIcon className="w-7 h-7" />,
    color: "#00B4D8",
    secondaryColor: "#FFD166",
    features: [
      "Hollywood-grade color",
      "Fusion VFX & Fairlight audio",
      "Collaborative workflow",
      "Free & Studio versions"
    ],
    image: "https://images.unsplash.com/photo-1506744038136-46273834b3fb?auto=format&fit=crop&w=800&q=80"
  }
};

const PlatformsSection = () => {
  const [active, setActive] = useState('Premiere');
  const current = PLATFORMS[active];
  return (
    <section className="py-24 px-4 sm:px-6 lg:px-8 bg-gray-50 dark:bg-zinc-950 relative overflow-hidden">
      <div className="max-w-4xl mx-auto text-center mb-16">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          className="inline-flex items-center justify-center px-4 py-1.5 mb-6 text-sm font-medium uppercase tracking-wider text-pink-700 dark:text-pink-300 bg-pink-50 dark:bg-pink-900/30 rounded-full border border-pink-200 dark:border-pink-800/30"
        >
          Platform Mastery
        </motion.div>
        <motion.h2
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ delay: 0.1 }}
          className="text-3xl md:text-5xl font-bold mb-6 text-gray-900 dark:text-white"
        >
          We Master <span className="text-transparent bg-clip-text" style={{ backgroundImage: THEME_ACCENT.gradient }}>Every Tool</span>
        </motion.h2>
        <motion.p
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ delay: 0.2 }}
          className="text-xl text-gray-600 dark:text-zinc-300"
        >
          Deep expertise in the world's leading editing platforms
        </motion.p>
      </div>
      <div className="max-w-7xl mx-auto relative z-10">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.5, delay: 0.3 }}
          className="flex flex-wrap justify-center gap-4 mb-12"
        >
          {Object.keys(PLATFORMS).map((key) => (
            <button
              key={key}
              onClick={() => setActive(key)}
              className={`relative px-5 py-3 rounded-xl flex items-center gap-3 transition-all duration-300 ${
                active === key
                  ? 'bg-white dark:bg-zinc-800 shadow-lg border-2 border-transparent'
                  : 'bg-gray-100 dark:bg-zinc-900 border-2 border-gray-100 dark:border-zinc-800 opacity-70 hover:opacity-100'
              }`}
            >
              <div
                className="w-8 h-8 rounded-full flex items-center justify-center"
                style={{ backgroundColor: `${active === key ? current.color : '#d1d5db'}30` }}
              >
                <div className="text-gray-700 dark:text-gray-300" style={{ color: active === key ? current.color : undefined }}>
                  {PLATFORMS[key].icon}
                </div>
              </div>
              <span className={`font-medium ${active === key ? 'text-gray-900 dark:text-white' : 'text-gray-600 dark:text-gray-400'}`}>{PLATFORMS[key].name}</span>
              {active === key && (
                <motion.div
                  layoutId="platformIndicator"
                  className="absolute -bottom-1 left-3 right-3 h-0.5"
                  style={{ background: `linear-gradient(to right, ${current.color}, ${current.secondaryColor})` }}
                />
              )}
            </button>
          ))}
        </motion.div>
        <motion.div
          key={active}
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 0.5 }}
          className="grid grid-cols-1 md:grid-cols-2 gap-8"
        >
          {/* Platform image */}
          <div className="overflow-hidden rounded-2xl">
            <div className="relative h-full min-h-[300px]">
              <div className="absolute inset-0 bg-gradient-to-br" style={{ background: `linear-gradient(to bottom right, ${current.color}80, ${current.secondaryColor}80)` }}></div>
              <img src={current.image} alt={current.name} className="absolute inset-0 w-full h-full object-cover mix-blend-overlay" />
              <div className="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent"></div>
              <div className="absolute bottom-0 left-0 right-0 p-8 text-white">
                <div className="flex items-center gap-3 mb-3">
                  <div className="w-12 h-12 rounded-full flex items-center justify-center" style={{ backgroundColor: 'rgba(255,255,255,0.2)' }}>{current.icon}</div>
                  <h3 className="text-2xl font-bold">{current.name} Mastery</h3>
                </div>
              </div>
            </div>
          </div>
          {/* Platform features */}
          <div className="bg-white dark:bg-zinc-900 rounded-2xl p-8 border border-gray-200 dark:border-zinc-800 shadow-lg flex flex-col justify-center">
            <h3 className="font-bold text-xl text-gray-900 dark:text-white mb-4">What We Do Best</h3>
            <ul className="space-y-4 mb-8">
              {current.features.map((feature, i) => (
                <li key={i} className="flex gap-3 items-center">
                  <div className="w-5 h-5 rounded-full flex items-center justify-center" style={{ background: `linear-gradient(to bottom right, ${current.color}, ${current.secondaryColor})` }}>
                    <Check size={12} className="text-white" />
                  </div>
                  <span className="text-gray-700 dark:text-zinc-300">{feature}</span>
                </li>
              ))}
            </ul>
            <button className="w-full py-3 rounded-xl font-medium text-white flex items-center justify-center gap-1.5" style={{ background: `linear-gradient(to right, ${current.color}, ${current.secondaryColor})` }}>
              See {current.name} Work <ChevronRight size={16} />
            </button>
          </div>
        </motion.div>
      </div>
    </section>
  );
};

// --- WORKFLOW SECTION ---
const WORKFLOW = [
  {
    number: 1,
    title: "Brief & Vision",
    description: "We discuss your goals, style, and project requirements.",
    icon: <Users />
  },
  {
    number: 2,
    title: "Content Review",
    description: "Our editors analyze your footage and assets.",
    icon: <Folders />
  },
  {
    number: 3,
    title: "First Cut",
    description: "We deliver an initial edit for your feedback.",
    icon: <Film />
  },
  {
    number: 4,
    title: "Refinement",
    description: "We polish, color grade, and add effects.",
    icon: <Sparkles />
  },
  {
    number: 5,
    title: "Final Delivery",
    description: "You receive your video in any format you need.",
    icon: <BadgeCheck />
  }
];

const WorkflowSection = () => {
  const [active, setActive] = useState(1);
  return (
    <section className="relative py-24 px-4 sm:px-6 lg:px-8 bg-white dark:bg-black overflow-hidden">
      <div className="max-w-4xl mx-auto text-center mb-16">
        <div className="inline-flex items-center justify-center px-4 py-1.5 mb-6 text-sm font-medium uppercase tracking-wider text-blue-700 dark:text-blue-300 bg-blue-50 dark:bg-blue-900/30 rounded-full border border-blue-200 dark:border-blue-800/30">
          Our Process
        </div>
        <h2 className="text-3xl md:text-5xl font-bold mb-6 text-gray-900 dark:text-white">
          How We Edit <span className="text-transparent bg-clip-text" style={{ backgroundImage: THEME_ACCENT.gradient }}>Your Story</span>
        </h2>
        <p className="text-xl text-gray-600 dark:text-zinc-300">
          A proven workflow for stunning results
        </p>
      </div>
      <div className="max-w-7xl mx-auto">
        <div className="grid grid-cols-1 md:grid-cols-5 gap-8">
          {WORKFLOW.map((step) => (
            <motion.div
              key={step.number}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.4, delay: step.number * 0.1 }}
              className={`p-6 rounded-2xl cursor-pointer transition-all duration-300 flex flex-col items-center ${
                active === step.number
                  ? "bg-gradient-to-r from-violet-600 to-blue-600 text-white dark:from-violet-500 dark:to-blue-500"
                  : "bg-white dark:bg-zinc-900 hover:bg-gray-50 dark:hover:bg-zinc-800 border border-gray-200 dark:border-zinc-800"
              }`}
              onClick={() => setActive(step.number)}
            >
              <div className={`w-12 h-12 rounded-xl flex items-center justify-center text-lg font-bold mb-4 ${
                active === step.number
                  ? "bg-white text-violet-600"
                  : "bg-gray-100 dark:bg-zinc-800 text-gray-900 dark:text-white"
              }`}>
                {step.icon}
              </div>
              <h3 className="text-lg font-bold mb-2 text-center">{step.title}</h3>
              <p className={`text-sm text-center ${active !== step.number ? "text-gray-600 dark:text-zinc-400" : ""}`}>{step.description}</p>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  );
};

// --- TESTIMONIALS/CASE STUDIES ---
const TESTIMONIALS = [
  {
    quote: "ProEdit Studio transformed our raw footage into a compelling brand story that increased our conversion rates by 45%. Their editing style perfectly captured our vision and resonated with our audience.",
    author: "Sarah Johnson",
    position: "Marketing Director, Global Brands Inc.",
    image: "https://randomuser.me/api/portraits/women/44.jpg",
    logo: "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3f/Logo-placeholder.svg/512px-Logo-placeholder.svg.png"
  },
  {
    quote: "The post-production team at ProEdit delivered outstanding quality for our documentary series. Their color grading and sound design elevated our storytelling and helped us secure distribution with a major streaming platform.",
    author: "Michael Chen",
    position: "Executive Producer, Horizon Films",
    image: "https://randomuser.me/api/portraits/men/32.jpg",
    logo: "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3f/Logo-placeholder.svg/512px-Logo-placeholder.svg.png"
  },
  {
    quote: "ProEdit's motion graphics team created stunning visual sequences that made our product launch video stand out. Their work directly contributed to a 78% increase in viewer engagement compared to our previous campaigns.",
    author: "Emma Rodriguez",
    position: "Creative Director, TechVision Media",
    image: "https://randomuser.me/api/portraits/women/68.jpg",
    logo: "https://upload.wikimedia.org/wikipedia/commons/thumb/3/3f/Logo-placeholder.svg/512px-Logo-placeholder.svg.png"
  }
];

const TestimonialsSection = () => (
  <section className="py-24 px-4 sm:px-6 lg:px-8 bg-gradient-to-b from-background to-secondary/5">
    <div className="max-w-7xl mx-auto">
      <div className="max-w-3xl mx-auto text-center mb-16">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          className="inline-flex items-center justify-center px-4 py-1.5 mb-6 text-sm font-medium uppercase tracking-wider text-blue-700 dark:text-blue-300 bg-blue-50 dark:bg-blue-900/30 rounded-full border border-blue-200 dark:border-blue-700/50"
        >
          Client Feedback
        </motion.div>
        <motion.h2
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ delay: 0.1 }}
          className="text-3xl md:text-5xl font-bold mb-6 text-gray-900 dark:text-white"
        >
          What Our Clients <span className="text-transparent bg-clip-text" style={{ backgroundImage: THEME_ACCENT.gradient }}>Say</span>
        </motion.h2>
        <motion.p
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ delay: 0.2 }}
          className="text-xl text-gray-600 dark:text-zinc-300"
        >
          Real feedback from brands and creators who trust us
        </motion.p>
      </div>
      <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
        {TESTIMONIALS.map((t, i) => (
          <motion.div
            key={i}
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5, delay: i * 0.1 }}
            className="group relative bg-white dark:bg-zinc-900 rounded-2xl overflow-hidden shadow-lg border border-gray-100 dark:border-zinc-800 p-8 flex flex-col"
          >
            <div className="flex items-center gap-4 mb-4">
              <img src={t.image} alt={t.author} className="w-12 h-12 rounded-full object-cover" />
              <div>
                <h3 className="font-semibold text-base">{t.author}</h3>
                <p className="text-xs text-foreground/60">{t.position}</p>
              </div>
            </div>
            <p className="text-gray-600 dark:text-zinc-400 mb-6 flex-1">"{t.quote}"</p>
            <img src={t.logo} alt="logo" className="h-8 opacity-60 group-hover:opacity-100 transition-opacity" />
          </motion.div>
        ))}
      </div>
    </div>
  </section>
);

// --- CTA SECTION ---
const CTASection = () => (
  <section className="py-24 px-4 sm:px-6 lg:px-8 bg-black text-white relative overflow-hidden">
    <div className="absolute inset-0">
      <div className="absolute -top-24 left-1/4 w-96 h-96 bg-violet-600 rounded-full mix-blend-multiply filter blur-[128px] opacity-30 animate-blob"></div>
      <div className="absolute top-0 -right-24 w-96 h-96 bg-pink-600 rounded-full mix-blend-multiply filter blur-[128px] opacity-30 animate-blob animation-delay-2000"></div>
      <div className="absolute bottom-0 left-0 w-96 h-96 bg-blue-600 rounded-full mix-blend-multiply filter blur-[128px] opacity-30 animate-blob animation-delay-4000"></div>
    </div>
    <div className="max-w-5xl mx-auto relative z-10 text-center">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        whileInView={{ opacity: 1, y: 0 }}
        viewport={{ once: true }}
        transition={{ duration: 0.6 }}
        className="mb-6 inline-flex gap-3 mx-auto"
      >
        <div className="px-4 py-1.5 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 text-white text-sm font-medium">
          Ready to get started?
        </div>
      </motion.div>
      <h2 className="text-4xl md:text-6xl lg:text-7xl font-bold mb-8 leading-none">
        Let's Make Your Video
        <span className="block mt-2 text-transparent bg-clip-text" style={{ backgroundImage: THEME_ACCENT.gradient }}>
          Unforgettable
        </span>
      </h2>
      <p className="text-xl text-zinc-400 mb-12 max-w-3xl mx-auto">
        Get in touch today and see how we can transform your footage into a visual masterpiece.
      </p>
      <div className="flex flex-col sm:flex-row justify-center gap-4 max-w-xl mx-auto">
        <button className="group px-8 py-4 rounded-xl font-medium text-white bg-gradient-to-r from-violet-600 to-blue-600 hover:from-violet-700 hover:to-blue-700 transition-all duration-300 flex items-center justify-center gap-2 shadow-xl shadow-violet-900/20">
          Schedule Free Consultation
          <ChevronRight size={18} className="group-hover:translate-x-1 transition-transform" />
        </button>
        <button className="px-8 py-4 rounded-xl font-medium text-white bg-white/10 backdrop-blur-sm hover:bg-white/15 transition-all duration-300 border border-white/10">
          View Portfolio
        </button>
      </div>
    </div>
  </section>
);

// --- WHY CHOOSE US: MODERN FEATURE GRID ---
const WhyChooseUsSection = () => {
  const features = [
    {
      title: "Professional Video Editing",
      description: "Expert editors craft compelling stories with seamless transitions, perfect pacing, and stunning visual effects.",
      icon: <Film className="w-8 h-8" />,
      color: "from-violet-500 to-indigo-400",
      video: "/videos/editing-demo.mp4"
    },
    {
      title: "Cinematic Color Grading",
      description: "Transform your footage with cinematic color grading that sets the mood and ensures consistency.",
      icon: <Sparkles className="w-8 h-8" />,
      color: "from-pink-500 to-rose-400",
      video: "/videos/color-grading-demo.mp4"
    },
    {
      title: "Motion Graphics & VFX",
      description: "Enhance your videos with custom motion graphics, dynamic titles, and special effects.",
      icon: <VideoIcon className="w-8 h-8" />,
      color: "from-green-500 to-emerald-400",
      video: "/videos/motion-graphics-demo.mp4"
    },
    {
      title: "Sound Design & Mixing",
      description: "Perfect your audio with professional sound mixing, music selection, and sound effects.",
      icon: <Headphones className="w-8 h-8" />,
      color: "from-blue-600 to-sky-400",
      video: "/videos/sound-design-demo.mp4"
    }
  ];

  return (
    <section className="relative py-24 px-4 sm:px-6 lg:px-8 bg-gradient-to-br from-background via-secondary/10 to-primary/5 overflow-hidden" aria-labelledby="why-choose-us">
      {/* Animated background blobs */}
      <div className="absolute inset-0 pointer-events-none overflow-hidden">
        <div className="absolute -left-32 top-24 w-96 h-96 rounded-full bg-violet-400/20 blur-3xl animate-pulse" />
        <div className="absolute right-0 bottom-0 w-96 h-96 rounded-full bg-pink-400/20 blur-3xl animate-pulse animation-delay-2000" />
        <div className="absolute left-1/2 -translate-x-1/2 top-1/2 w-[40rem] h-[40rem] bg-blue-400/10 rounded-full blur-3xl opacity-40 animate-blob" />
      </div>
      <div className="max-w-5xl mx-auto relative z-10">
        <div className="text-center mb-16">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5 }}
            className="inline-flex items-center justify-center px-4 py-1.5 mb-6 text-sm font-medium uppercase tracking-wider text-primary bg-primary/10 rounded-full border border-primary/20"
          >
            Our Advantage
          </motion.div>
          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5, delay: 0.1 }}
            className="text-4xl md:text-6xl font-bold mb-6 text-gray-900 dark:text-white"
          >
            Why Choose <span className="text-transparent bg-clip-text" style={{ backgroundImage: THEME_ACCENT.gradient }}><AuroraText>Our Studio</AuroraText></span>
          </motion.h2>
          <motion.p
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5, delay: 0.2 }}
            className="text-xl text-gray-600 dark:text-zinc-300 max-w-2xl mx-auto"
          >
            Experience the difference of professional video editing backed by expertise, creativity, and cutting-edge technology.
          </motion.p>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-10 lg:gap-16">
          {features.map((feature, i) => (
            <motion.div
              key={feature.title}
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.6, delay: i * 0.1 }}
              whileHover={{ scale: 1.03, boxShadow: "0 8px 32px 0 rgba(139,92,246,0.12)" }}
              className="group relative bg-white/90 dark:bg-zinc-900/90 rounded-3xl shadow-xl border border-primary/10 hover:border-primary/30 transition-all duration-300 overflow-hidden flex flex-col md:flex-row items-center gap-0 md:gap-8"
            >
              {/* Video player with gradient overlay */}
              <div className="relative w-full md:w-48 h-40 md:h-48 flex-shrink-0 overflow-hidden">
                <video 
                  src={feature.video}
                  className="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
                  autoPlay
                  muted
                  loop
                  playsInline
                />
                <div className={`absolute inset-0 bg-gradient-to-br ${feature.color} opacity-60`} />
                <div className="absolute inset-0 bg-black/10" />
              </div>
              {/* Feature content */}
              <div className="flex-1 p-8 flex flex-col items-center md:items-start text-center md:text-left">
                <div className={`mb-4 w-14 h-14 rounded-2xl flex items-center justify-center bg-gradient-to-br ${feature.color} text-white text-2xl shadow-lg`}>
                  {feature.icon}
                </div>
                <h3 className="text-2xl font-bold mb-2 text-gray-900 dark:text-white group-hover:text-transparent bg-clip-text transition-all duration-300" style={{ backgroundImage: `linear-gradient(to right, #8B5CF6, #EC4899, #3B82F6)` }}>{feature.title}</h3>
                <p className="text-gray-600 dark:text-zinc-400 mb-2 text-base md:text-lg">{feature.description}</p>
              </div>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  );
};

// --- MAIN PAGE ---
const VideoEditingPage = () => (
  <PageTransition>
    <Navbar />
    <HeroSection />
    <ServicesSection />
    <PlatformsSection />
    <WorkflowSection />
    <TestimonialsSection />
    <CTASection />
    {/* Why Choose Us Section - Modern Feature Grid */}
    <WhyChooseUsSection />
  </PageTransition>
);

export default VideoEditingPage;

</div>

// app development between the div tag , remove div tag before using it 

<div>
import React, { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import {
  ArrowRight, Check, Smartphone, Zap, Shield, Star, Settings, Layers, BarChart, Users, Layout, Download, Code, Award, Rocket, Sparkles, Flame, TrendingUp, Diamond
} from 'lucide-react';
import PageTransition from '../components/PageTransition';

// Theme accent for App Development
const THEME_ACCENT = {
  primary: "#2563EB", // Blue
  secondary: "#6366F1", // Indigo
  accent: "#10B981", // Emerald
  gradient: "linear-gradient(135deg, #2563EB 0%, #6366F1 50%, #10B981 100%)"
};

// Hero Section
const AppDevHeroSection = () => {
  return (
    <div className="relative overflow-hidden bg-gradient-to-b from-white to-blue-50 dark:from-black dark:to-blue-950 min-h-screen flex flex-col items-center justify-center px-4 sm:px-0">
      {/* Animated background */}
      <div className="absolute inset-0 overflow-hidden">
        <div className="absolute -top-40 -right-40 w-[40rem] h-[40rem] rounded-full bg-gradient-to-r from-blue-300/40 via-indigo-300/40 to-emerald-300/40 dark:from-blue-600/40 dark:via-indigo-500/40 dark:to-emerald-500/40 blur-3xl animate-blob hidden sm:block"></div>
        <div className="absolute top-60 -left-20 w-[30rem] h-[30rem] rounded-full bg-gradient-to-r from-indigo-300/40 via-emerald-300/40 to-blue-300/40 dark:from-indigo-600/40 dark:via-emerald-500/40 dark:to-blue-500/40 blur-3xl animate-blob animation-delay-2000 hidden sm:block"></div>
        <div className="absolute bottom-20 right-60 w-[35rem] h-[35rem] rounded-full bg-gradient-to-r from-emerald-300/40 via-blue-300/40 to-indigo-300/40 dark:from-emerald-600/40 dark:via-blue-500/40 dark:to-indigo-500/40 blur-3xl animate-blob animation-delay-4000 hidden sm:block"></div>
      </div>
      <div className="absolute inset-0 bg-noise opacity-[0.03]"></div>
      <div className="relative max-w-7xl mx-auto pt-20 pb-20 sm:pt-24 sm:pb-32 px-2 sm:px-6 md:px-8">
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-10 sm:gap-16 items-center">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
          >
            <div className="flex flex-wrap items-center gap-3 mb-4 sm:mb-6">
              <div className="px-3 py-1 rounded-full bg-blue-100 dark:bg-blue-500/20 text-blue-600 dark:text-blue-300 text-xs font-medium border border-blue-200 dark:border-blue-500/30">
                #AppInnovation
              </div>
              <div className="px-3 py-1 rounded-full bg-emerald-100 dark:bg-emerald-500/20 text-emerald-600 dark:text-emerald-300 text-xs font-medium border border-emerald-200 dark:border-emerald-500/30">
                Modern UX
              </div>
            </div>
            <h1 className="text-3xl sm:text-4xl lg:text-7xl font-bold text-gray-900 dark:text-white leading-tight">
              Build Your <br />
              <div className="mt-2 relative inline-flex flex-col">
                <div className="flex items-center">
                  <span className="text-transparent bg-clip-text" style={{ backgroundImage: THEME_ACCENT.gradient }}>
                    Dream App
                  </span>
                  <motion.div
                    initial={{ scale: 0.9, opacity: 0 }}
                    animate={{ scale: 1, opacity: 1 }}
                    transition={{ delay: 0.3, duration: 0.4 }}
                    className="ml-2 sm:ml-4 text-emerald-400 transform rotate-12"
                  >
                    <Sparkles size={28} className="fill-emerald-400 stroke-emerald-500 sm:w-10 sm:h-10" />
                  </motion.div>
                </div>
                <motion.div
                  initial={{ width: 0 }}
                  animate={{ width: "100%" }}
                  transition={{ delay: 0.8, duration: 0.8 }}
                  className="h-2 sm:h-3 bg-gradient-to-r from-blue-500 via-indigo-500 to-emerald-500 rounded-full mt-1 opacity-70"
                />
              </div>
            </h1>
            <p className="text-base sm:text-lg md:text-xl text-gray-600 dark:text-zinc-300 my-6 sm:my-8 max-w-lg leading-relaxed">
              We design and develop world-class mobile apps that delight users and drive business growth. From concept to launch, our expert team brings your vision to life.
            </p>
            <div className="flex flex-col sm:flex-row gap-3 sm:gap-4 mb-8 sm:mb-10">
              <button className="group px-6 sm:px-8 py-3 sm:py-4 rounded-xl font-medium text-white bg-gradient-to-r from-blue-600 to-emerald-600 hover:from-blue-700 hover:to-emerald-700 transition-all duration-300 flex items-center justify-center gap-2 shadow-lg shadow-blue-300/30 dark:shadow-blue-900/30 text-base sm:text-lg">
                Start Your Project
                <ArrowRight size={18} className="group-hover:translate-x-1 transition-transform" />
              </button>
              <button className="px-6 sm:px-8 py-3 sm:py-4 rounded-xl font-medium border border-blue-200 dark:border-blue-800 text-blue-600 dark:text-blue-300 hover:bg-blue-50 dark:hover:bg-blue-900/30 transition-all duration-300 backdrop-blur-sm text-base sm:text-lg">
                View Portfolio
              </button>
            </div>
            <div className="flex items-center">
              <div className="flex -space-x-4 mr-3 sm:mr-5">
                {[1, 2, 3, 4].map((num) => (
                  <div 
                    key={num}
                    className="w-8 h-8 sm:w-10 sm:h-10 rounded-full border-2 border-white dark:border-zinc-900 overflow-hidden shadow-md"
                  >
                    <img 
                      src={`https://randomuser.me/api/portraits/men/${num + 20}.jpg`}
                      alt={`Client ${num}`}
                      className="w-full h-full object-cover"
                    />
                  </div>
                ))}
                <div className="w-8 h-8 sm:w-10 sm:h-10 rounded-full bg-blue-100 dark:bg-blue-800 border-2 border-white dark:border-zinc-900 flex items-center justify-center text-xs font-bold text-blue-600 dark:text-blue-300">
                  +100
                </div>
              </div>
              <div>
                <div className="flex items-center gap-1 mb-1">
                  {[1, 2, 3, 4, 5].map((star) => (
                    <Star key={star} size={12} className="text-yellow-400 fill-yellow-400 sm:w-3.5 sm:h-3.5" />
                  ))}
                  <span className="ml-1 text-xs sm:ml-1.5 sm:text-sm font-medium text-gray-700 dark:text-zinc-300">5.0/5</span>
                </div>
                <p className="text-xs sm:text-sm text-gray-500 dark:text-zinc-400">
                  From <span className="font-medium">100+</span> happy clients
                </p>
              </div>
            </div>
          </motion.div>
          {/* App mockup */}
          <motion.div
            initial={{ opacity: 0, scale: 0.95 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.7, delay: 0.2 }}
            className="relative hidden lg:block"
          >
            <div className="relative">
              <div className="absolute -inset-1.5 bg-gradient-to-r from-blue-500 to-emerald-500 rounded-3xl blur-lg opacity-60 dark:opacity-80 animate-pulse"></div>
              <div className="relative bg-white dark:bg-zinc-900 rounded-3xl border border-gray-200 dark:border-zinc-800 shadow-2xl overflow-hidden">
                <div className="px-4 pt-4 pb-2 flex items-center justify-between">
                  <div className="flex space-x-1.5">
                    <div className="w-3 h-3 rounded-full bg-red-500"></div>
                    <div className="w-3 h-3 rounded-full bg-yellow-500"></div>
                    <div className="w-3 h-3 rounded-full bg-green-500"></div>
                  </div>
                  <div className="h-1.5 w-1/4 rounded-full bg-gray-200 dark:bg-zinc-700"></div>
                  <div className="w-4 h-4 rounded-full bg-gray-200 dark:bg-zinc-700"></div>
                </div>
                <div className="p-4">
                  <div className="bg-gray-50 dark:bg-zinc-800 rounded-2xl overflow-hidden">
                    <div className="px-4 py-3 border-b border-gray-200 dark:border-zinc-700 flex justify-between items-center">
                      <div className="flex items-center gap-2">
                        <div className="w-8 h-8 rounded-full bg-gradient-to-br from-blue-600 to-emerald-500 flex items-center justify-center">
                          <span className="text-sm text-white font-medium">A</span>
                        </div>
                        <div>
                          <div className="text-sm font-medium text-gray-900 dark:text-white">AppDevPro</div>
                          <div className="text-xs text-gray-500 dark:text-zinc-400">@appdevpro</div>
                        </div>
                      </div>
                      <div className="flex items-center gap-2">
                        <div className="text-xs px-2 py-1 rounded-md bg-gradient-to-r from-blue-500 to-emerald-500 text-white flex items-center gap-1">
                          <Flame size={10} className="fill-yellow-400 stroke-none" />
                          <span>Featured</span>
                        </div>
                      </div>
                    </div>
                    <div className="p-3">
                      <div className="aspect-video rounded-xl overflow-hidden bg-gradient-to-br from-blue-500 to-emerald-500 mb-3 relative">
                        <img 
                          src="https://images.unsplash.com/photo-1519125323398-675f0ddb6308?auto=format&fit=crop&w=800&q=80" 
                          alt="App showcase" 
                          className="w-full h-full object-cover"
                        />
                        <div className="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent"></div>
                        <div className="absolute bottom-3 left-3 right-3 text-white">
                          <div className="text-sm font-medium mb-1">Award-winning Fitness App</div>
                          <div className="flex items-center text-xs">
                            <span>1.2M downloads</span>
                            <span className="mx-2">â¢</span>
                            <span>2024</span>
                          </div>
                        </div>
                        <div className="absolute top-3 right-3 px-2 py-1 rounded-md bg-black/50 backdrop-blur-sm text-white text-xs flex items-center gap-1">
                          <Zap size={10} className="text-yellow-400" />
                          <span>LIVE</span>
                        </div>
                      </div>
                      <div className="mb-3 text-sm text-gray-700 dark:text-zinc-300">
                        Our latest project leverages the newest tech for seamless user experience and high performance. #AppDesign #MobileUX ð
                      </div>
                      <div className="flex flex-wrap gap-1 mb-3">
                        {["ReactNative", "Flutter", "Swift"].map((tag, i) => (
                          <span key={i} className="text-xs px-2 py-0.5 rounded-full bg-gray-100 dark:bg-zinc-700 text-blue-600 dark:text-blue-300">
                            #{tag}
                          </span>
                        ))}
                      </div>
                      <div className="flex justify-between items-center mt-3 pt-3 border-t border-gray-200 dark:border-zinc-700">
                        <div className="flex gap-5">
                          <div className="flex items-center gap-1">
                            <Star size={16} className="text-yellow-400" />
                            <span className="text-xs text-gray-500 dark:text-zinc-400">4.9</span>
                          </div>
                          <div className="flex items-center gap-1">
                            <Users size={16} className="text-blue-500" />
                            <span className="text-xs text-gray-500 dark:text-zinc-400">50K+</span>
                          </div>
                        </div>
                        <div className="flex items-center text-xs font-medium px-2 py-1 rounded-full bg-emerald-100 dark:bg-emerald-900/30 text-emerald-600 dark:text-emerald-400">
                          <TrendingUp size={12} className="mr-1" />
                          +120% Growth
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div className="absolute -top-8 -right-8 p-4 bg-white dark:bg-zinc-800 rounded-xl shadow-lg rotate-6 transform hover:rotate-0 transition-transform duration-300 border border-gray-100 dark:border-zinc-700">
                <Smartphone size={24} className="text-blue-500" />
              </div>
              <div className="absolute bottom-10 -left-8 p-4 bg-white dark:bg-zinc-800 rounded-xl shadow-lg -rotate-6 transform hover:rotate-0 transition-transform duration-300 border border-gray-100 dark:border-zinc-700">
                <Code size={24} className="text-indigo-500" />
              </div>
              <div className="absolute top-1/2 -right-6 p-3 bg-white dark:bg-zinc-800 rounded-lg shadow-lg rotate-12 transform hover:rotate-0 transition-transform duration-300 border border-gray-100 dark:border-zinc-700">
                <Award size={20} className="text-emerald-500" />
              </div>
            </div>
          </motion.div>
        </div>
      </div>
      <div className="absolute bottom-0 inset-x-0 h-16 sm:h-24 bg-gradient-to-t from-white dark:from-black to-transparent"></div>
    </div>
  );
};

// Services Section
const AppDevServicesSection = () => {
  const services = [
    {
      title: "Custom App Development",
      description: "Tailored mobile solutions for iOS, Android, and cross-platform needs.",
      icon: <Smartphone className="w-7 h-7" />, color: "from-blue-600 to-emerald-400"
    },
    {
      title: "UI/UX Design",
      description: "Stunning, intuitive interfaces that keep users engaged.",
      icon: <Layout className="w-7 h-7" />, color: "from-indigo-600 to-blue-400"
    },
    {
      title: "Performance Optimization",
      description: "Lightning-fast apps with smooth animations and minimal load times.",
      icon: <Zap className="w-7 h-7" />, color: "from-emerald-500 to-blue-400"
    },
    {
      title: "Security & Compliance",
      description: "Enterprise-grade security and privacy for user trust.",
      icon: <Shield className="w-7 h-7" />, color: "from-blue-600 to-indigo-400"
    },
    {
      title: "App Store Launch",
      description: "End-to-end support for successful app launches and marketing.",
      icon: <Rocket className="w-7 h-7" />, color: "from-emerald-600 to-blue-400"
    },
    {
      title: "Ongoing Support",
      description: "Continuous updates, analytics, and feature enhancements.",
      icon: <Settings className="w-7 h-7" />, color: "from-indigo-600 to-emerald-400"
    },
  ];
  return (
    <div className="relative py-24 px-4 sm:px-6 lg:px-8 bg-white dark:bg-black">
      <div className="absolute inset-0 pointer-events-none overflow-hidden">
        <div className="absolute -left-20 top-40 w-96 h-96 rounded-full bg-blue-100 dark:bg-blue-900/20 blur-3xl"></div>
        <div className="absolute right-20 bottom-20 w-80 h-80 rounded-full bg-emerald-100 dark:bg-emerald-900/20 blur-3xl"></div>
      </div>
      <div className="max-w-4xl mx-auto text-center mb-16">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          className="inline-flex items-center justify-center px-4 py-1.5 mb-6 text-sm font-medium uppercase tracking-wider text-blue-700 dark:text-blue-300 bg-blue-50 dark:bg-blue-900/30 rounded-full border border-blue-200 dark:border-blue-700/50"
        >
          Our Services
        </motion.div>
        <motion.h2
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ delay: 0.1 }}
          className="text-3xl md:text-5xl font-bold mb-6 text-gray-900 dark:text-white"
        >
          Mobile Solutions That <span className="text-transparent bg-clip-text" style={{ backgroundImage: THEME_ACCENT.gradient }}>Stand Out</span>
        </motion.h2>
        <motion.p
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ delay: 0.2 }}
          className="text-xl text-gray-600 dark:text-zinc-300"
        >
          From ideation to launch, we deliver apps that users love and businesses trust.
        </motion.p>
      </div>
      <div className="max-w-7xl mx-auto">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {services.map((service, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.5, delay: index * 0.1 }}
              whileHover={{ y: -8, transition: { duration: 0.3 } }}
              className="group relative"
            >
              <div className="absolute inset-x-0 bottom-0 h-px bg-gradient-to-r from-transparent via-blue-500 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-500 group-hover:h-[2px]"></div>
              <div className="relative bg-white dark:bg-zinc-900 rounded-2xl p-8 shadow-lg border border-gray-100 dark:border-zinc-800 h-full transition-all duration-300 group-hover:shadow-xl">
                <div className={`mb-6 w-16 h-16 rounded-2xl flex items-center justify-center bg-blue-50 dark:bg-blue-950/30 border-blue-100 dark:border-blue-900/50 border-2`}>
                  <div className="text-blue-600 dark:text-blue-400">
                    {service.icon}
                  </div>
                </div>
                <div className="w-12 h-1.5 rounded-full mb-4 bg-gradient-to-r opacity-80" style={{ backgroundImage: `linear-gradient(to right, ${service.color.replace('from-', '').replace('to-', '')})` }}></div>
                <h3 className="text-xl font-bold mb-4 text-gray-900 dark:text-white group-hover:text-transparent bg-clip-text transition-all duration-300"
                  style={{ backgroundImage: `linear-gradient(to right, ${service.color.replace('from-', '').replace('to-', '')})` }}>
                  {service.title}
                </h3>
                <p className="text-gray-600 dark:text-zinc-400 mb-8">
                  {service.description}
                </p>
                <div className="mt-auto pt-6 border-t border-gray-100 dark:border-zinc-800">
                  <a href="#" className={`inline-flex items-center text-sm font-medium text-blue-600 dark:text-blue-400 hover:underline`}>
                    Learn more
                    <ArrowRight size={16} className="ml-2 group-hover:translate-x-1 transition-transform duration-300" />
                  </a>
                </div>
              </div>
            </motion.div>
          ))}
        </div>
      </div>
    </div>
  );
};

// Technology Stack Section
const AppDevTechStackSection = () => {
  const stack = [
    { name: "React Native", icon: <Code className="w-7 h-7 text-blue-500" />, color: "bg-blue-50 dark:bg-blue-900/20" },
    { name: "Flutter", icon: <Code className="w-7 h-7 text-indigo-500" />, color: "bg-indigo-50 dark:bg-indigo-900/20" },
    { name: "Swift", icon: <Code className="w-7 h-7 text-orange-500" />, color: "bg-orange-50 dark:bg-orange-900/20" },
    { name: "Kotlin", icon: <Code className="w-7 h-7 text-purple-500" />, color: "bg-purple-50 dark:bg-purple-900/20" },
    { name: "Firebase", icon: <Code className="w-7 h-7 text-yellow-500" />, color: "bg-yellow-50 dark:bg-yellow-900/20" },
    { name: "AWS", icon: <Code className="w-7 h-7 text-emerald-500" />, color: "bg-emerald-50 dark:bg-emerald-900/20" },
  ];
  return (
    <div className="relative py-24 px-4 sm:px-6 lg:px-8 bg-gray-50 dark:bg-zinc-950">
      <div className="absolute inset-0 pointer-events-none overflow-hidden">
        <div className="absolute -left-20 top-40 w-96 h-96 rounded-full bg-blue-100 dark:bg-blue-900/10 blur-3xl"></div>
        <div className="absolute -right-20 bottom-40 w-96 h-96 rounded-full bg-emerald-100 dark:bg-emerald-900/10 blur-3xl"></div>
      </div>
      <div className="max-w-4xl mx-auto text-center mb-16">
        <div className="inline-flex items-center justify-center px-4 py-1.5 mb-6 text-sm font-medium uppercase tracking-wider text-indigo-700 dark:text-indigo-300 bg-indigo-50 dark:bg-indigo-900/30 rounded-full border border-indigo-200 dark:border-indigo-800/30">
          Tech Stack
        </div>
        <h2 className="text-3xl md:text-5xl font-bold mb-6 text-gray-900 dark:text-white">
          Powered by <span className="text-transparent bg-clip-text" style={{ backgroundImage: THEME_ACCENT.gradient }}>Modern Tech</span>
        </h2>
        <p className="text-xl text-gray-600 dark:text-zinc-300">
          We use the latest frameworks and cloud platforms for robust, scalable, and future-proof apps.
        </p>
      </div>
      <div className="max-w-7xl mx-auto">
        <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-8">
          {stack.map((tech, i) => (
            <div key={i} className={`flex flex-col items-center text-center p-4 rounded-xl hover:bg-blue-50 dark:hover:bg-blue-900/10 transition-all ${tech.color}`}>
              <div className="w-16 h-16 mb-4 flex items-center justify-center">
                {tech.icon}
              </div>
              <h3 className="font-medium mb-1">{tech.name}</h3>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

// Case Studies Section
const AppDevCaseStudiesSection = () => {
  const cases = [
    {
      title: "FitTrack Pro",
      category: "Fitness",
      image: "https://images.unsplash.com/photo-1605296867304-46d5465a13f1?w=800&q=80",
      results: "300% user growth in 6 months",
      description: "A comprehensive fitness tracking app with personalized workout plans and nutrition guidance."
    },
    {
      title: "QuickOrder",
      category: "Food Delivery",
      image: "https://images.unsplash.com/photo-1565299585323-38d6b0865b47?w=800&q=80",
      results: "50K+ daily orders processed",
      description: "Streamlined food ordering platform with real-time delivery tracking and payment processing."
    },
    {
      title: "SecurePay",
      category: "Finance",
      image: "https://images.unsplash.com/photo-1563013544-824ae1b704d3?w=800&q=80",
      results: "$10M+ in transactions monthly",
      description: "Secure mobile payment solution with advanced fraud detection and instant transfers."
    }
  ];
  return (
    <div className="relative py-24 px-4 sm:px-6 lg:px-8 bg-white dark:bg-black">
      <div className="absolute inset-0 pointer-events-none overflow-hidden">
        <div className="absolute -left-20 top-40 w-96 h-96 rounded-full bg-blue-100 dark:bg-blue-900/20 blur-3xl"></div>
        <div className="absolute right-20 bottom-20 w-80 h-80 rounded-full bg-emerald-100 dark:bg-emerald-900/20 blur-3xl"></div>
      </div>
      <div className="max-w-4xl mx-auto text-center mb-16">
        <div className="inline-flex items-center justify-center px-4 py-1.5 mb-6 text-sm font-medium uppercase tracking-wider text-emerald-700 dark:text-emerald-300 bg-emerald-50 dark:bg-emerald-900/30 rounded-full border border-emerald-200 dark:border-emerald-800/30">
          Case Studies
        </div>
        <h2 className="text-3xl md:text-5xl font-bold mb-6 text-gray-900 dark:text-white">
          Real Results, <span className="text-transparent bg-clip-text" style={{ backgroundImage: THEME_ACCENT.gradient }}>Real Impact</span>
        </h2>
        <p className="text-xl text-gray-600 dark:text-zinc-300">
          See how we help brands launch, scale, and win in the app economy.
        </p>
      </div>
      <div className="max-w-7xl mx-auto">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mt-16">
          {cases.map((project, index) => (
            <div key={index} className="rounded-xl overflow-hidden bg-background border border-blue-100 dark:border-blue-900/20 hover:border-blue-400 dark:hover:border-blue-400 transition-all shadow-sm hover:shadow-md">
              <div className="h-48 overflow-hidden">
                <img 
                  src={project.image} 
                  alt={project.title} 
                  className="w-full h-full object-cover transition-transform hover:scale-105"
                  loading="lazy"
                />
              </div>
              <div className="p-6">
                <div className="flex items-center justify-between mb-3">
                  <span className="text-xs px-3 py-1 rounded-full bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-300 font-medium">{project.category}</span>
                  <span className="text-sm font-medium text-emerald-500">{project.results}</span>
                </div>
                <h3 className="text-xl font-bold mb-2">{project.title}</h3>
                <p className="text-foreground/70 text-sm mb-4">{project.description}</p>
                <a href="#" className="inline-flex items-center text-sm text-blue-600 dark:text-blue-400 font-medium">
                  View Case Study <ArrowRight className="w-3 h-3 ml-1" />
                </a>
              </div>
            </div>
          ))}
        </div>
        <div className="text-center mt-12">
          <a href="#" className="inline-flex items-center px-6 py-3 border border-blue-300 text-blue-600 dark:text-blue-300 rounded-xl font-medium hover:bg-blue-50 dark:hover:bg-blue-900/10 transition-all gap-2">
            View All Case Studies
            <ArrowRight className="w-4 h-4" />
          </a>
        </div>
      </div>
    </div>
  );
};

// Pricing Section
const AppDevPlansSection = () => {
  const plans = [
    {
      name: "Starter",
      price: "1,499",
      description: "Perfect for startups and small businesses",
      features: [
        "iOS or Android app",
        "Basic UI/UX design",
        "Standard analytics",
        "3 months support"
      ],
      highlighted: false,
      color: "from-blue-600 to-emerald-600"
    },
    {
      name: "Professional",
      price: "3,499",
      description: "For growing brands and ambitious projects",
      features: [
        "iOS & Android app",
        "Custom UI/UX design",
        "Advanced analytics",
        "12 months support",
        "App store launch"
      ],
      highlighted: true,
      color: "from-indigo-600 to-blue-600"
    },
    {
      name: "Enterprise",
      price: "7,999",
      description: "Full-scale solutions for large organizations",
      features: [
        "Multi-platform app",
        "Premium UI/UX & branding",
        "Complete analytics suite",
        "24/7 priority support",
        "Dedicated project manager"
      ],
      highlighted: false,
      color: "from-emerald-600 to-blue-600"
    }
  ];
  return (
    <div className="relative py-24 px-4 sm:px-6 lg:px-8 bg-gray-50 dark:bg-zinc-950">
      <div className="absolute inset-0 pointer-events-none overflow-hidden">
        <div className="absolute -left-20 top-40 w-96 h-96 rounded-full bg-blue-100 dark:bg-blue-900/10 blur-3xl"></div>
        <div className="absolute -right-20 bottom-40 w-96 h-96 rounded-full bg-emerald-100 dark:bg-emerald-900/10 blur-3xl"></div>
      </div>
      <div className="max-w-4xl mx-auto text-center mb-16">
        <div className="inline-flex items-center justify-center px-4 py-1.5 mb-6 text-sm font-medium uppercase tracking-wider text-emerald-700 dark:text-emerald-300 bg-emerald-50 dark:bg-emerald-900/30 rounded-full border border-emerald-200 dark:border-emerald-800/30">
          Pricing
        </div>
        <h2 className="text-3xl md:text-5xl font-bold mb-6 text-gray-900 dark:text-white">
          Choose Your <span className="text-transparent bg-clip-text" style={{ backgroundImage: THEME_ACCENT.gradient }}>Plan</span>
        </h2>
        <p className="text-xl text-gray-600 dark:text-zinc-300">
          Flexible packages for every stage of your app journey
        </p>
      </div>
      <div className="max-w-7xl mx-auto">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {plans.map((plan, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.5, delay: index * 0.1 }}
              className="group relative"
            >
              {plan.highlighted && (
                <div className="absolute -inset-4 bg-gradient-to-r from-indigo-600 to-blue-600 rounded-3xl opacity-20 dark:opacity-30 blur-lg group-hover:opacity-30 dark:group-hover:opacity-40 transition-opacity duration-500"></div>
              )}
              <div className={`relative rounded-2xl overflow-hidden ${
                plan.highlighted 
                  ? 'border-2 border-indigo-500 dark:border-indigo-500'
                  : 'border border-gray-200 dark:border-zinc-800'
              }`}>
                <div className="h-2 w-full bg-gradient-to-r" style={{
                  backgroundImage: `linear-gradient(to right, ${plan.color.replace('from-', '').replace('to-', '')})`
                }}></div>
                <div className="bg-white dark:bg-zinc-900 p-8 lg:p-10">
                  {plan.highlighted && (
                    <div className="absolute top-4 right-4">
                      <div className="bg-gradient-to-r from-indigo-500/20 to-blue-500/20 border border-indigo-500/30 text-indigo-700 dark:text-indigo-300 text-xs font-medium px-3 py-1.5 rounded-full">
                        Most Popular
                      </div>
                    </div>
                  )}
                  <div className="flex items-center gap-4">
                    <h3 className="text-2xl font-bold text-gray-900 dark:text-white mb-4">
                      {plan.name}
                    </h3>
                    {plan.highlighted && (
                      <div className="w-6 h-6">
                        <Sparkles className="w-6 h-6 text-yellow-400" />
                      </div>
                    )}
                  </div>
                  <div className="mb-6">
                    <span className="text-4xl font-bold text-gray-900 dark:text-white">${plan.price}</span>
                    <span className="text-gray-500 dark:text-zinc-400">/project</span>
                  </div>
                  <p className="text-gray-600 dark:text-zinc-400 mb-8 min-h-[50px]">
                    {plan.description}
                  </p>
                  <button 
                    className={`w-full py-3 rounded-xl font-medium mb-10 transition-all duration-300 ${
                      plan.highlighted
                        ? 'bg-gradient-to-r from-indigo-600 to-blue-600 text-white hover:from-indigo-700 hover:to-blue-700 shadow-lg shadow-indigo-300/30 dark:shadow-indigo-900/20'
                        : 'bg-gray-100 dark:bg-zinc-800 text-gray-900 dark:text-white hover:bg-gray-200 dark:hover:bg-zinc-700'
                    }`}
                  >
                    Get Started
                  </button>
                  <div className="space-y-4">
                    {plan.features.map((feature, i) => (
                      <div key={i} className="flex items-center gap-3">
                        <div className="w-5 h-5 rounded-full flex items-center justify-center flex-shrink-0 bg-gradient-to-br from-blue-100 to-emerald-100 dark:from-blue-900/20 dark:to-emerald-900/20">
                          <Check size={12} className="text-blue-600 dark:text-blue-400" />
                        </div>
                        <span className="text-gray-700 dark:text-zinc-300 text-sm">
                          {feature}
                        </span>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            </motion.div>
          ))}
        </div>
        <div className="mt-16 p-8 sm:p-10 border border-gray-200 dark:border-zinc-800 rounded-3xl bg-white dark:bg-zinc-900 shadow-lg max-w-3xl mx-auto">
          <div className="flex flex-col md:flex-row items-center justify-between gap-8">
            <div>
              <h3 className="text-2xl font-bold text-gray-900 dark:text-white mb-2">Need something custom?</h3>
              <p className="text-gray-600 dark:text-zinc-400">
                We create tailor-made packages for unique business needs
              </p>
            </div>
            <button className="px-8 py-3 rounded-xl font-medium text-white bg-gradient-to-r from-blue-600 to-emerald-600 hover:from-blue-700 hover:to-emerald-700 transition-all duration-300 flex items-center gap-2 whitespace-nowrap">
              Let's Talk
              <ArrowRight size={18} />
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

// CTA Section
const AppDevCTASection = () => {
  return (
    <div className="py-24 px-4 sm:px-6 lg:px-8 bg-black text-white relative overflow-hidden">
      <div className="absolute inset-0">
        <div className="absolute top-0 w-full h-full">
          <div className="absolute -top-24 left-1/4 w-96 h-96 bg-blue-600 rounded-full mix-blend-multiply filter blur-[128px] opacity-30 animate-blob"></div>
          <div className="absolute top-0 -right-24 w-96 h-96 bg-indigo-600 rounded-full mix-blend-multiply filter blur-[128px] opacity-30 animate-blob animation-delay-2000"></div>
          <div className="absolute bottom-0 left-0 w-96 h-96 bg-emerald-600 rounded-full mix-blend-multiply filter blur-[128px] opacity-30 animate-blob animation-delay-4000"></div>
        </div>
        <div className="absolute inset-0 bg-noise opacity-[0.02]"></div>
      </div>
      <div className="max-w-5xl mx-auto relative z-10">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.6 }}
          className="text-center"
        >
          <div className="mb-6 inline-flex gap-3 mx-auto">
            <div className="px-4 py-1.5 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 text-white text-sm font-medium">
              Ready to build?
            </div>
          </div>
          <h2 className="text-4xl md:text-6xl lg:text-7xl font-bold mb-8 leading-none">
            Let's Launch Your
            <div className="relative inline-block mt-2">
              <span className="text-transparent bg-clip-text ml-4" style={{ backgroundImage: THEME_ACCENT.gradient }}>
                Next Big App
              </span>
              <motion.div
                initial={{ scale: 0.9, opacity: 0 }}
                animate={{ scale: 1, opacity: 1 }}
                transition={{ delay: 0.6, duration: 0.4 }}
                className="absolute -right-12 -top-3 text-yellow-400 transform rotate-12"
              >
                <Sparkles size={40} className="fill-yellow-400" />
              </motion.div>
            </div>
          </h2>
          <p className="text-xl text-zinc-400 mb-12 max-w-3xl mx-auto">
            Get in touch today and see how we can turn your app idea into a reality with world-class design and engineering.
          </p>
          <div className="flex flex-col sm:flex-row justify-center gap-4 max-w-xl mx-auto">
            <button className="group px-8 py-4 rounded-xl font-medium text-white bg-gradient-to-r from-blue-600 to-emerald-600 hover:from-blue-700 hover:to-emerald-700 transition-all duration-300 flex items-center justify-center gap-2 shadow-xl shadow-blue-900/20">
              Schedule Free Consultation
              <ArrowRight size={18} className="group-hover:translate-x-1 transition-transform" />
            </button>
            <button className="px-8 py-4 rounded-xl font-medium text-white bg-white/10 backdrop-blur-sm hover:bg-white/15 transition-all duration-300 border border-white/10">
              View Our Work
            </button>
          </div>
          <div className="mt-16 grid grid-cols-2 md:grid-cols-4 gap-8 max-w-3xl mx-auto">
            {[
              { label: "Apps Launched", value: "120+" },
              { label: "Active Users", value: "2M+" },
              { label: "Avg. Rating", value: "4.9/5" },
              { label: "Awards Won", value: "10+" }
            ].map((stat, i) => (
              <div key={i} className="">
                <p className="text-3xl font-bold text-white mb-1">{stat.value}</p>
                <p className="text-zinc-400 text-sm">{stat.label}</p>
              </div>
            ))}
          </div>
        </motion.div>
      </div>
    </div>
  );
};

const AppDevelopment = () => {
  return (
    <PageTransition>
      <div className="min-h-screen bg-white dark:bg-black text-gray-900 dark:text-white overflow-x-hidden">
        <AppDevHeroSection />
        <AppDevServicesSection />
        <AppDevTechStackSection />
        <AppDevCaseStudiesSection />
        <AppDevPlansSection />
        <AppDevCTASection />
      </div>
    </PageTransition>
  );
};

export default AppDevelopment;


</div>

//logo editing
<div>
import React, { useState } from "react";
import { motion } from "framer-motion";
import {
  Palette, PenTool, Layers, Download, MessageCircle, Award, CheckCircle2, Zap, Shield, ArrowRight, ImagePlus, FileType, LayoutGrid, Figma
} from "lucide-react";
import PageTransition from '../components/PageTransition';
import SectionHeader from '../components/ui/section-header';
import { Button } from '../components/ui/button';
import { Card, CardHeader, CardTitle, CardDescription, CardContent } from '../components/ui/card';
import { GradientText, GradientBackground } from '../components/ui/gradient';
import { Cover } from '../components/ui/cover';

// --- Hero Section ---
const LogoHero = () => (
  <section className="relative min-h-[80vh] flex items-center justify-center bg-gradient-to-b from-white to-blue-50 dark:from-black dark:to-blue-950 overflow-hidden px-4">
    <div className="absolute inset-0 pointer-events-none">
      <div className="absolute -top-40 -right-40 w-[40rem] h-[40rem] rounded-full bg-gradient-to-r from-blue-300/40 via-pink-300/40 to-indigo-300/40 dark:from-blue-600/40 dark:via-pink-500/40 dark:to-indigo-500/40 blur-3xl animate-blob hidden sm:block" />
      <div className="absolute top-60 -left-20 w-[30rem] h-[30rem] rounded-full bg-gradient-to-r from-indigo-300/40 via-emerald-300/40 to-blue-300/40 dark:from-indigo-600/40 dark:via-emerald-500/40 dark:to-blue-500/40 blur-3xl animate-blob animation-delay-2000 hidden sm:block" />
    </div>
    <div className="max-w-4xl mx-auto text-center relative z-10 py-24">
      <motion.div initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.7 }}>
        <div className="inline-flex items-center gap-3 mb-6">
          <span className="px-4 py-1.5 rounded-full bg-blue-100 dark:bg-blue-500/20 text-blue-600 dark:text-blue-300 text-xs font-medium border border-blue-200 dark:border-blue-500/30">#LogoDesignMagic</span>
          <span className="px-4 py-1.5 rounded-full bg-pink-100 dark:bg-pink-500/20 text-pink-600 dark:text-pink-300 text-xs font-medium border border-pink-200 dark:border-pink-500/30">Brand Identity</span>
        </div>
        <h1 className="text-4xl sm:text-5xl lg:text-7xl font-bold leading-tight mb-6">
          <GradientText from="from-blue-600" via="via-pink-500" to="to-indigo-600">
            Transform Your Brand with a Stunning Logo
          </GradientText>
        </h1>
        <p className="text-lg sm:text-xl text-gray-600 dark:text-zinc-300 mb-8 max-w-2xl mx-auto">
          We craft memorable, professional logos that capture your brand's unique personality and make a lasting impression.
        </p>
        <div className="flex flex-col sm:flex-row gap-4 justify-center mb-8">
          <Button variant="gradient" size="lg" animation="grow" className="px-8 py-4 text-lg">
            Start Your Logo Project <ArrowRight className="ml-2" />
          </Button>
          <Button variant="outline" size="lg" animation="grow" className="px-8 py-4 text-lg">
            View Portfolio
          </Button>
        </div>
        <div className="flex flex-wrap justify-center gap-6 text-sm text-gray-500 dark:text-zinc-400">
          <div className="flex items-center gap-2"><CheckCircle2 className="text-green-500" /> Unlimited Revisions</div>
          <div className="flex items-center gap-2"><Shield className="text-blue-500" /> 100% Ownership</div>
          <div className="flex items-center gap-2"><Zap className="text-yellow-500" /> Fast Turnaround</div>
        </div>
      </motion.div>
    </div>
  </section>
);

// --- Process Section ---
const processSteps = [
  {
    icon: <MessageCircle className="w-7 h-7 text-blue-500" />,
    title: "Discovery",
    desc: "We discuss your vision, goals, and preferences to understand your brand."
  },
  {
    icon: <PenTool className="w-7 h-7 text-pink-500" />,
    title: "Concepts",
    desc: "We create unique logo concepts tailored to your requirements."
  },
  {
    icon: <Layers className="w-7 h-7 text-indigo-500" />,
    title: "Refinement",
    desc: "We refine your chosen concept with your feedback until it's perfect."
  },
  {
    icon: <Download className="w-7 h-7 text-green-500" />,
    title: "Delivery",
    desc: "You receive all final files in multiple formats for print and digital."
  }
];
const ProcessSection = () => (
  <section className="py-24 px-4 bg-white dark:bg-black relative overflow-hidden">
    <div className="absolute inset-0 pointer-events-none">
      <div className="absolute -left-20 top-40 w-96 h-96 rounded-full bg-blue-100 dark:bg-blue-900/20 blur-3xl" />
      <div className="absolute right-20 bottom-20 w-80 h-80 rounded-full bg-pink-100 dark:bg-pink-900/20 blur-3xl" />
    </div>
    <div className="max-w-7xl mx-auto relative z-10">
      <SectionHeader
        badge="How It Works"
        title={<><span className="text-blue-600">Our Logo Design Process</span></>}
        subtitle="A simple, collaborative approach to create your perfect logo."
        align="center"
      />
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
        {processSteps.map((step, i) => (
          <motion.div
            key={i}
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5, delay: i * 0.1 }}
            className="bg-white dark:bg-zinc-900 rounded-2xl p-8 shadow-lg border border-gray-100 dark:border-zinc-800 flex flex-col items-center text-center group hover:shadow-xl transition-all"
          >
            <div className="mb-6 w-16 h-16 rounded-2xl flex items-center justify-center bg-gradient-to-br from-blue-100 to-pink-100 dark:from-blue-900/20 dark:to-pink-900/20 border-2 border-blue-200 dark:border-blue-800">
              {step.icon}
            </div>
            <h3 className="text-xl font-bold mb-2 text-gray-900 dark:text-white">{step.title}</h3>
            <p className="text-gray-600 dark:text-zinc-400">{step.desc}</p>
          </motion.div>
        ))}
      </div>
    </div>
  </section>
);

// --- Portfolio Section ---
const logoPortfolio = [
  { image: "/api/placeholder/400/320", title: "Mountain Ventures", category: "Tech" },
  { image: "/api/placeholder/400/320", title: "Leaf Organics", category: "Food & Beverage" },
  { image: "/api/placeholder/400/320", title: "Wave Media", category: "Entertainment" },
  { image: "/api/placeholder/400/320", title: "Circle Finance", category: "Finance" },
  { image: "/api/placeholder/400/320", title: "Spark Fitness", category: "Health" },
  { image: "/api/placeholder/400/320", title: "Cube Storage", category: "Real Estate" }
];
const PortfolioSection = () => (
  <section className="py-24 px-4 bg-gray-50 dark:bg-zinc-950 relative overflow-hidden">
    <div className="absolute inset-0 pointer-events-none">
      <div className="absolute top-20 -right-40 w-[30rem] h-[30rem] rounded-full bg-blue-200/50 dark:bg-zinc-800/20 blur-3xl" />
      <div className="absolute bottom-20 -left-40 w-[30rem] h-[30rem] rounded-full bg-pink-200/50 dark:bg-zinc-800/20 blur-3xl" />
    </div>
    <div className="max-w-7xl mx-auto relative z-10">
      <SectionHeader
        badge="Portfolio"
        title={<><span className="text-pink-600">Logo Design Showcase</span></>}
        subtitle="Browse our collection of custom logo designs for clients across industries."
        align="center"
      />
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
        {logoPortfolio.map((item, i) => (
          <motion.div
            key={i}
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5, delay: i * 0.1 }}
            whileHover={{ y: -8, scale: 1.02 }}
            className="group relative overflow-hidden rounded-2xl bg-white dark:bg-zinc-900 border-2 border-blue-100 dark:border-blue-800 hover:border-pink-400 transition-colors shadow-lg"
          >
            <div className="aspect-square overflow-hidden">
              <img src={item.image} alt={item.title} className="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500" />
            </div>
            <div className="absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-end p-6">
              <div className="transform translate-y-4 group-hover:translate-y-0 transition-transform duration-300">
                <span className="px-2 py-1 bg-blue-500/80 text-white text-xs rounded-md mb-2 inline-block">{item.category}</span>
                <h3 className="text-white font-bold text-xl drop-shadow-md">{item.title}</h3>
                <div className="flex items-center gap-2 mt-2 text-white/80">
                  <ArrowRight className="w-4 h-4" />
                  <span className="text-sm">View case study</span>
                </div>
              </div>
            </div>
          </motion.div>
        ))}
      </div>
    </div>
  </section>
);

// --- Playground/Tools Section ---
const PlaygroundSection = () => {
  const [color, setColor] = useState('#3b82f6');
  const [shape, setShape] = useState('circle');
  const [symbol, setSymbol] = useState('star');
  const palette = [color, '#f59e42', '#f472b6', '#10b981', '#6366f1'];
  const symbolComponents = {
    star: <polygon points="50,0 61,35 98,35 68,57 79,91 50,70 21,91 32,57 2,35 39,35" fill="white" />, 
    bolt: <path d="M45,0 L20,50 L40,60 L25,100 L80,40 L50,35 L65,0 Z" fill="white" />, 
    leaf: <path d="M50,0 C20,25 0,50 0,75 C0,100 25,100 50,75 C75,100 100,100 100,75 C100,50 80,25 50,0 Z" fill="white" />, 
    drop: <path d="M50,0 C50,0 0,50 0,75 C0,100 25,100 50,100 C75,100 100,100 100,75 C100,50 50,0 50,0 Z" fill="white" />
  };
  return (
    <section className="py-24 px-4 bg-white dark:bg-black relative overflow-hidden">
      <div className="absolute inset-0 pointer-events-none">
        <div className="absolute -left-20 top-40 w-96 h-96 rounded-full bg-blue-100 dark:bg-blue-900/20 blur-3xl" />
        <div className="absolute right-20 bottom-20 w-80 h-80 rounded-full bg-pink-100 dark:bg-pink-900/20 blur-3xl" />
      </div>
      <div className="max-w-7xl mx-auto relative z-10">
        <SectionHeader
          badge="Interactive"
          title={<><span className="text-indigo-600">Logo Playground</span></>}
          subtitle="Experiment with shapes, colors, and symbols to preview your logo style."
          align="center"
        />
        <div className="grid grid-cols-1 md:grid-cols-2 gap-12">
          {/* Logo Builder */}
          <Card variant="glass" className="p-8 flex flex-col items-center">
            <CardHeader className="mb-6">
              <CardTitle>Logo Builder</CardTitle>
              <CardDescription>Customize a simple logo preview below.</CardDescription>
            </CardHeader>
            <div className="flex items-center justify-center mb-6">
              <motion.div
                className={`w-32 h-32 flex items-center justify-center bg-gradient-to-br from-blue-500 to-pink-400 shadow-lg`}
                style={{
                  borderRadius: shape === 'circle' ? '100%' : shape === 'square' ? '0' : shape === 'rounded' ? '20px' : '50% 20%'
                }}
                whileHover={{ scale: 1.1, rotate: 5 }}
                transition={{ type: "spring", stiffness: 400, damping: 10 }}
              >
                <svg viewBox="0 0 100 100" width="60%" height="60%">
                  {symbolComponents[symbol]}
                </svg>
              </motion.div>
            </div>
            <div className="flex gap-4 mb-4">
              {['circle', 'square', 'rounded', 'custom'].map(s => (
                <Button key={s} variant={shape === s ? 'gradient' : 'outline'} size="icon" onClick={() => setShape(s)} aria-label={s} />
              ))}
            </div>
            <div className="flex gap-4 mb-4">
              {Object.keys(symbolComponents).map(s => (
                <Button key={s} variant={symbol === s ? 'gradient' : 'outline'} size="icon" onClick={() => setSymbol(s)} aria-label={s}>
                  <svg viewBox="0 0 100 100" width="70%" height="70%" className="text-primary">
                    {symbolComponents[s]}
                  </svg>
                </Button>
              ))}
            </div>
            <input type="color" value={color} onChange={e => setColor(e.target.value)} className="w-24 h-10 rounded-full border-2 border-blue-200" aria-label="Pick color" />
          </Card>
          {/* Palette Preview */}
          <Card variant="glass" className="p-8 flex flex-col items-center">
            <CardHeader className="mb-6">
              <CardTitle>Color Palette</CardTitle>
              <CardDescription>Click a color to copy its hex code.</CardDescription>
            </CardHeader>
            <div className="flex gap-3 mb-6">
              {palette.map((c, i) => (
                <motion.div
                  key={i}
                  className="w-12 h-12 rounded-lg cursor-pointer border-2 border-blue-100 flex items-center justify-center group"
                  style={{ backgroundColor: c }}
                  whileHover={{ scale: 1.1 }}
                  onClick={() => navigator.clipboard.writeText(c)}
                >
                  <span className="opacity-0 group-hover:opacity-100 text-xs text-white bg-black/60 px-2 py-1 rounded absolute">{c}</span>
                </motion.div>
              ))}
            </div>
            <div className="w-20 h-20 rounded-lg border-2 border-blue-200 flex items-center justify-center" style={{ backgroundColor: palette[0] }}>
              <svg viewBox="0 0 24 24" width="70%" height="70%" style={{ fill: palette[1] }}>
                <path d="M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4M12,10.5A1.5,1.5 0 0,1 13.5,12A1.5,1.5 0 0,1 12,13.5A1.5,1.5 0 0,1 10.5,12A1.5,1.5 0 0,1 12,10.5Z" />
              </svg>
            </div>
          </Card>
        </div>
      </div>
    </section>
  );
};

// --- Pricing Section ---
const pricingPlans = [
  {
    name: "Starter",
    price: "199",
    description: "Perfect for new brands and startups.",
    features: ["2 logo concepts", "2 revisions", "Standard formats", "Delivery in 7 days"],
    color: "from-blue-600 to-indigo-600"
  },
  {
    name: "Pro",
    price: "399",
    description: "For growing businesses that want more options.",
    features: ["5 logo concepts", "Unlimited revisions", "All formats (AI, SVG, PNG, PDF)", "Delivery in 5 days"],
    color: "from-pink-600 to-purple-600"
  },
  {
    name: "Premium",
    price: "699",
    description: "For established brands seeking a full identity package.",
    features: ["10 logo concepts", "Unlimited revisions", "Brand guidelines PDF", "Delivery in 3 days"],
    color: "from-amber-500 to-orange-500"
  }
];
const PricingSection = () => (
  <section className="py-24 px-4 bg-gray-50 dark:bg-zinc-950 relative overflow-hidden">
    <div className="absolute inset-0 pointer-events-none">
      <div className="absolute -left-20 top-40 w-96 h-96 rounded-full bg-blue-100 dark:bg-blue-900/20 blur-3xl" />
      <div className="absolute right-20 bottom-20 w-80 h-80 rounded-full bg-pink-100 dark:bg-pink-900/20 blur-3xl" />
    </div>
    <div className="max-w-7xl mx-auto relative z-10">
      <SectionHeader
        badge="Pricing"
        title={<><span className="text-indigo-600">Logo Design Packages</span></>}
        subtitle="Flexible plans for every stage of your brand journey."
        align="center"
      />
      <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
        {pricingPlans.map((plan, i) => (
          <Card key={i} variant="glass" className="p-8 flex flex-col items-center border-2 border-blue-100 dark:border-blue-800">
            <CardHeader className="mb-4">
              <CardTitle className="text-2xl font-bold mb-2 text-gray-900 dark:text-white">{plan.name}</CardTitle>
              <span className={`inline-block mb-4 h-2 w-20 rounded-full bg-gradient-to-r ${plan.color}`}></span>
              <CardDescription className="mb-4 text-center">{plan.description}</CardDescription>
              <div className="mb-6 text-4xl font-bold text-gray-900 dark:text-white">${plan.price}</div>
            </CardHeader>
            <CardContent className="mb-6 w-full">
              <ul className="space-y-3">
                {plan.features.map((f, j) => (
                  <li key={j} className="flex items-center gap-2 text-gray-700 dark:text-zinc-300"><CheckCircle2 className="text-green-500" /> {f}</li>
                ))}
              </ul>
            </CardContent>
            <Button variant="gradient" size="lg" animation="grow" className="w-full mt-auto">Choose {plan.name}</Button>
          </Card>
        ))}
      </div>
    </div>
  </section>
);

// --- FAQ Section ---
const faqs = [
  {
    q: "How long does the logo design process take?",
    a: "Our typical timeline is 1-2 weeks, depending on your package and feedback speed."
  },
  {
    q: "How many concepts and revisions do I get?",
    a: "Starter includes 2 concepts and 2 revisions. Pro and Premium include more concepts and unlimited revisions."
  },
  {
    q: "What file formats will I receive?",
    a: "All packages include vector (AI, SVG), raster (PNG, JPG), and PDF files for print and digital use."
  },
  {
    q: "Do I own the copyright to my logo?",
    a: "Yes! You receive full copyright ownership after final payment."
  },
  {
    q: "What if I don't like any of the initial concepts?",
    a: "We'll create new concepts based on your feedback until you're satisfied (see package details)."
  }
];
const FAQSection = () => (
  <section className="py-24 px-4 bg-white dark:bg-black relative overflow-hidden">
    <div className="absolute inset-0 pointer-events-none">
      <div className="absolute -left-20 top-40 w-96 h-96 rounded-full bg-blue-100 dark:bg-blue-900/20 blur-3xl" />
      <div className="absolute right-20 bottom-20 w-80 h-80 rounded-full bg-pink-100 dark:bg-pink-900/20 blur-3xl" />
    </div>
    <div className="max-w-4xl mx-auto relative z-10">
      <SectionHeader
        badge="FAQ"
        title={<><span className="text-pink-600">Logo Design Questions</span></>}
        subtitle="Everything you need to know about our logo design process."
        align="center"
      />
      <div className="space-y-4 md:space-y-6">
        {faqs.map((faq, i) => (
          <motion.div
            key={i}
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5, delay: i * 0.1 }}
            className="rounded-xl bg-blue-50/30 dark:bg-blue-900/10 border border-blue-200 dark:border-blue-800 overflow-hidden"
          >
            <details className="group">
              <summary className="flex justify-between items-center cursor-pointer p-5 font-medium text-lg">
                <span>{faq.q}</span>
                <svg className="h-5 w-5 transition-transform group-open:rotate-180" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" /></svg>
              </summary>
              <div className="px-5 pb-5 text-gray-600 dark:text-zinc-400">
                <p>{faq.a}</p>
              </div>
            </details>
          </motion.div>
        ))}
      </div>
    </div>
  </section>
);

// --- CTA Section ---
const CTASection = () => (
  <section className="py-24 px-4 bg-gradient-to-br from-blue-600 via-pink-500 to-indigo-600 text-white relative overflow-hidden">
    <div className="absolute inset-0 bg-noise opacity-10 pointer-events-none" />
    <div className="max-w-3xl mx-auto text-center relative z-10">
      <motion.div initial={{ opacity: 0, y: 20 }} whileInView={{ opacity: 1, y: 0 }} viewport={{ once: true }} transition={{ duration: 0.7 }}>
        <div className="mb-6 inline-flex gap-3 mx-auto">
          <div className="px-4 py-1.5 rounded-full bg-white/10 backdrop-blur-sm border border-white/20 text-white text-sm font-medium">
            Ready to elevate your brand?
          </div>
        </div>
        <h2 className="text-4xl md:text-6xl font-bold mb-8 leading-none">
          Let's Design Your <GradientText from="from-pink-500" via="via-blue-500" to="to-indigo-500">Dream Logo</GradientText>
        </h2>
        <p className="text-xl text-white/80 mb-12 max-w-2xl mx-auto">
          Get started today and see how a professional logo can transform your business.
        </p>
        <Button variant="gradient" size="lg" animation="grow" className="px-8 py-4 text-lg">
          Start Your Logo Project <ArrowRight className="ml-2" />
        </Button>
      </motion.div>
    </div>
  </section>
);

// --- Main Page ---
export default function LogoDesign() {
  return (
    <PageTransition>
      <div className="min-h-screen bg-white dark:bg-black text-gray-900 dark:text-white overflow-x-hidden">
        <LogoHero />
        <ProcessSection />
        <PortfolioSection />
        <PlaygroundSection />
        <PricingSection />
        <FAQSection />
        <CTASection />
      </div>
    </PageTransition>
  );
}
</div>


//this code belongs to home.jsx with mobile responsive

<div>

import { motion, AnimatePresence, useScroll, useTransform } from "framer-motion";
import { useState, useRef, useEffect, memo } from "react";
import PageTransition from '../components/PageTransition';
import { Link } from "react-router-dom";
import { AuroraText } from "@/components/magicui/aurora-text";
import { Meteors } from "../components/ui/meteor-effect";
import * as THREE from "three";
import { 
  ArrowRight, Code, Users, Award, BarChart, 
  BadgeCheck, LineChart, Gamepad2, Palette, 
  VideoIcon, Brush, ArrowLeft, ArrowDown, MessageSquare, CheckCircle, Phone, MessageCircle, Smartphone, ArrowUpRight,
  Globe, Database, Shield, Gauge
} from "lucide-react";


/* THEME AND UI CONFIGURATION */
const THEME = {
  primary: {
    DEFAULT: "#0070F3", 
    light: "#3291FF",
  },
  secondary: {
    DEFAULT: "#7928CA",
  },
  background: {
    DEFAULT: "#FFFFFF",
    muted: "#F5F5F7",   
    dark: {
      DEFAULT: "#000000", 
      card: "#1C1C1E",  
      muted: "#1D1D1F",  
    }
  },
  foreground: {
    DEFAULT: "#1D1D1F", 
    muted: "#86868B",   
    dark: {
      DEFAULT: "#FFFFFF",
      muted: "#A1A1A6",
    }
  },
  accent: {
    blue: "#007AFF", // Standard Apple blue
    cyan: "#06B6D4",
    green: "#34C759", // Apple green
    yellow: "#FFCC00", // Apple yellow
    orange: "#FF9500", // Apple orange
  }
};

const UI = {
  card: {
    base: "rounded-3xl overflow-hidden border border-[#E5E5E7] dark:border-[#2C2C2E] hover:shadow-lg transition-all duration-300 bg-white dark:bg-[#1C1C1E]",
    padding: "p-6 md:p-8", // Consistent padding
    iconContainer: "mb-4 bg-[#F5F5F7] dark:bg-[#2C2C2E] w-14 h-14 rounded-xl flex items-center justify-center relative overflow-hidden",
    hover: {
      transform: "hover:-translate-y-1", 
      shine: "absolute inset-0 bg-gradient-to-tr from-white/0 via-white/30 dark:via-white/10 to-white/0 opacity-0 group-hover:opacity-100 transition-opacity duration-700"
    }
  },
  
  text: {
    heading: {
      h1: "text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold leading-tight tracking-tight",
      h2: "text-2xl sm:text-3xl md:text-4xl font-bold",
      h3: "text-xl md:text-2xl font-bold",
      h4: "text-lg font-semibold",
      section: "text-4xl md:text-5xl font-bold mt-3 mb-3 bg-clip-text text-transparent bg-gradient-to-r from-primary to-secondary" // Kept for specific headings
    },
    body: {
      default: "text-foreground-muted dark:text-foreground-dark-muted",
      sm: "text-sm text-foreground-muted dark:text-foreground-dark-muted",
      lg: "text-lg text-foreground-muted dark:text-foreground-dark-muted"
    },
    accent: "text-primary dark:text-accent-blue"
  },
  
  gradients: {
    primary: "bg-clip-text text-transparent bg-gradient-to-r from-primary to-secondary",
    hover: "bg-gradient-to-r from-primary/10 to-secondary/10",
    card: "bg-gradient-to-r from-primary/5 to-secondary/5",
    glow: "bg-gradient-to-r from-primary/0 via-primary/30 to-secondary/0 blur-sm"
  },
  
  button: {
    base: "flex items-center justify-center gap-2 font-medium transition-all duration-300",
    sizes: {
      sm: "px-4 py-2 text-sm",
      md: "px-6 py-3 text-base",
      lg: "px-8 py-4 text-lg"
    },
    variants: {
      primary: "bg-[#0071E3] hover:bg-[#0077ED] text-white shadow-sm hover:shadow-md hover:shadow-[#0071E3]/20", // Apple primary blue button
      secondary: "bg-primary/10 dark:bg-primary/20 hover:bg-primary/20 dark:hover:bg-primary/30 text-primary dark:text-accent-blue",
      outline: "border-2 border-primary/30 dark:border-accent-blue/50 hover:bg-primary/10 dark:hover:bg-accent-blue/10 text-primary dark:text-accent-blue"
    },
    pill: "rounded-full",
    icon: "group-hover:translate-x-0.5 transition-transform duration-300" // More subtle icon movement
  },
  
  section: {
    padding: "py-16 md:py-20", 
    container: "max-w-7xl mx-auto relative z-10 px-4 md:px-6", // Added horizontal padding
    eyebrow: "text-primary dark:text-accent-blue text-sm font-medium uppercase tracking-wider bg-primary/10 dark:bg-primary/20 px-4 py-1.5 rounded-full inline-block border border-primary/20 dark:border-primary/30 shadow-sm"
  },
  
  // Effects - refined for more subtle Apple-like interactions
  effects: {
    shine: "absolute inset-0 bg-gradient-to-tr from-white/0 via-white/30 dark:via-white/10 to-white/0 opacity-0 group-hover:opacity-100 transition-opacity duration-700",
    hoverLift: "transition-transform duration-300 hover:-translate-y-1"
  }
};



/* REUSABLE COMPONENTS */
const Section = ({ children, dark = false, pattern = false, className = "", id = null, fullWidth = false }) => (
  <section 
    id={id}
    className={`py-16 md:py-20 px-4 ${
      dark ? 'bg-background dark:bg-gray-950' : 
      'bg-background dark:bg-inherit'
    } ${className}`}
    aria-labelledby={id}
  >
    <div className={`${fullWidth ? 'w-full' : 'max-w-7xl'} mx-auto relative z-10`}>
      {children}
    </div>
  </section>
);

/* SECTION COMPONENTS */
const SectionHeading = ({ eyebrow, title, center = false, description = null }) => (
  <div className={`mb-10 md:mb-12 ${center ? 'text-center' : ''}`}>
    {/* Optimized eyebrow with static element instead of motion for better performance */}
    <div className="flex items-center justify-center gap-2">
      <span className="text-primary dark:text-primary text-sm font-medium uppercase tracking-wider bg-primary/10 dark:bg-primary/20 px-4 py-1.5 rounded-full inline-block border border-primary/20 dark:border-primary/30 shadow-sm shadow-primary/5">
        {eyebrow}
      </span>
    </div>
    
    {/* Simplified heading with pre-defined height to reduce CLS */}
    <div className="relative max-w-3xl mx-auto mt-4" style={{ minHeight: "min(12vw, 80px)" }}>
      <h2 className="text-4xl md:text-5xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-primary via-primary/90 to-blue-500 leading-tight">
        {title}
      </h2>
    </div>
    
    {/* Simplified description */}
    {description && (
      <p
        className={`text-lg text-foreground/70 dark:text-gray-300 max-w-2xl ${center ? 'mx-auto mt-4' : 'mt-4'} leading-relaxed`}
      >
        {description}
      </p>
    )}
    
    {/* Simplified centered header divider */}
    {center && (
      <div className="relative flex justify-center mt-6">
        <div className="w-64 border-t border-secondary/20"></div>
      </div>
    )}
  </div>
);

/* CONSTANTS AND DATA */
const COMPANY_LOGOS = [
  'https://upload.wikimedia.org/wikipedia/commons/4/44/Microsoft_logo.svg',
  'https://upload.wikimedia.org/wikipedia/commons/a/a9/Amazon_logo.svg',
  'https://upload.wikimedia.org/wikipedia/commons/2/2f/Google_2015_logo.svg',
  'https://upload.wikimedia.org/wikipedia/commons/5/51/IBM_logo.svg',
  'https://upload.wikimedia.org/wikipedia/commons/5/50/Oracle_logo.svg',
  'https://upload.wikimedia.org/wikipedia/commons/f/f9/Salesforce.com_logo.svg'
];


const TESTIMONIALS = [
  {
    quote: "Jason Tech Solutions transformed our operations with their cloud migration strategy. Our infrastructure costs decreased by 40% while performance improved significantly.",
    author: "Sarah Johnson",
    position: "CTO, Global Retail Inc.",
    image: "/api/placeholder/64/64",
    delay: 0
  },
  {
    quote: "The AI solution implemented by the team has revolutionized how we analyze customer data. We're now able to predict trends and make proactive decisions.",
    author: "Michael Chen",
    position: "Data Director, FinTech Solutions",
    image: "/api/placeholder/64/64",
    delay: 0.2
  },
  {
    quote: "After experiencing a security breach, we hired Jason Tech to overhaul our cybersecurity. Their comprehensive approach has given us peace of mind and protected our reputation.",
    author: "Emma Rodriguez",
    position: "CISO, Healthcare Systems",
    image: "/api/placeholder/64/64",
    delay: 0.4
  }
];


const HERO_SERVICES = [
  { title: "Web Development", icon: <Code className="w-4 h-4" /> },
  { title: "Game Development", icon: <Gamepad2 className="w-4 h-4" /> },
  { title: "Logo Design", icon: <Palette className="w-4 h-4" /> },
  { title: "Video Editing", icon: <VideoIcon className="w-4 h-4" /> },
  { title: "UI/UX Design", icon: <Brush className="w-4 h-4" /> },
  { title: "Mobile App Development", icon: <Smartphone className="w-4 h-4" /> },
];


/* Project */
const DesignsSection = memo(() => {
  const [activeTab, setActiveTab] = useState('ui-ux');
  const [selectedDesign, setSelectedDesign] = useState(null);
  
  // Design categories with consistent structure
  const designCategories = {
    'ui-ux': {
      title: 'UI/UX Design',
      description: 'Modern interfaces that enhance user experience and drive engagement',
      designs: [
        {
          id: 'ui-1',
          title: 'Banking Dashboard',
          preview: 'https://images.unsplash.com/photo-1551288049-bebda4e38f71?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
          color: THEME.accent.blue,
          tools: ['Figma', 'Adobe XD', 'Sketch'],
          description: 'Reimagined financial management interface with intuitive analytics and transaction tracking'
        },
        {
          id: 'ui-2',
          title: 'Health App',
          preview: 'https://images.unsplash.com/photo-1576091160550-2173dba999ef?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
          color: THEME.accent.green,
          tools: ['Figma', 'Protopie', 'Illustrator'],
          description: 'Wellness tracking application with personalized insights and progress visualization'
        },
        {
          id: 'ui-3',
          title: 'E-commerce Store',
          preview: 'https://images.unsplash.com/photo-1486312338219-ce68d2c6f44d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
          color: THEME.accent.orange,
          tools: ['Figma', 'Adobe XD', 'After Effects'],
          description: 'High-conversion shopping platform with seamless checkout and personalized recommendations'
        }
      ]
    },
    'brand': {
      title: 'Brand Identity',
      description: 'Cohesive visual systems that communicate brand values and resonate with audiences',
      designs: [
        {
          id: 'brand-1',
          title: 'Eco Wellness',
          preview: 'https://images.unsplash.com/photo-1542744094-24638eff58bb?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
          color: THEME.accent.cyan,
          tools: ['Illustrator', 'Photoshop', 'InDesign'],
          description: 'Complete visual identity for sustainable wellness brand including logo system and packaging'
        },
        {
          id: 'brand-2',
          title: 'Tech Startup',
          preview: 'https://images.unsplash.com/photo-1561070791-2526d30994b5?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
          color: THEME.primary.DEFAULT,
          tools: ['Illustrator', 'Figma', 'After Effects'],
          description: 'Dynamic brand system for AI technology company with adaptable visual elements'
        },
        {
          id: 'brand-3',
          title: 'Urban Cafe',
          preview: 'https://images.unsplash.com/photo-1620799140408-edc6dcb6d633?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
          color: THEME.accent.yellow,
          tools: ['Illustrator', 'Photoshop', 'Procreate'],
          description: 'Artisanal coffee shop branding with hand-drawn elements and signature typography'
        }
      ]
    },
    'print': {
      title: 'Print Design',
      description: 'Tangible brand experiences through thoughtfully crafted physical materials',
      designs: [
        {
          id: 'print-1',
          title: 'Annual Report',
          preview: 'https://images.unsplash.com/photo-1586281380349-632531db7ed4?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
          color: THEME.secondary.DEFAULT,
          tools: ['InDesign', 'Illustrator', 'Photoshop'],
          description: 'Award-winning financial report design with data visualization and editorial layout'
        },
        {
          id: 'print-2',
          title: 'Event Materials',
          preview: 'https://images.unsplash.com/photo-1607799279861-4dd421887fb3?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
          color: THEME.accent.blue,
          tools: ['InDesign', 'Illustrator', 'Photoshop'],
          description: 'Comprehensive conference collateral including invitations, programs, and signage'
        },
        {
          id: 'print-3',
          title: 'Packaging',
          preview: 'https://images.unsplash.com/photo-1636622433525-127afdf3662d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
          color: THEME.accent.green,
          tools: ['Illustrator', 'Photoshop', 'Dimension'],
          description: 'Sustainable product packaging with innovative structural design and eco-friendly materials'
        }
      ]
    }
  };

  // Get current designs based on active tab
  const currentDesigns = designCategories[activeTab]?.designs || [];
  
  // Design detail modal
  const DesignDetailModal = ({ design, onClose }) => {
    if (!design) return null;
    
    return (
      <motion.div 
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        exit={{ opacity: 0 }}
        className="fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4"
        onClick={onClose}
      >
        <motion.div 
          initial={{ scale: 0.9, y: 20 }}
          animate={{ scale: 1, y: 0 }}
          exit={{ scale: 0.9, y: 20 }}
          className="bg-background max-w-4xl w-full max-h-[90vh] overflow-y-auto rounded-2xl shadow-xl"
          onClick={(e) => e.stopPropagation()}
        >
          <div className="relative">
            <div className="h-[300px] md:h-[400px] w-full overflow-hidden">
              <img
                src={design.preview}
                alt={design.title}
                className="w-full h-full object-cover"
              />
            
            </div>
            
            <button 
              onClick={onClose}
              className="absolute top-4 right-4 bg-black/40 hover:bg-black/60 text-white p-2 rounded-full backdrop-blur-sm transition-colors"
              aria-label="Close modal"
            >
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                <line x1="18" y1="6" x2="6" y2="18"></line>
                <line x1="6" y1="6" x2="18" y2="18"></line>
              </svg>
            </button>
          </div>
          
          <div className="p-6 md:p-8">
            <div 
              className="inline-block px-3 py-1 rounded-full text-sm font-medium mb-4"
              style={{ backgroundColor: `${design.color}20`, color: design.color }}
            >
              {designCategories[activeTab].title}
            </div>
            
            <h3 className="text-2xl md:text-3xl font-bold mb-4">{design.title}</h3>
            <p className="text-foreground/70 mb-6 text-lg">{design.description}</p>
            
            <div className="mb-8">
              <h4 className="text-sm uppercase tracking-wider text-foreground/50 mb-3">Design Tools</h4>
              <div className="flex gap-2 flex-wrap">
                {design.tools.map((tool, idx) => (
                  <span key={idx} className="px-3 py-1 bg-primary/10 text-primary text-sm rounded-full">
                    {tool}
                  </span>
                ))}
              </div>
            </div>
            
            <div className="grid grid-cols-2 gap-6 mb-8">
              <div>
                <h4 className="text-sm uppercase tracking-wider text-foreground/50 mb-3">Project Scope</h4>
                <ul className="space-y-2">
                  {['Research', 'Wireframing', 'Visual Design', 'Prototyping'].map((item, idx) => (
                    <li key={idx} className="flex items-center text-foreground/80">
                      <CheckCircle className="w-4 h-4 text-primary mr-2" />
                      {item}
                    </li>
                  ))}
                </ul>
              </div>
              
              <div>
                <h4 className="text-sm uppercase tracking-wider text-foreground/50 mb-3">Deliverables</h4>
                <ul className="space-y-2">
                  {['Design System', 'Interactive Prototype', 'Source Files', 'Documentation'].map((item, idx) => (
                    <li key={idx} className="flex items-center text-foreground/80">
                      <CheckCircle className="w-4 h-4 text-primary mr-2" />
                      {item}
                    </li>
                  ))}
                </ul>
              </div>
            </div>
            
            <div className="flex justify-end">
              <Button variant="primary" size="lg">
                Request Similar Design
                <ArrowRight className="ml-1 w-4 h-4" />
              </Button>
            </div>
          </div>
        </motion.div>
      </motion.div>
    );
  };

  const DesignCard = ({ design }) => {
    return (
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        whileInView={{ opacity: 1, y: 0 }}
        viewport={{ once: true }}
        transition={{ duration: 0.5 }}
        className="group cursor-pointer"
        onClick={() => setSelectedDesign(design)}
      >
        <div className="relative overflow-hidden rounded-xl aspect-[4/3] mb-4">
          {/* Overlay with gradient */}
          <div className="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-end p-6">
            <div>
              <p className="text-white font-medium">{design.title}</p>
              <div className="flex mt-2 gap-2">
                {design.tools.slice(0, 2).map((tool, idx) => (
                  <span key={idx} className="text-xs bg-white/20 backdrop-blur-sm px-2 py-1 rounded-full text-white">
                    {tool}
                  </span>
                ))}
              </div>
            </div>
          </div>
          
          {/* Image */}
          <img 
            src={design.preview} 
            alt={design.title}
            className="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
            loading="lazy"
          />
          
          {/* Color accent */}
          <div 
            className="absolute top-0 right-0 w-24 h-24 opacity-60 rounded-bl-full"
            style={{ background: `radial-gradient(circle at top right, ${design.color}, transparent 70%)` }}
          />
        </div>
        
        <h3 className="font-medium text-lg group-hover:text-primary transition-colors">
          {design.title}
        </h3>
        <p className="text-sm text-foreground/60 line-clamp-1">{design.description}</p>
      </motion.div>
    );
  };

  return (
    <Section id="designs" pattern={true}>
      <SectionHeading
        eyebrow="Design Showcase" 
        title="Creative Design Solutions" 
        description="Explore our design work across various mediums and industries"
        center={true}
      />
      
      {/* Category tabs */}
      <div className="flex justify-center mb-12">
        <div className="inline-flex bg-secondary/10 p-1 rounded-xl">
          {Object.entries(designCategories).map(([key, category]) => (
            <button
              key={key}
              onClick={() => setActiveTab(key)}
              className={`px-5 py-2 rounded-lg text-sm font-medium transition-all ${
                activeTab === key
                  ? 'bg-primary text-white shadow-lg'
                  : 'text-foreground/70 hover:text-foreground hover:bg-secondary/5'
              }`}
            >
              {category.title}
            </button>
          ))}
        </div>
      </div>
      
      {/* Description of current category */}
      <div className="text-center mb-12">
        <p className="text-lg text-foreground/70 max-w-xl mx-auto">
          {designCategories[activeTab]?.description}
        </p>
      </div>
      
      {/* Design grid with exit animations */}
      <AnimatePresence mode="wait">
        <motion.div
          key={activeTab}
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          exit={{ opacity: 0 }}
          transition={{ duration: 0.3 }}
          className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"
        >
          {currentDesigns.map((design) => (
            <DesignCard key={design.id} design={design} />
          ))}
        </motion.div>
      </AnimatePresence>
      
      {/* Design detail modal */}
      <AnimatePresence>
        {selectedDesign && (
          <DesignDetailModal 
            design={selectedDesign} 
            onClose={() => setSelectedDesign(null)} 
          />
        )}
      </AnimatePresence>
      

    </Section>
  );
});


/*TIMELINE */
const ProcessTimeline = memo(() => {
  const [activeStep, setActiveStep] = useState(1);
  const [isScrolling, setIsScrolling] = useState(false);
  const timelineRef = useRef(null);
  
  const processSteps = [
    {
      step: 1,
      title: "Discovery & Research",
      description: "We dive deep into your business needs, market landscape, and user expectations to establish clear project goals.",
      icon: <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><circle cx="12" cy="12" r="10"/><path d="m15 9-6 6"/><path d="m9 9 6 6"/></svg>,
      color: THEME.accent.blue,
      benefits: [
        "Comprehensive market analysis",
        "User research & persona development",
        "Competitive landscape assessment"
      ]
    },
    {
      step: 2,
      title: "Strategic Planning",
      description: "We develop a tailored roadmap that aligns with your business objectives and addresses user needs.",
      icon: <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><path d="M2 17 12 22l10-5"/><path d="m2 12 10 5 10-5"/><path d="M12 2 2 7l10 5 10-5-10-5Z"/></svg>,
      color: THEME.accent.green,
      benefits: [
        "Technology stack recommendations",
        "Feature prioritization framework",
        "Implementation timeline & milestones"
      ]
    },
    {
      step: 3,
      title: "Design & Prototype",
      description: "We create intuitive, engaging designs and interactive prototypes that bring your vision to life.",
      icon: <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><path d="M12 20a8 8 0 1 0 0-16 8 8 0 0 0 0 16Z"/><path d="M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z"/><path d="M12 2v2"/><path d="M12 22v-2"/><path d="m17 20.66-1-1.73"/><path d="M11 10.27 7 3.34"/><path d="m20.66 17-1.73-1"/><path d="m3.34 7 1.73 1"/><path d="M14 12h8"/><path d="M2 12h2"/><path d="m20.66 7-1.73 1"/><path d="m3.34 17 1.73-1"/><path d="m17 3.34-1 1.73"/><path d="m11 13.73-4 6.93"/></svg>,
      color: THEME.accent.cyan,
      benefits: [
        "User-centered design approach",
        "Interactive wireframes & mockups",
        "Usability testing & refinement"
      ]
    },
    {
      step: 4,
      title: "Development & Testing",
      description: "Our engineering team builds your solution using modern technologies and best practices.",
      icon: <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><path d="m8 3 4 8 5-5 5 15H2L8 3z"/></svg>,
      color: THEME.accent.orange,
      benefits: [
        "Agile development methodology",
        "Comprehensive quality assurance",
        "Regular progress demonstrations"
      ]
    },
    {
      step: 5,
      title: "Deployment & Support",
      description: "We ensure a smooth launch and provide ongoing support to keep your solution performing optimally.",
      icon: <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><rect width="20" height="14" x="2" y="3" rx="2"/><line x1="8" x2="16" y1="21" y2="21"/><line x1="12" x2="12" y1="17" y2="21"/></svg>,
      color: THEME.accent.yellow,
      benefits: [
        "Seamless deployment process",
        "Performance monitoring & optimization",
        "Ongoing maintenance & updates"
      ]
    }
  ];
  
  // Handle scroll-based timeline navigation
  useEffect(() => {
    const handleScroll = () => {
      if (!timelineRef.current || isScrolling) return;
      
      const timelineRect = timelineRef.current.getBoundingClientRect();
      const viewportCenter = window.innerHeight / 2;
      const timelinePosition = timelineRect.top;
      const timelineHeight = timelineRect.height;
      
      // Only activate scroll detection when timeline is in view
      if (timelinePosition < viewportCenter && timelinePosition + timelineHeight > 0) {
        // Calculate which step should be active based on scroll position
        const scrollProgress = (viewportCenter - timelinePosition) / timelineHeight;
        const clampedProgress = Math.max(0, Math.min(1, scrollProgress));
        const stepIndex = Math.ceil(clampedProgress * processSteps.length);
        
        if (stepIndex !== activeStep && stepIndex >= 1 && stepIndex <= processSteps.length) {
          setActiveStep(stepIndex);
        }
      }
    };
    
    window.addEventListener('scroll', handleScroll, { passive: true });
    return () => window.removeEventListener('scroll', handleScroll);
  }, [activeStep, isScrolling, processSteps.length]);
  
  const handleStepClick = (step) => {
    setIsScrolling(true);
    setActiveStep(step);
    
    // Reset isScrolling after animation completes
    setTimeout(() => {
      setIsScrolling(false);
    }, 1000);
  };
  
  return (
    <Section id="our-process" pattern={true} className="py-20 bg-background dark:bg-gray-900">
      <SectionHeading 
        eyebrow="Our Process" 
        title="How We Deliver Excellence" 
        description="A systematic approach that ensures consistent results and exceptional quality across all projects"
        center={true}
      />
      
      <div className="mt-16 relative max-w-6xl mx-auto min-h-[800px]" ref={timelineRef}>
        {/* Timeline line */}
        <div className="absolute top-0 bottom-0 left-1/2 w-0.5 bg-secondary/20 dark:bg-gray-700 transform -translate-x-1/2"></div>
        
        {/* Progress line animating based on active step */}
        <div 
          className="absolute top-0 left-1/2 w-0.5 bg-primary transform -translate-x-1/2 transition-all duration-1000 ease-out"
          style={{ 
            height: `${(activeStep / processSteps.length) * 100}%`,
            maxHeight: '100%'
          }}
        ></div>
        
        {/* Timeline steps */}
        {processSteps.map((process, index) => {
          const isActive = activeStep >= process.step;
          const isPast = activeStep > process.step;
          const isExactlyActive = activeStep === process.step;
          
          return (
            <div key={index} className="relative h-[160px] mb-20 last:mb-0">
              {/* Timeline marker */}
              <div className="absolute left-1/2 transform -translate-x-1/2 flex items-center justify-center w-14 h-14">
                <div 
                  className={`
                    h-14 w-14 rounded-full flex items-center justify-center z-10 
                    ${isActive 
                      ? 'bg-primary text-white border-4 border-white dark:border-gray-900 shadow-lg shadow-primary/30' 
                      : 'bg-white dark:bg-gray-800 border-4 border-secondary/20 dark:border-gray-700 text-secondary/40 dark:text-gray-400'
                    }
                    transition-all duration-500
                  `}
                  style={{
                    transform: isExactlyActive ? 'scale(1.2)' : 'scale(1)'
                  }}
                >
                  <span className="text-lg font-bold">{process.step}</span>
                </div>
                
                {/* Pulsing effect for active step */}
                {isExactlyActive && (
                  <div className="absolute inset-0 -z-10">
                    <div className="absolute inset-0 rounded-full bg-primary/20 animate-ping opacity-75"></div>
                    <div className="absolute inset-[-8px] rounded-full border-2 border-primary/30"></div>
                  </div>
                )}
              </div>
              
              {/* Content card with alternating layout */}
              <div className={`relative max-w-lg mx-auto md:mx-0 ${
                index % 2 === 0 
                  ? 'md:ml-auto md:mr-[calc(50%+2rem)]' 
                  : 'md:mr-auto md:ml-[calc(50%+2rem)]'
              }`}>
                <motion.div 
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true, margin: "-100px" }}
                  transition={{ duration: 0.5 }}
                  className={`
                    rounded-xl p-6 border shadow-lg transform transition-all duration-500 cursor-pointer
                    ${isActive 
                      ? 'bg-background dark:bg-gray-800 border-primary/20 dark:border-primary/30 shadow-primary/5' 
                      : 'bg-secondary/5 dark:bg-gray-800/50 border-secondary/20 dark:border-gray-700'
                    }
                    hover:shadow-xl
                  `}
                  onClick={() => handleStepClick(process.step)}
                >
                  <div className="flex items-start gap-4">
                    <div 
                      className={`p-3 rounded-lg ${
                        isActive 
                          ? 'text-white' 
                          : 'text-secondary/60 dark:text-gray-400 bg-secondary/10 dark:bg-gray-700/50'
                      } transition-colors duration-500`}
                      style={{ 
                        backgroundColor: isActive ? process.color : undefined 
                      }}
                    >
                      {process.icon}
                    </div>
                    
                    <div>
                      <h3 className={`text-xl font-bold mb-2 transition-colors duration-500 ${
                        isActive ? 'text-foreground dark:text-white' : 'text-foreground/60 dark:text-gray-400'
                      }`}>
                        {process.title}
                      </h3>
                      <p className="text-foreground/70 dark:text-gray-300 mb-4">{process.description}</p>
                      
                      {/* Benefits list with reveal animation */}
                      <AnimatePresence>
                        {isExactlyActive && (
                          <motion.div
                            initial={{ opacity: 0, height: 0 }}
                            animate={{ opacity: 1, height: 'auto' }}
                            exit={{ opacity: 0, height: 0 }}
                            transition={{ duration: 0.3 }}
                            className="mt-4 pt-4 border-t border-secondary/10 dark:border-gray-700"
                          >
                            <h4 className="font-medium mb-2 text-sm uppercase tracking-wider text-foreground/60 dark:text-gray-400">Key Benefits</h4>
                            <ul className="space-y-2">
                              {process.benefits.map((benefit, idx) => (
                                <motion.li 
                                  key={idx}
                                  initial={{ opacity: 0, x: -10 }}
                                  animate={{ opacity: 1, x: 0 }}
                                  transition={{ delay: idx * 0.1 }}
                                  className="flex items-center gap-2 dark:text-gray-300"
                                >
                                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="text-primary">
                                    <polyline points="20 6 9 17 4 12"></polyline>
                                  </svg>
                                  <span>{benefit}</span>
                                </motion.li>
                              ))}
                            </ul>
                          </motion.div>
                        )}
                      </AnimatePresence>
                    </div>
                  </div>
                </motion.div>
              </div>
            </div>
          );
        })}
      </div>
      
      {/* Navigation controls for mobile */}
      <div className="mt-12 flex justify-center gap-2 md:hidden">
        {processSteps.map((step, index) => (
          <button 
            key={index}
            onClick={() => handleStepClick(step.step)}
            className={`w-3 h-3 rounded-full transition-colors ${
              activeStep === step.step 
                ? 'bg-primary' 
                : 'bg-secondary/30 dark:bg-gray-700'
            }`}
            aria-label={`Go to step ${step.step}: ${step.title}`}
          />
        ))}
      </div>
    </Section>
  );
});


/* Upcoming */
const UpcomingProjectsShowcase = memo(() => {
  const [activeProject, setActiveProject] = useState(0);
  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });
  
  const handleMouseMove = (e) => {
    const card = e.currentTarget.getBoundingClientRect();
    const x = (e.clientX - card.left) / card.width - 0.5;  // -0.5 to 0.5
    const y = (e.clientY - card.top) / card.height - 0.5;  // -0.5 to 0.5
    setMousePosition({ x, y });
  };
  
  const upcomingProjects = [
    {
      title: "AI-Powered Customer Analytics",
      description: "Launching soon: Our revolutionary platform that uses machine learning to transform customer data into actionable insights",
      image: "https://images.unsplash.com/photo-1639322537228-f710d846310a?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80",
      color: THEME.accent.blue,
      tags: ["AI", "Analytics", "Machine Learning"],
      date: "June 2025",
      status: "Beta phase"
    },
    {
      title: "Immersive VR Training Platform",
      description: "Experience professional training in virtual environments with real-time feedback and adaptive learning paths",
      image: "https://images.unsplash.com/photo-1622979135225-d2ba269cf1ac?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80",
      color: THEME.accent.green,
      tags: ["VR", "Training", "Education"],
      date: "August 2025",
      status: "In development"
    }
  ];
  
  return (
<Section id="upcoming-projects" className="py-12 sm:py-16 md:py-20 overflow-hidden dark:bg-gray-900">

      <div className="max-w-7xl mx-auto px-4">
        
        <div className="mt-8 sm:mt-12 md:mt-16">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 sm:gap-8 items-center">
            {/* Left side - 3D interactive card */}
            <div className="relative h-[350px] sm:h-[400px] md:h-[450px] w-full order-2 lg:order-1">
              <AnimatePresence mode="wait">
                <motion.div 
                  key={activeProject}
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  exit={{ opacity: 0 }}
                  transition={{ duration: 0.5 }}
                  className="absolute inset-0"
                  onMouseMove={handleMouseMove}
                  onMouseLeave={() => setMousePosition({ x: 0, y: 0 })}
                >
                  <div 
                    className="h-full w-full rounded-2xl overflow-hidden relative group"
                    style={{ 
                      perspective: '1500px',
                      transformStyle: 'preserve-3d',
                    }}
                  >
                    <motion.div
                      className="h-full w-full relative"
                      style={{ 
                        transformStyle: 'preserve-3d',
                        transform: `
                          rotateY(${mousePosition.x * 20}deg) 
                          rotateX(${-mousePosition.y * 20}deg)
                          scale(1.05)
                        `,
                        transition: 'transform 0.5s ease-out'
                      }}
                    >
                      {/* Main image */}
                      <div className="absolute inset-0 rounded-2xl overflow-hidden border border-white/10">
                        <div 
                          className="absolute inset-0 bg-gradient-to-br from-black/10 via-transparent to-primary/30 opacity-70 mix-blend-overlay z-10"
                        ></div>
                        <img 
                          src={upcomingProjects[activeProject].image} 
                          alt={upcomingProjects[activeProject].title} 
                          className="w-full h-full object-cover"
                        />
                      </div>
                      
                      {/* Glowing edges */}
                      <div 
                        className="absolute inset-0 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity"
                        style={{
                          background: `linear-gradient(45deg, ${upcomingProjects[activeProject].color}00, ${upcomingProjects[activeProject].color}40, ${upcomingProjects[activeProject].color}00)`,
                          backgroundSize: '200% 200%',
                          animation: 'gradient-animation 3s ease infinite',
                          border: `1px solid ${upcomingProjects[activeProject].color}60`,
                          boxShadow: `0 0 40px ${upcomingProjects[activeProject].color}40`
                        }}
                      ></div>
                      
                      {/* Project status banner */}
                      <div 
                        className="absolute top-3 sm:top-5 right-3 sm:right-5 z-30 px-3 sm:px-4 py-1.5 sm:py-2 rounded-full backdrop-blur-md"
                        style={{ 
                          backgroundColor: `${upcomingProjects[activeProject].color}30`,
                          border: `1px solid ${upcomingProjects[activeProject].color}50`
                        }}
                      >
                        <div className="flex items-center gap-2">
                          <span className="relative flex h-2.5 w-2.5 sm:h-3 sm:w-3">
                            <span className="animate-ping absolute inline-flex h-full w-full rounded-full opacity-75" 
                              style={{ backgroundColor: upcomingProjects[activeProject].color }}></span>
                            <span className="relative inline-flex rounded-full h-2.5 w-2.5 sm:h-3 sm:w-3" 
                              style={{ backgroundColor: upcomingProjects[activeProject].color }}></span>
                          </span>
                          <span className="text-white text-xs sm:text-sm font-medium">{upcomingProjects[activeProject].status}</span>
                        </div>
                      </div>
                      
                      {/* Content overlay */}
                      <div 
                        className="absolute inset-x-0 bottom-0 p-4 sm:p-6 md:p-8 text-white z-20"
                        style={{ transform: 'translateZ(50px)' }}
                      >
                        <div className="mb-2">
                          <span className="text-white/80 text-xs sm:text-sm font-medium">
                            Launching: {upcomingProjects[activeProject].date}
                          </span>
                        </div>
                        
                        <div className="flex gap-1.5 sm:gap-2 mb-3 sm:mb-4">
                          {upcomingProjects[activeProject].tags.map((tag, index) => (
                            <span 
                              key={index} 
                              className="px-2 sm:px-3 py-1 rounded-full text-xs font-medium backdrop-blur-sm"
                              style={{ 
                                backgroundColor: `${upcomingProjects[activeProject].color}40`,
                                border: `1px solid ${upcomingProjects[activeProject].color}80`
                              }}
                            >
                              {tag}
                            </span>
                          ))}
                        </div>
                        
                        <h3 className="text-xl sm:text-2xl md:text-3xl font-bold mb-2">{upcomingProjects[activeProject].title}</h3>
                        <p className="text-white/80 max-w-md text-sm sm:text-base">{upcomingProjects[activeProject].description}</p>
                        
                        <div className="mt-4 sm:mt-6">
                          <button 
                            className="px-4 sm:px-5 py-2 sm:py-2.5 rounded-full bg-white/10 hover:bg-white/20 backdrop-blur-md border border-white/20 text-white text-sm font-medium flex items-center gap-2 transition-all"
                          >
                            Request Early Access
                            <ArrowRight size={16} />
                          </button>
                        </div>
                      </div>
                      
                      {/* Floating geometric elements */}
                      <div 
                        className="absolute top-6 sm:top-8 left-6 sm:left-8 w-12 h-12 sm:w-16 sm:h-16 border border-white/20 rounded-lg opacity-50"
                        style={{ 
                          transform: 'translateZ(30px) rotateZ(10deg)',
                          boxShadow: `0 0 20px ${upcomingProjects[activeProject].color}30`
                        }}
                      ></div>
                      
                      <div 
                        className="absolute bottom-24 sm:bottom-32 right-12 sm:right-16 w-8 h-8 sm:w-10 sm:h-10 rounded-full opacity-60"
                        style={{ 
                          background: `linear-gradient(45deg, ${upcomingProjects[activeProject].color}60, transparent)`,
                          transform: 'translateZ(40px)'
                        }}
                      ></div>
                    </motion.div>
                  </div>
                </motion.div>
              </AnimatePresence>
            </div>
            
            {/* Right side - Project details & navigation */}
            <div className="space-y-4 sm:space-y-6 order-1 lg:order-2">
              <div className="space-y-3 sm:space-y-4">
                <span className="text-primary text-sm font-medium uppercase tracking-wider bg-primary/10 dark:bg-primary/20 px-3 sm:px-4 py-1 rounded-full inline-block border border-primary/20 dark:border-primary/40">
                  Upcoming Projects
                </span>
                
                <h2 className="text-2xl sm:text-3xl md:text-4xl font-bold mt-4 mb-4">
                  Tomorrow's <span className="bg-clip-text text-transparent bg-gradient-to-r from-primary to-blue-500">solutions, today</span>
                </h2>
                
                <p className="text-foreground/70 dark:text-gray-300 text-sm sm:text-base">
                  We're constantly innovating and developing new projects to address emerging challenges and opportunities. 
                  Here's an exclusive preview of what we're working on behind the scenes.
                </p>
              </div>
              
              <div className="space-y-3 sm:space-y-4">
                <h4 className="text-base sm:text-lg font-medium dark:text-white">Upcoming Launches</h4>
                
                <div className="space-y-2 sm:space-y-3">
                  {upcomingProjects.map((project, index) => (
                    <div 
                      key={index}
                      className={`p-3 sm:p-4 rounded-xl cursor-pointer transition-all duration-300 flex items-center gap-3 sm:gap-4 ${
                        activeProject === index 
                          ? 'bg-primary/10 dark:bg-primary/20 border border-primary/30 dark:border-primary/40' 
                          : 'hover:bg-secondary/5 dark:hover:bg-gray-800'
                      }`}
                      onClick={() => setActiveProject(index)}
                    >
                      <div 
                        className="w-10 h-10 sm:w-12 sm:h-12 rounded-lg overflow-hidden shrink-0"
                        style={{ 
                          boxShadow: activeProject === index ? `0 0 0 2px ${project.color}` : 'none',
                          transition: 'box-shadow 0.3s ease'
                        }}
                      >
                        <img 
                          src={project.image} 
                          alt={project.title} 
                          className="w-full h-full object-cover"
                        />
                      </div>
                      
                      <div className="flex-1 min-w-0">
                        <div className="flex items-center justify-between mb-1">
                          <h5 className={`font-medium transition-colors text-sm sm:text-base ${
                            activeProject === index ? 'text-primary' : 'text-foreground dark:text-white'
                          }`}>
                            {project.title}
                          </h5>
                          <span className="text-xs text-foreground/60 dark:text-gray-400 shrink-0 ml-2">
                            {project.date}
                          </span>
                        </div>
                        <p className="text-xs sm:text-sm text-foreground/60 dark:text-gray-400 line-clamp-1">
                          {project.description}
                        </p>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <style jsx="true" global="true">{`
        @keyframes gradient-animation {
          0% { background-position: 0% 50%; }
          50% { background-position: 100% 50%; }
          100% { background-position: 0% 50%; }
        }
      `}</style>
    </Section>
  );
});
const Trusted = memo(() => {
  return (
              <section className="py-3 md:py-6 lg:py-8 overflow-hidden dark:bg-gray-900">
            <div className="relative z-10 max-w-7xl mx-auto min-h-[120px]">
              <motion.div 
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                style={{ contain: 'paint layout' }}
                className="text-center mb-8"
              >
                          <motion.div
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            className="inline-flex items-center gap-2 px-4 py-1.5 rounded-full border border-primary/20 bg-primary/5 backdrop-blur-sm shadow-lg shadow-primary/5"
          >
 
            <span className="text-sm font-semibold text-primary"> TRUSTED BY INDUSTRY LEADERS</span>
          </motion.div>
                
              </motion.div>
              
              <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-8 items-center">
                {COMPANY_LOGOS.map((logo, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, y: 20 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    viewport={{ once: true }}
                    transition={{ delay: index * 0.1, duration: 0.4 }}
                    className="flex items-center justify-center"
                  >
                    <div className="p-4 w-full flex justify-center">
                      <img 
                        src={logo} 
                        alt={`Partner company ${index + 1}`} 
                        className="h-12 opacity-80" 
                      />
                    </div>
                  </motion.div>
                ))}
              </div>
            </div>
          </section>

  );
});

// ENHANCED SERVICES SECTION WITH REDESIGNED DARK MODE ADAPTATION
// Modular components for better code organization
const ServiceCard = ({ service, isFeatured = false, className = "" }) => {
  const cardClasses = `
    group h-full perspective-1000 
    ${className}
  `;

  const containerClasses = `
    h-full flex flex-col 
    bg-white/80 dark:bg-[#1C1C1E]/95 
    backdrop-blur-sm
    rounded-3xl overflow-hidden 
    shadow-sm hover:shadow-xl dark:hover:shadow-2xl dark:hover:shadow-black/20
    transition-all duration-700 ease-out
    border border-[#E5E5E7]/60 dark:border-[#2C2C2E]/80 
    hover:border-[#D1D1D6] dark:hover:border-[#3A3A3C]
    transform hover:translate-y-[-6px] hover:scale-[1.02]
    ${isFeatured ? 'min-h-[420px]' : 'min-h-[380px]'}
  `;

  return (
    <Link to={service.href} className={cardClasses}>
      <div className={containerClasses}>
        {/* Enhanced icon area with improved dark mode */}
        <div className="px-8 pt-8 pb-5 flex justify-start">
          <div className="
            w-16 h-16 flex items-center justify-center 
            rounded-2xl 
            bg-gradient-to-br from-[#F5F5F7] to-[#ECECEC] 
            dark:from-[#2C2C2E] dark:to-[#1F1F21]
            relative overflow-hidden 
            group-hover:shadow-lg 
            group-hover:from-primary/15 group-hover:to-primary/25
            dark:group-hover:from-blue-500/20 dark:group-hover:to-blue-600/30
            transition-all duration-700 ease-out
            group-hover:scale-110 group-hover:rotate-3
          ">
            <div className="
              absolute inset-0 
              bg-gradient-to-br from-transparent via-white/20 to-primary/10 
              dark:from-transparent dark:via-white/5 dark:to-blue-400/15
              opacity-0 group-hover:opacity-100 
              transition-opacity duration-700
            "></div>
            <div className="
              relative z-10 
              text-primary dark:text-blue-400 
              group-hover:text-primary dark:group-hover:text-blue-300
              transition-all duration-500
              drop-shadow-sm
            ">
              {service.icon}
            </div>
          </div>
        </div>
        
        {/* Enhanced content with better typography hierarchy */}
        <div className="px-8 flex-grow flex flex-col">
          <h3 className="
            text-xl font-semibold 
            text-[#1D1D1F] dark:text-[#F2F2F7] 
            mb-3 
            group-hover:text-primary dark:group-hover:text-blue-300
            transition-colors duration-500
            leading-tight
          ">
            {service.title}
          </h3>
          
          <p className="
            text-[#86868B] dark:text-[#98989D] 
            text-base font-normal 
            mb-6 leading-relaxed
            group-hover:text-[#666666] dark:group-hover:text-[#AEAEB2]
            transition-colors duration-500
          ">
            {service.description}
          </p>
          
          {/* Enhanced feature pills with improved dark mode */}
          <div className="flex-grow">
            <div className="flex flex-wrap gap-2.5">
              {service.features.map((feature, i) => (
                <span
                  key={i}
                  className="
                    inline-flex px-3.5 py-2 
                    text-xs font-medium 
                    rounded-full 
                    bg-[#F5F5F7]/80 dark:bg-[#2C2C2E]/80
                    text-[#6E6E73] dark:text-[#E5E5E7] 
                    border border-[#E5E5E7]/50 dark:border-[#3A3A3C]/50
                    hover:bg-[#E5E5E7] dark:hover:bg-[#3A3A3C]
                    hover:border-[#D1D1D6] dark:hover:border-[#48484A]
                    hover:text-[#1D1D1F] dark:hover:text-[#F2F2F7]
                    hover:shadow-sm
                    transition-all duration-400 ease-out
                    backdrop-blur-sm
                  "
                  style={{
                    transitionDelay: `${i * 75}ms`
                  }}
                >
                  {feature}
                </span>
              ))}
            </div>
          </div>
        </div>
        
        {/* Enhanced Apple-style action area */}
        <div className="
          px-8 py-6 mt-4 
          border-t border-[#F5F5F7]/60 dark:border-[#2C2C2E]/60 
          relative 
          min-h-[64px]
          bg-gradient-to-r from-transparent via-[#FAFAFA]/50 to-transparent
          dark:from-transparent dark:via-[#1A1A1C]/50 dark:to-transparent
        ">
          <div className="flex items-center h-full">
            <span className="
              relative group/link 
              inline-flex items-center 
              text-primary dark:text-blue-400 
              font-medium text-sm 
              opacity-0 group-hover:opacity-100 
              transition-all duration-700 ease-out 
              transform translate-x-[-12px] group-hover:translate-x-0
              hover:text-primary/80 dark:hover:text-blue-300
            ">
              <span className="inline-block">Learn more</span>
              <svg 
                width="14" 
                height="14" 
                viewBox="0 0 13 13" 
                fill="none" 
                xmlns="http://www.w3.org/2000/svg" 
                className="
                  ml-2 transform 
                  transition-transform duration-400 
                  group-hover/link:translate-x-1.5 group-hover/link:scale-110
                "
              >
                <path d="M6.5 1L12 6.5L6.5 12" stroke="currentColor" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
                <path d="M1 6.5H12" stroke="currentColor" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
              </svg>
              
              <div className="
                absolute bottom-0 left-0 w-full h-0.5 
                bg-gradient-to-r from-primary/20 to-primary/40
                dark:from-blue-400/20 dark:to-blue-400/40
                origin-left scale-x-0 group-hover/link:scale-x-100 
                transition-transform duration-600 ease-out
              "></div>
            </span>
          </div>
        </div>

        {/* Enhanced shine effect with better dark mode support */}
        <div className="
          absolute inset-0 
          bg-gradient-to-tr 
          from-white/0 via-white/40 to-white/0 
          dark:from-white/0 dark:via-white/8 dark:to-white/0
          opacity-0 group-hover:opacity-100 
          transition-opacity duration-1000 
          pointer-events-none
          mix-blend-overlay dark:mix-blend-soft-light
        "></div>
        
        {/* Subtle glow effect for dark mode */}
        <div className="
          absolute inset-0 
          bg-gradient-to-br from-blue-400/0 via-blue-400/5 to-purple-400/5
          dark:from-blue-400/0 dark:via-blue-400/10 dark:to-purple-400/10
          opacity-0 group-hover:opacity-100 
          transition-opacity duration-1000 
          pointer-events-none
          blur-xl
        "></div>
      </div>
    </Link>
  );
};

// Enhanced Services Section with Interactive Cards
const ServicesSection = () => (
  <section className="py-12 sm:py-16 md:py-24 px-4" id="services">
    <div className="max-w-7xl mx-auto">
      <div className="text-center mb-12 sm:mb-16">
        <span className="px-3 sm:px-4 py-1.5 bg-primary/5 text-primary rounded-full text-sm font-medium">
          Our Expertise
        </span>
        <h2 className="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold mt-4 mb-4 sm:mb-6 px-2">
          Comprehensive Digital Services
        </h2>
        <p className="text-lg sm:text-xl text-foreground/70 max-w-3xl mx-auto px-2">
          From concept to deployment, we offer end-to-end digital solutions tailored to your business needs
        </p>
      </div>

      {/* Featured Services - 2 columns on desktop, 1 on mobile */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 sm:gap-8 mb-12 sm:mb-16">
        {[          {
            title: "Web Development",
            description: "Custom websites and web applications built with modern technologies and best practices for optimal performance and user experience. Our expert team delivers responsive, SEO-friendly solutions.",
            icon: <Code className="w-8 sm:w-10 h-8 sm:h-10 text-primary" />,
            features: ["Responsive Design", "SEO Optimization", "Performance Tuning", "Custom CMS", "E-commerce Solutions"],
            gradient: "from-primary/5 to-violet-500/5",
            featured: true,
            href: "/web-development"
          },
          {
            title: "Computer Vision",
            description: "Advanced image recognition and processing solutions to automate visual data analysis with cutting-edge AI technology. Transform how your business interprets and leverages visual information.",
            icon: <Globe className="w-8 sm:w-10 h-8 sm:h-10 text-primary" />,
            features: ["Object Detection", "Facial Recognition", "Image Classification", "Real-time Processing", "Custom AI Models"],
            gradient: "from-violet-500/5 to-purple-500/5",
            featured: true,
            href: "/services/computer-vision"
          },        ].map((service, index) => (
          <Link 
            to={service.href}
            key={index}
            className={`group relative overflow-hidden rounded-2xl sm:rounded-3xl p-4 sm:p-6 hover:bg-primary/5 transition-all duration-300 border border-transparent hover:border-primary/20 bg-gradient-to-br ${service.gradient} cursor-pointer min-h-[320px] sm:h-[360px]`}
          >
            {/* Ripple effect animation */}
            <span className="absolute inset-0 w-full h-full">
              <span className="ripple-effect absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-0 h-0 rounded-full bg-primary/10 opacity-0 group-hover:animate-ripple pointer-events-none"></span>
            </span>
            
            <div className="absolute top-0 left-0 w-full h-full bg-secondary/5 dark:bg-gray-900/95 opacity-90 group-hover:opacity-95 transition-opacity duration-300"></div>
            <div className="relative z-10">
              <div className="mb-4 sm:mb-6 p-2.5 sm:p-3 rounded-xl bg-primary/5 w-fit backdrop-blur-sm">
                {service.icon}
              </div>
              <h3 className="text-lg sm:text-xl font-bold mb-2 sm:mb-3 group-hover:text-primary transition-colors">{service.title}</h3>
              <p className="text-sm sm:text-base text-foreground/70 mb-4 sm:mb-6 leading-relaxed">{service.description}</p>
              <ul className="space-y-1.5 sm:space-y-2 mb-6 sm:mb-8">
                {service.features.map((feature, idx) => (
                  <li key={idx} className="flex items-center gap-2 text-xs sm:text-sm text-foreground/60">
                    <CheckCircle className="w-3 h-3 sm:w-4 sm:h-4 text-primary flex-shrink-0" />
                    {feature}
                  </li>
                ))}
              </ul>
              
              {/* Learn more button that appears on hover */}
              <div className="absolute bottom-6 sm:bottom-8 right-6 sm:right-8 opacity-0 transform translate-y-2 group-hover:opacity-100 group-hover:translate-y-0 transition-all duration-300 ease-in-out">
                <div className="flex items-center gap-2 px-3 sm:px-4 py-1.5 sm:py-2 rounded-full bg-primary/10 hover:bg-primary/20 text-primary font-medium text-sm">
                  Learn more
                  <ArrowRight className="w-3 h-3 sm:w-4 sm:h-4 group-hover:translate-x-1 transition-transform" />
                </div>
              </div>
            </div>
          </Link>
        ))}
      </div>

      {/* Regular Services - Responsive grid */}
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 md:gap-8">
        {[          {
            title: "Game Development",
            description: "Engaging and immersive gaming experiences across multiple platforms using cutting-edge game engines",
            icon: <Gamepad2 className="w-6 sm:w-8 h-6 sm:h-8 text-primary" />,
            features: ["Unity & Unreal Engine", "Mobile Games", "Cross-platform"],
            gradient: "from-purple-500/5 to-blue-500/5",
            href: "/game-development"
          },
          {
            title: "Mobile App Development",
            description: "Native and cross-platform mobile applications that deliver seamless user experiences across devices",
            icon: <Smartphone className="w-6 sm:w-8 h-6 sm:h-8 text-primary" />,
            features: ["iOS & Android", "React Native", "Flutter"],
            gradient: "from-indigo-500/5 to-cyan-500/5",
            href: "/mobile-app-development"
          },
          {
            title: "UI/UX Design",
            description: "User-centered design solutions that create intuitive, engaging, and effective digital experiences",
            icon: <Brush className="w-6 sm:w-8 h-6 sm:h-8 text-primary" />,
            features: ["User Research", "Wireframing", "Prototype Testing"],
            gradient: "from-blue-500/5 to-teal-500/5",
            href: "/ui-ux-design"
          },
          {
            title: "Logo Design",
            description: "Professional branding solutions with unique and memorable logo designs that capture your brand essence",
            icon: <Palette className="w-8 h-8 text-primary" />,
            features: ["Brand Identity", "Vector Graphics", "Color Theory"],
            gradient: "from-green-500/5 to-emerald-500/5",
            href: "/logo-design"
          },
          {
            title: "Video Editing",
            description: "Professional video editing services that transform raw footage into compelling visual stories",
            icon: <VideoIcon className="w-8 h-8 text-primary" />,
            features: ["Color Grading", "Motion Graphics", "Audio Mixing"],
            gradient: "from-orange-500/5 to-pink-500/5",
            href: "/video-editing"
          },
          {
            title: "Marketing & Social Media",
            description: "Comprehensive digital marketing and social media management services to boost your brand presence",
            icon: <Database className="w-8 h-8 text-primary" />,
            features: ["Content Strategy", "Campaign Management", "Analytics & Insights"],
            gradient: "from-pink-500/5 to-rose-500/5",
            href: "/services/marketing-social-media"          },].map((service, index) => (
          <Link 
            to={service.href}
            key={index}
            className={`group relative overflow-hidden rounded-3xl p-8 hover:bg-primary/5 transition-all duration-300 border border-transparent hover:border-primary/20 bg-gradient-to-br ${service.gradient} cursor-pointer`}
          >
            {/* Ripple effect animation */}
            <span className="absolute inset-0 w-full h-full">
              <span className="ripple-effect absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-0 h-0 rounded-full bg-primary/10 opacity-0 group-hover:animate-ripple pointer-events-none"></span>
            </span>
            
            <div className="absolute top-0 left-0 w-full h-full bg-secondary/5 dark:bg-gray-900/95 opacity-90 group-hover:opacity-95 transition-opacity duration-300"></div>
            <div className="relative z-10">
              <div className="mb-6 p-3 rounded-xl bg-primary/5 w-fit backdrop-blur-sm">
                {service.icon}
              </div>
              <h3 className="text-xl font-bold mb-3 group-hover:text-primary transition-colors">{service.title}</h3>
              <p className="text-foreground/70 mb-6">{service.description}</p>
              <ul className="space-y-2 mb-8">
                {service.features.map((feature, idx) => (
                  <li key={idx} className="flex items-center gap-2 text-sm text-foreground/60">
                    <CheckCircle className="w-4 h-4 text-primary" />
                    {feature}
                  </li>
                ))}
              </ul>
              
              {/* Learn more button that appears on hover */}
              <div className="absolute bottom-8 right-8 opacity-0 transform translate-y-2 group-hover:opacity-100 group-hover:translate-y-0 transition-all duration-300 ease-in-out">
                <div className="flex items-center gap-2 px-4 py-2 rounded-full bg-primary/10 hover:bg-primary/20 text-primary font-medium">
                  Learn more
                  <ArrowRight className="w-4 h-4 group-hover:translate-x-1 transition-transform" />
                </div>
              </div>
            </div>
          </Link>
        ))}
      </div>
    </div>
  </section>
);

/* MAIN COMPONENT */
function Home({ theme, toggleTheme }) {
  const canvasRef = useRef(null);
  const techSphereRef = useRef(null);
  const { scrollYProgress } = useScroll();
  const heroOpacity = useTransform(scrollYProgress, [0, 0.2], [1, 0]);
  const heroY = useTransform(scrollYProgress, [0, 0.2], [0, -100]);
  
  // Add interactive 3D technology sphere
  useEffect(() => {
    if (!techSphereRef.current) return;
    
    const container = techSphereRef.current;
    const width = container.clientWidth;
    const height = container.clientHeight;
    
    // Create scene
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);
    camera.position.z = 400;
    
    const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });
    renderer.setSize(width, height);
    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));
    container.appendChild(renderer.domElement);
    
    // Create sphere
    const geometry = new THREE.SphereGeometry(150, 32, 32);
    const material = new THREE.MeshBasicMaterial({
      color: 0x7b61ff,
      wireframe: true,
      transparent: true,
      opacity: 0.6
    });
    const sphere = new THREE.Mesh(geometry, material);
    scene.add(sphere);
    
    // Add technology icons around the sphere (simplified for this example)
    const iconCount = 20;
    const iconGeometry = new THREE.BoxGeometry(10, 10, 10);
    const iconMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff });
    
    const icons = [];
    for (let i = 0; i < iconCount; i++) {
      const icon = new THREE.Mesh(iconGeometry, iconMaterial);
      const phi = Math.acos(-1 + (2 * i) / iconCount);
      const theta = Math.sqrt(iconCount * Math.PI) * phi;
      
      icon.position.x = 180 * Math.sin(phi) * Math.cos(theta);
      icon.position.y = 180 * Math.sin(phi) * Math.sin(theta);
      icon.position.z = 180 * Math.cos(phi);
      
      icons.push(icon);
      scene.add(icon);
    }
    
    // Animate the sphere
    const animate = () => {
      requestAnimationFrame(animate);
      
      sphere.rotation.x += 0.002;
      sphere.rotation.y += 0.003;
      
      // Make icons stay in place relative to the camera
      icons.forEach(icon => {
        icon.lookAt(camera.position);
      });
      
      renderer.render(scene, camera);
    };
    
    animate();
    
    // Handle window resize
    const handleResize = () => {
      const newWidth = container.clientWidth;
      const newHeight = container.clientHeight;
      
      camera.aspect = newWidth / newHeight;
      camera.updateProjectionMatrix();
      
      renderer.setSize(newWidth, newHeight);
    };
    
    window.addEventListener('resize', handleResize);
    
    return () => {
      window.removeEventListener('resize', handleResize);
      container.removeChild(renderer.domElement);
    };
  }, []);

  useEffect(() => {
    if (!canvasRef.current) return;
    
    const canvas = canvasRef.current;
    const ctx = canvas.getContext('2d');
    
    // Set canvas dimensions
    const setCanvasDimensions = () => {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight * 0.7; // 70vh
    };
    
    setCanvasDimensions();
    window.addEventListener('resize', setCanvasDimensions);
    
    // Create particles
    const particlesArray = [];
    const numberOfParticles = 100;
    
    class Particle {
      constructor() {
        this.x = Math.random() * canvas.width;
        this.y = Math.random() * canvas.height;
        this.size = Math.random() * 3 + 1;
        this.speedX = Math.random() * 1 - 0.5;
        this.speedY = Math.random() * 1 - 0.5;
        this.color = `rgba(123, 97, 255, ${Math.random() * 0.5})`; // Primary color with varying opacity
      }
      
      update() {
        this.x += this.speedX;
        this.y += this.speedY;
        
        if (this.x > canvas.width || this.x < 0) {
          this.speedX = -this.speedX;
        }
        if (this.y > canvas.height || this.y < 0) {
          this.speedY = -this.speedY;
        }
      }
      
      draw() {
        ctx.fillStyle = this.color;
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
        ctx.fill();
      }
    }
    
    const init = () => {
      for (let i = 0; i < numberOfParticles; i++) {
        particlesArray.push(new Particle());
      }
    };
    
    const connectParticles = () => {
      for (let a = 0; a < particlesArray.length; a++) {
        for (let b = a; b < particlesArray.length; b++) {
          const dx = particlesArray[a].x - particlesArray[b].x;
          const dy = particlesArray[a].y - particlesArray[b].y;
          const distance = Math.sqrt(dx * dx + dy * dy);
          
          if (distance < 100) {
            ctx.strokeStyle = `rgba(123, 97, 255, ${0.1 - (distance/100) * 0.1})`;
            ctx.lineWidth = 0.5;
            ctx.beginPath();
            ctx.moveTo(particlesArray[a].x, particlesArray[a].y);
            ctx.lineTo(particlesArray[b].x, particlesArray[b].y);
            ctx.stroke();
          }
        }
      }
    };
    
    const animate = () => {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      
      for (let i = 0; i < particlesArray.length; i++) {
        particlesArray[i].update();
        particlesArray[i].draw();
      }
      
      connectParticles();
      requestAnimationFrame(animate);
    };
    
    init();
    animate();
    
    return () => {
      window.removeEventListener('resize', setCanvasDimensions);
    };
  }, []);

  return (
    <PageTransition>
      <div className="min-h-screen">
        {/* Hero Section with Interactive Sphere and Canvas Background */}
        <div className="relative h-[90vh] md:h-[90vh] flex items-center justify-center overflow-hidden">
          <canvas ref={canvasRef} className="absolute inset-0 z-0 bg-background"></canvas>

          <motion.div 
            ref={techSphereRef}
            className="absolute top-0 right-0 w-full h-full pointer-events-none z-10"
            style={{ opacity: 0.7 }}
          />
          
          <motion.div 
            className="relative z-20 text-center px-4 sm:px-6 max-w-4xl mx-auto"
            style={{ opacity: heroOpacity, y: heroY }}
          >
 <div className="inline-flex items-center gap-2 px-3 sm:px-4 py-1.5 rounded-full border border-primary/20 bg-primary/5 backdrop-blur-sm shadow-lg shadow-primary/5 animate-fade-in mb-4 sm:mb-6">
            <span className="flex h-2 w-2 sm:h-2.5 sm:w-2.5 relative">
              <span className="animate-ping absolute inline-flex h-full w-full rounded-full bg-primary opacity-75"></span>
              <span className="relative inline-flex rounded-full h-2 w-2 sm:h-2.5 sm:w-2.5 bg-primary"></span>
            </span>
            <span className="text-xs sm:text-sm font-semibold text-primary">Enterprise Technology Solutions</span>
          </div>
  <AuroraText
    colors={["#7F00FF", "#E0E0E0", "#9B5DE5", "#BEBEBE"]} // violet + grey gradient
    className="text-3xl sm:text-4xl md:text-5xl lg:text-7xl font-bold mb-4 sm:mb-6 leading-tight px-2"   speed={0.5}
  >
    Jason Tech Solutions
  </AuroraText>
            <motion.p 
              initial={{ opacity: 0, y:20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 0.2 }}
              className="text-base sm:text-lg md:text-xl text-foreground/80 max-w-2xl mx-auto mb-6 sm:mb-8 px-2"
            >
              We create custom, high-performance websites and web applications 
              that help businesses transform their digital presence.
            </motion.p>
<div className="flex flex-wrap justify-center gap-2 sm:gap-2.5 md:gap-3 px-2 mx-auto max-w-3xl animate-fade-in mb-6 sm:mb-8">
  {HERO_SERVICES.map((service, i) => (
    <div
      key={i}
      className="px-2.5 sm:px-3.5 py-1.5 sm:py-2 rounded-full border border-primary/20 bg-primary/5 backdrop-blur-md flex items-center gap-1.5 sm:gap-2.5 shadow-sm cursor-default dark:bg-neutral-900/80 dark:border-primary/40 dark:backdrop-blur-xl text-xs sm:text-sm"
    >
      <span className="text-primary p-0.5 sm:p-1 bg-primary/10 rounded-full">{service.icon}</span>
      <span className="font-medium text-foreground/90 dark:text-foreground/90 whitespace-nowrap">{service.title}</span>
    </div>
  ))}
</div>
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 0.4 }}
              className="flex flex-col sm:flex-row gap-3 sm:gap-4 justify-center px-4"
            >
              <a 
                href="#contact" 
                className="bg-primary text-primary-foreground px-6 sm:px-8 py-3 sm:py-4 rounded-full text-base sm:text-lg font-medium hover:shadow-lg hover:shadow-primary/20 transition-all flex items-center justify-center gap-2 hover:translate-y-[-2px] min-w-[200px] sm:min-w-auto"
              >
                Start Your Project
                <ArrowUpRight className="w-4 h-4 sm:w-5 sm:h-5" />
              </a>
              <a 
                href="#services" 
                className="bg-background border border-primary/30 text-foreground px-6 sm:px-8 py-3 sm:py-4 rounded-full text-base sm:text-lg font-medium hover:bg-primary/5 transition-colors hover:translate-y-[-2px] min-w-[200px] sm:min-w-auto"
              >
                Explore Services
              </a>
            </motion.div>
          </motion.div>
          
          {/* Stats Section */}
          <motion.div 
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.6 }}
            className="absolute bottom-4 sm:bottom-10 left-0 right-0 z-10"
          >
            <div className="max-w-5xl mx-auto grid grid-cols-2 md:grid-cols-4 gap-2 sm:gap-4 px-4">
              {[
                { value: "150+", label: "Projects Completed" },
                { value: "98%", label: "Client Satisfaction" },
                { value: "5+", label: "Years Experience" },
                { value: "24/7", label: "Support" }              ].map((stat, index) => (
                <div key={index} className="bg-background/40 backdrop-blur-md rounded-lg sm:rounded-xl p-3 sm:p-4 text-center border border-gray-300/5">
                  <div className="text-lg sm:text-2xl md:text-3xl font-bold text-primary">{stat.value}</div>
                  <div className="text-xs sm:text-sm text-foreground/70 leading-tight">{stat.label}</div>
                </div>
              ))}
            </div>
          </motion.div>
        </div>
        
        <Trusted />
        <ServicesSection />
        <UpcomingProjectsShowcase />
        <DesignsSection />


        <ProcessTimeline />
        
              <section className="py-12 sm:py-16 md:py-24 px-4">
                <div className="max-w-5xl mx-auto text-center">
                  <motion.div
                    initial={{ opacity: 0, y: 20 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.5 }}
                    className="relative p-8 sm:p-12 md:p-16 rounded-2xl sm:rounded-3xl overflow-hidden"
                  >
                    {/* Animated background with gradient and particles */}
                    <div className="absolute inset-0 bg-gradient-to-br from-primary/20 via-violet-500/20 to-primary/10"></div>
                    <Meteors number={15} />
                    
                    <div className="absolute inset-0 flex items-center justify-center opacity-5">
                      <svg width="600" height="400" viewBox="0 0 600 400" fill="none" xmlns="http://www.w3.org/2000/svg" className="w-full h-full">
                        <path d="M200,0 Q400,0 500,200 Q400,400 200,400 Q0,400 100,200 Q0,0 200,0 Z" fill="url(#grad1)" />
                        <defs>
                          <linearGradient id="grad1" x1="0%" y1="0%" x2="100%" y2="100%">
                            <stop offset="0%" stopColor="#7b61ff" />
                            <stop offset="100%" stopColor="#8b5cf6" />
                          </linearGradient>
                        </defs>
                      </svg>
                    </div>
                    
                    <div className="relative z-10">
                      <motion.div
                        initial={{ scale: 0.9, opacity: 0 }}
                        whileInView={{ scale: 1, opacity: 1 }}
                        transition={{ duration: 0.5 }}
                      >
                        <span className="inline-block px-3 sm:px-4 py-1.5 bg-primary text-white rounded-full text-sm font-medium mb-4 sm:mb-6">
                          Let's Build Something Amazing
                        </span>
                      </motion.div>
                      
                      <motion.h2 
                        className="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold mb-4 sm:mb-6 px-2"
                        initial={{ opacity: 0 }}
                        whileInView={{ opacity: 1 }}
                        transition={{ duration: 0.5, delay: 0.2 }}
                      >
                        Ready to Start Your Web Project?
                      </motion.h2>
                      
                      <motion.p 
                        className="text-base sm:text-lg md:text-xl text-foreground/80 mb-8 sm:mb-10 max-w-2xl mx-auto px-2"
                        initial={{ opacity: 0 }}
                        whileInView={{ opacity: 1 }}
                        transition={{ duration: 0.5, delay: 0.3 }}
                      >
                        Let's collaborate to create a website that elevates your brand, engages your audience, and drives business growth.
                      </motion.p>
                      
                      <motion.div 
                        className="flex flex-col sm:flex-row gap-4 sm:gap-6 justify-center px-4"
                        initial={{ opacity: 0, y: 20 }}
                        whileInView={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.5, delay: 0.4 }}
                      >
                        <motion.a 
                          href="#contact" 
                          className="relative bg-primary text-white px-6 sm:px-8 py-3 sm:py-4 rounded-full text-base sm:text-lg font-semibold overflow-hidden group min-w-[200px] sm:min-w-auto"
                          whileHover={{ scale: 1.05 }}
                          whileTap={{ scale: 0.98 }}
                        >
                          <span className="absolute inset-0 w-full h-full bg-gradient-to-r from-violet-600 to-primary opacity-0 group-hover:opacity-100 transition-opacity duration-300"></span>
                          <span className="relative flex items-center justify-center gap-2">
                            Start Your Project
                            <ArrowUpRight className="w-4 h-4 sm:w-5 sm:h-5 group-hover:translate-x-1 group-hover:-translate-y-1 transition-transform duration-300" />
                          </span>
                        </motion.a>
                        
                        <motion.a 
                          href="tel:+1234567890" 
                          className="relative px-6 sm:px-8 py-3 sm:py-4 rounded-full text-base sm:text-lg font-semibold overflow-hidden group bg-background border border-primary/20 min-w-[200px] sm:min-w-auto"
                          whileHover={{ scale: 1.05 }}
                          whileTap={{ scale: 0.98 }}
                        >
                          <span className="absolute inset-0 w-full h-full bg-primary/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></span>
                          <span className="relative flex items-center justify-center gap-2">
                            Schedule a Call
                            <ArrowUpRight className="w-4 h-4 sm:w-5 sm:h-5 group-hover:translate-x-1 group-hover:-translate-y-1 transition-transform duration-300" />
                          </span>
                        </motion.a>
                      </motion.div>
                    </div>
                  </motion.div>
                </div>
              </section>
      </div>
    </PageTransition>
  );
}

export default Home;

</div>




import { motion, AnimatePresence } from "framer-motion";
import { useState, useRef, useEffect, memo, useMemo, useCallback } from "react";
import PageTransition from '../components/PageTransition';
import { AuroraBackground } from '../components/AuroraBackground';
import { Globe } from "@/components/magicui/globe";
import { 
  ArrowRight, Code, Users, Award, BarChart, 
  BadgeCheck, LineChart, Gamepad2, Palette, 
  VideoIcon, Brush, Lightbulb, ArrowLeft,ArrowDown,  MessageSquare, CheckCircle, Phone, Mail, MessageCircle
} from "lucide-react";
import { Smartphone } from "lucide-react";
import FeaturesSectionDemo from '../components/FeaturesSectionDemo';
import { Link } from "react-router-dom";

/* THEME AND UI CONFIGURATION */
const THEME = {
  primary: {
    DEFAULT: "#0070F3",
    light: "#3291FF",
  },
  secondary: {
    DEFAULT: "#7928CA",
  },
  background: {
    DEFAULT: "#FCFCFC",
    muted: "#F5F5F5",
  },
  foreground: {
    DEFAULT: "#18181B",
  },
  accent: {
    blue: "#2563EB",
    cyan: "#06B6D4",
    green: "#10B981", 
    yellow: "#FBBF24",
    orange: "#F97316",
  }
};

const UI = {
  // Card patterns - unified
  card: {
    base: "rounded-2xl overflow-hidden border border-secondary/20 hover:border-primary/30 transition-all duration-300 hover:shadow-lg hover:shadow-primary/10 bg-background/50 backdrop-blur-sm",
    padding: "p-6 md:p-8",
    iconContainer: "mb-6 bg-primary/10 w-16 h-16 rounded-xl flex items-center justify-center",
    hover: {
      transform: "hover:-translate-y-1",
      glow: "group-hover:opacity-100 opacity-0 transition-opacity duration-300"
    }
  },
  
  // Typography system - unified
  text: {
    heading: {
      h1: "text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold leading-tight tracking-tight",
      h2: "text-2xl sm:text-3xl md:text-4xl font-bold",
      h3: "text-xl md:text-2xl font-bold",
      h4: "text-lg font-semibold",
      section: "text-4xl md:text-5xl font-bold mt-4 mb-4 bg-clip-text text-transparent bg-gradient-to-r from-primary to-secondary"
    },
    body: {
      default: "text-foreground/70",
      sm: "text-sm text-foreground/70",
      lg: "text-lg text-foreground/70"
    },
    accent: "text-primary"
  },
  
  // Gradient patterns - unified
  gradients: {
    primary: "bg-clip-text text-transparent bg-gradient-to-r from-primary to-secondary",
    hover: "bg-gradient-to-r from-primary/10 to-secondary/10",
    card: "bg-gradient-to-r from-primary/5 to-secondary/5",
    glow: "bg-gradient-to-r from-primary/0 via-primary/30 to-secondary/0 blur-sm"
  },
  
  // Button styles - unified
  button: {
    base: "flex items-center gap-2 font-medium transition-all",
    sizes: {
      sm: "px-3 py-1.5 text-sm",
      md: "px-5 py-2.5 text-sm", 
      lg: "px-6 py-3 text-base"
    },
    variants: {
      primary: "bg-primary hover:bg-primary/90 text-white", 
      secondary: "bg-primary/10 hover:bg-primary/20 text-primary",
      outline: "border-2 border-primary/30 hover:bg-primary/10 text-primary"
    },
    pill: "rounded-full",
    icon: "group-hover:translate-x-1 transition-transform duration-300"
  },
  
  // Section & spacing - unified
  section: {
    padding: "py-16 md:py-24",
    container: "max-w-7xl mx-auto relative z-10",
    eyebrow: "text-primary text-sm font-medium uppercase tracking-wider bg-primary/10 px-4 py-1 rounded-full inline-block"
  },
  
  // Effects - unified
  effects: {
    glow: "absolute -inset-0.5 bg-gradient-to-r from-primary/0 via-primary/30 to-secondary/0 opacity-0 group-hover:opacity-100 rounded-2xl blur-sm transition-opacity duration-300",
    hoverLift: "transition-transform duration-300 hover:-translate-y-1"
  }
};

/* ANIMATIONS */
const animations = {
  fadeIn: {
    initial: { opacity: 0 },
    animate: { opacity: 1 },
    transition: { duration: 0.5 }
  },
  fadeInUp: {
    initial: { opacity: 0, y: 20 },
    animate: { opacity: 1, y: 0 },
    transition: { duration: 0.5 }
  }
};

const createMotionProps = (type, delay = 0) => {
  const base = animations[type];
  return {
    ...base,
    viewport: { once: true },
    transition: { 
      ...base.transition, 
      delay: delay 
    }
  };
};

/* REUSABLE COMPONENTS */
const Section = ({ children, dark = false, pattern = false, className = "", id = null }) => (
  <section 
    id={id}
    className={`py-24 px-4 ${
      dark ? 'bg-background' : 
      'bg-background'
    } ${className}`}
    aria-labelledby={id}
  >
    {pattern && (
      <div className="absolute inset-0 bg-[linear-gradient(to_right,#80808008_1px,transparent_1px),linear-gradient(to_bottom,#80808008_1px,transparent_1px)] bg-[size:24px_24px]"></div>
    )}
    <div className="max-w-7xl mx-auto relative z-10">
      {children}
    </div>
  </section>
);

// Universal Card component
const Card = ({ 
  children, 
  className = "", 
  hoverEffect = true, 
  gradient = false,
  border = true,
  glow = true,
  onClick = null 
}) => (
  <motion.div
    whileHover={hoverEffect ? { y: -5 } : {}}
    transition={{ duration: 0.2 }}
    className={`group relative ${UI.card.base} ${
      border ? "" : "border-0"
    } ${className}`}
    onClick={onClick}
  >
    {/* Conditional glow effect */}
    {glow && (
      <div className={UI.effects.glow}></div>
    )}
    
    {/* Conditional background gradient */}
    {gradient && (
      <div className="absolute inset-0 bg-gradient-to-r from-primary/5 to-secondary/5 rounded-2xl"></div>
    )}
    
    {/* Card content */}
    <div className={`${UI.card.padding} relative z-10 h-full flex flex-col`}>
      {children}
    </div>
  </motion.div>
);

// Update the ServiceCard component for better interactivity and visual appeal
const ServiceCard = ({ service, index }) => {
  const [isHovered, setIsHovered] = useState(false);

  return (
    <Link to={service.href} tabIndex={0} className="block focus:outline-none" key={index}>
      <div
        className={`${UI.card.base} group relative overflow-hidden hover:-translate-y-1 hover:shadow-lg hover:shadow-primary/10 transition-all duration-300`}
        onMouseEnter={() => setIsHovered(true)}
        onMouseLeave={() => setIsHovered(false)}
        tabIndex={-1}
        role="button"
        aria-label={service.title}
      >
        {/* Service glow effect */}
        <div className="absolute -inset-0.5 bg-gradient-to-r from-primary/0 via-primary/30 to-secondary/0 opacity-0 group-hover:opacity-100 rounded-2xl blur-sm transition-opacity duration-300"></div>
        
        <div className={`${UI.card.padding} relative z-10 bg-background/95 rounded-2xl h-full flex flex-col`}>
          {/* Icon with enhanced animation */}
          <div className={`${UI.card.iconContainer} relative transition-all duration-300 group-hover:scale-110 group-hover:shadow-lg group-hover:shadow-primary/20`}>
            <motion.div 
      
              transition={{ duration: 0.7, ease: "easeInOut" }}
              className="absolute inset-0 bg-primary/10 rounded-xl" />
            <div className="relative z-10">
              {service.icon}
            </div>
          </div>
          
          {/* Content with better spacing */}
          <h3 className={`text-lg md:text-xl ${UI.text.heading} mb-2 md:mb-3 group-hover:text-primary transition-colors`}>
            {service.title}
          </h3>
          
          <p className={`${UI.text.body} text-sm mb-4 md:mb-6`}>
            {service.description}
          </p>
          
          {/* Features list with improved bullets */}
          <div className="flex-grow">
            <h4 className="text-sm font-medium text-primary/80 mb-3">Features:</h4>
            <ul className="space-y-2">
              {service.features.map((feature, i) => (
                <li key={i} className="flex items-center text-sm text-foreground/70">
                  <span className="mr-2 h-1.5 w-1.5 rounded-full bg-primary/70"></span>
                  {feature}
                </li>
              ))}
            </ul>
          </div>
          
          {/* Bottom CTA with animation */}
          <div className="mt-6 pt-4 border-t border-secondary/10">
            <motion.div 
              className="flex items-center justify-between text-primary font-medium"
              animate={{ x: isHovered ? 0 : 5, opacity: isHovered ? 1 : 0.9 }}
              transition={{ duration: 0.3 }}
            >
              <span className="text-sm">Learn more</span>
              <ArrowRight size={16} className="ml-2 group-hover:translate-x-1.5 transition-transform" />
            </motion.div>
          </div>
        </div>
      </div>
    </Link>
  );
};

// Add this new component for mobile services carousel
const MobileServiceCarousel = ({ services }) => {
  const [activeIndex, setActiveIndex] = useState(0);
  const carouselRef = useRef(null);
  
  useEffect(() => {
    const handleScroll = () => {
      if (!carouselRef.current) return;
      
      const scrollPosition = carouselRef.current.scrollLeft;
      const itemWidth = carouselRef.current.offsetWidth;
      const newIndex = Math.round(scrollPosition / itemWidth);
      
      if (newIndex !== activeIndex) {
        setActiveIndex(newIndex);
      }
    };
    
    const carousel = carouselRef.current;
    if (carousel) {
      carousel.addEventListener('scroll', handleScroll);
      return () => carousel.removeEventListener('scroll', handleScroll);
    }
  }, [activeIndex]);
  
  return (
    <>
      <div 
        ref={carouselRef}
        className="flex overflow-x-auto snap-x snap-mandatory hide-scrollbar -mx-4 px-4 pb-6"
      >
        {services.map((service, index) => (
          <div 
            key={index} 
            className="w-full flex-shrink-0 snap-center px-2 first:pl-4 last:pr-4"
          >
            <ServiceCard service={service} index={index} />
          </div>
        ))}
      </div>
      
      <div className="flex justify-center gap-1.5 mt-4">
        {services.map((_, index) => (
          <button
            key={index}
            onClick={() => {
              if (carouselRef.current) {
                carouselRef.current.scrollLeft = index * carouselRef.current.offsetWidth;
              }
            }}
            aria-label={`Go to slide ${index + 1}`}
            className={`w-2.5 h-2.5 rounded-full transition-colors ${
              activeIndex === index 
                ? 'bg-primary' 
                : 'bg-primary/30'
            }`}
          />
        ))}
      </div>
    </>
  );
};

// Update the Services Section
const ServicesSection = memo(() => {
  const isMobile = useRef(false);
  const [isClient, setIsClient] = useState(false);
  
  useEffect(() => {
    // Only check device on client side
    isMobile.current = window.innerWidth < 768;
    setIsClient(true);
    
    const handleResize = () => {
      isMobile.current = window.innerWidth < 768;
    };
    
    // Add passive flag for better scroll performance
    window.addEventListener('resize', handleResize, { passive: true });
    return () => window.removeEventListener('resize', handleResize);
  }, []);
  
  return (
    <Section id="our-services-section">
      <SectionHeading 
        eyebrow="What We Do" 
        title="Our Services" 
        description="We deliver cutting-edge solutions tailored to your specific business needs, leveraging the latest technologies and industry best practices."
        center={true} 
      />
      

      
      {/* Service cards - client-side only rendering for better initial load */}
      {isClient && (
        <>
          {isMobile.current ? (
            <MobileServiceCarousel services={SERVICES} />
          ) : (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {SERVICES.map((service, index) => (
                <ServiceCard key={index} service={service} index={index} />
              ))}
            </div>
          )}
        </>
      )}
    </Section>
  );
});

/* PROJECTS LIST COMPONENT */
const ProjectsList = ({ projects }) => {
  const [activeProject, setActiveProject] = useState(0);
  
  return (
    <div className="grid grid-cols-1 lg:grid-cols-12 gap-8 items-start">
      <div className="lg:col-span-4 lg:border-r border-secondary/10 lg:pr-8">
        <nav className="space-y-1" aria-label="Project Navigation">
          {projects.map((project, index) => (
            <motion.button
              key={index}
              onClick={() => setActiveProject(index)}
              initial={{ opacity: 0, x: -20 }}
              whileInView={{ opacity: 1, x: 0 }}
              viewport={{ once: true }}
              transition={{ delay: index * 0.05, duration: 0.4 }}
              className={`w-full text-left py-4 px-4 rounded-xl flex items-center justify-between group transition-all ${
                activeProject === index 
                  ? 'bg-primary/10 text-primary shadow-sm' 
                  : 'hover:bg-secondary/5'
              }`}
            >
              <div className="flex items-center">
                <span className={`h-2 w-2 rounded-full mr-3 ${
                  activeProject === index ? 'bg-primary' : 'bg-secondary/30 group-hover:bg-primary/50'
                } transition-colors`}></span>
                <div>
                  <h3 className={`font-medium ${
                    activeProject === index ? 'text-primary' : 'text-foreground/80 group-hover:text-primary/80'
                  } transition-colors`}>
                    {project.title}
                  </h3>
                  <p className="text-xs text-foreground/50 mt-1">{project.category}</p>
                </div>
              </div>
              <ArrowRight
                className={`w-4 h-4 transform transition-all ${
                  activeProject === index ? 'text-primary translate-x-0' : 'opacity-0 -translate-x-4 group-hover:opacity-40 group-hover:translate-x-0'
                }`}
              />
            </motion.button>
          ))}
        </nav>
        
        <div className="hidden lg:block mt-8 pt-8 border-t border-secondary/10">
          <div className="flex items-center justify-between">
            <button 
              onClick={() => setActiveProject(prev => (prev === 0 ? projects.length - 1 : prev - 1))}
              className="p-2 rounded-full hover:bg-primary/10 text-foreground/60 hover:text-primary transition-colors"
              aria-label="Previous project"
            >
              <ArrowLeft size={20} />
            </button>
            <p className="text-sm text-foreground/60">
              {activeProject + 1} of {projects.length}
            </p>
            <button 
              onClick={() => setActiveProject(prev => (prev === projects.length - 1 ? 0 : prev + 1))}
              className="p-2 rounded-full hover:bg-primary/10 text-foreground/60 hover:text-primary transition-colors"
              aria-label="Next project"
            >
              <ArrowRight size={20} />
            </button>
          </div>
        </div>
      </div>
      
      <div className="lg:col-span-8">
        <AnimatePresence mode="wait">
          <motion.div
            key={activeProject}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -20 }}
            transition={{ duration: 0.4 }}
            className="rounded-2xl overflow-hidden shadow-xl group relative"
          >
            <div className="relative h-[600px] overflow-hidden">
              <div className="absolute inset-0 w-full h-full">
                <img 
                  src={projects[activeProject].image}
                  alt={projects[activeProject].title}
                  className="w-full h-full object-cover transition-transform duration-700 group-hover:scale-105"
                />
              </div>
              
              <div className="absolute inset-0 bg-gradient-to-t from-black/90 via-black/40 to-transparent"></div>
              <div className="absolute inset-0 bg-gradient-to-r from-black/40 to-transparent"></div>
              
              <div className="absolute top-6 left-6 z-20">
                <span className="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-primary/40 text-white backdrop-blur-sm border border-primary/20">
                  {projects[activeProject].category}
                </span>
              </div>
              
              {projects[activeProject].featured && (
                <div className="absolute top-6 right-6 z-20">
                  <span className="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-yellow-500/40 text-white backdrop-blur-sm border border-yellow-500/20">
                    <BadgeCheck className="w-3 h-3 mr-1" />
                    Featured
                  </span>
                </div>
              )}
              
              <div className="absolute bottom-0 left-0 right-0 p-8 z-20">
                <h3 className="text-3xl md:text-4xl font-bold text-white mb-4 group-hover:text-primary/90 transition-colors">
                  <span className="relative">
                    {projects[activeProject].title}
                    <span className="absolute bottom-0 left-0 w-0 h-0.5 bg-primary group-hover:w-full transition-all duration-300"></span>
                  </span>
                </h3>
                
                <p className="text-white/90 mb-6 max-w-lg text-lg">
                  {projects[activeProject].description}
                </p>
                
                <div className="flex flex-wrap gap-2 mb-8">
                  {['React', 'TypeScript', 'Node.js', 'Tailwind', 'Next.js'].slice(0, 3 + Math.floor(Math.random() * 2)).map((tech, i) => (
                    <span key={i} className="px-3 py-1.5 bg-white/10 backdrop-blur-sm border border-white/10 rounded-md text-sm text-white">
                      {tech}
                    </span>
                  ))}
                </div>
                
                <div className="flex items-center justify-between">
                  {projects[activeProject].stats && (
                    <div className="flex items-center text-primary/90 text-sm bg-black/30 px-4 py-2 rounded-full backdrop-blur-sm">
                      <BarChart className="w-4 h-4 mr-2" />
                      {projects[activeProject].stats}
                    </div>
                  )}
                  
                  <button className="bg-primary hover:bg-primary/90 text-white px-6 py-3 rounded-full font-medium transition-all flex items-center group/btn">
                    View Project
                    <ArrowRight size={16} className="ml-2 group-hover/btn:translate-x-1 transition-transform" />
                  </button>
                </div>
              </div>
            </div>
          </motion.div>
        </AnimatePresence>

        {/* Mobile Navigation Controls */}
        <div className="flex items-center justify-between mt-6 lg:hidden">
          <button 
            onClick={() => setActiveProject(prev => (prev === 0 ? projects.length - 1 : prev - 1))}
            className="p-2 rounded-full hover:bg-primary/10 text-foreground/60 hover:text-primary transition-colors"
            aria-label="Previous project"
          >
            <ArrowLeft size={20} />
          </button>
          <p className="text-sm text-foreground/60">
            {activeProject + 1} of {projects.length}
          </p>
          <button 
            onClick={() => setActiveProject(prev => (prev === projects.length - 1 ? 0 : prev + 1))}
            className="p-2 rounded-full hover:bg-primary/10 text-foreground/60 hover:text-primary transition-colors"
            aria-label="Next project"
          >
            <ArrowRight size={20} />
          </button>
        </div>
      </div>
    </div>
  );
};

/* SECTION COMPONENTS */
const SectionHeading = ({ eyebrow, title, center = false, description = null }) => (
  <div className={`mb-16 ${center ? 'text-center' : ''}`}>
    <motion.span
      {...createMotionProps('fadeIn')}
      className="text-primary text-sm font-medium uppercase tracking-wider bg-primary/10 px-4 py-1 rounded-full inline-block"
    >
      {eyebrow}
    </motion.span>
    <motion.h2 
      {...createMotionProps('fadeInUp', 0.1)}
      className="text-4xl md:text-5xl font-bold mt-4 mb-4 bg-clip-text text-transparent bg-gradient-to-r from-primary to-blue-500"
    >
      {title}
    </motion.h2>
    {description && (
      <motion.p
        {...createMotionProps('fadeInUp', 0.2)}
        className={`text-lg text-foreground/70 max-w-2xl ${center ? 'mx-auto' : ''}`}
      >
        {description}
      </motion.p>
    )}
    {center && (
      <motion.div
        {...createMotionProps('fadeInUp', 0.2)}
        className="h-1 w-20 bg-primary mx-auto rounded-full mt-6"
      />
    )}
  </div>
);

const CTAButton = ({ primary = true, children, className = "", small = false, onClick = null }) => (
  <button className={`group relative overflow-hidden rounded-full border-2 ${primary ? 'border-primary' : 'border-primary/70'} ${primary ? 'bg-primary' : 'bg-transparent'} 
    ${small ? 'px-4 py-2 text-sm' : 'px-8 py-4 text-lg'} font-semibold transition-all hover:scale-95 w-full sm:w-auto ${className}`} onClick={onClick}>
    <span className={`relative z-10 transition-colors ${primary ? 'text-background group-hover:text-primary' : 'text-primary group-hover:text-background'} flex items-center justify-center gap-2`}>
      {children}
    </span>
    <div className={`absolute inset-0 z-0 ${primary ? 'bg-background' : 'bg-primary'} translate-y-full transition-transform duration-300 group-hover:translate-y-0`} />
  </button>
);

// Universal Button component
const Button = ({ 
  children, 
  variant = "primary", 
  size = "md", 
  pill = true,
  href = null,
  className = "",
  onClick = null
}) => {
  const buttonClasses = `
    ${UI.button.base}
    ${UI.button.variants[variant]}
    ${UI.button.sizes[size]}
    ${pill ? UI.button.pill : "rounded-lg"}
    ${className}
  `;
  
  const content = (
    <span className="flex items-center justify-center gap-2 group">
      {children}
    </span>
  );
  
  if (href) {
    return (
      <a href={href} className={buttonClasses}>
        {content}
      </a>
    );
  }
  
  return (
    <button onClick={onClick} className={buttonClasses}>
      {content}
    </button>
  );
};

/* CONSTANTS AND DATA */
const COMPANY_LOGOS = [
  'https://upload.wikimedia.org/wikipedia/commons/4/44/Microsoft_logo.svg',
  'https://upload.wikimedia.org/wikipedia/commons/a/a9/Amazon_logo.svg',
  'https://upload.wikimedia.org/wikipedia/commons/2/2f/Google_2015_logo.svg',
  'https://upload.wikimedia.org/wikipedia/commons/5/51/IBM_logo.svg',
  'https://upload.wikimedia.org/wikipedia/commons/5/50/Oracle_logo.svg',
  'https://upload.wikimedia.org/wikipedia/commons/f/f9/Salesforce.com_logo.svg'
];

const SERVICES = [
  {
    title: "Web Development",
    description: "Custom websites and web applications built with modern technologies and best practices for optimal performance",
    icon: <Code className="w-10 h-10 text-primary" />,
    features: ["Responsive Design", "SEO Optimization", "Performance Tuning", "Custom Solutions"],
    href: "/web-development",
    delay: 0
  },
  {
    title: "Game Development",
    description: "Engaging and immersive gaming experiences across multiple platforms using cutting-edge game engines",
    icon: <Gamepad2 className="w-10 h-10 text-primary" />,
    features: ["Unity & Unreal Engine", "Mobile Games", "Cross-platform", "3D/2D Games"],
    href: "/game-development",
    delay: 0.2
  },
  {
    title: "Logo Design",
    description: "Professional branding solutions with unique and memorable logo designs that capture your brand essence",
    icon: <Palette className="w-10 h-10 text-primary" />,
    features: ["Brand Identity", "Vector Graphics", "Color Theory", "Scalable Designs"],
    href: "/logo-design",
    delay: 0.4
  },
  {
    title: "Video Editing",
    description: "Professional video editing services that transform raw footage into compelling visual stories",
    icon: <VideoIcon className="w-10 h-10 text-primary" />,
    features: ["Color Grading", "Motion Graphics", "Audio Mixing", "Post-Production"],
    href: "/video-editing",
    delay: 0.6
  },
  {
    title: "UI/UX Design",
    description: "User-centered design solutions that create intuitive, engaging, and effective digital experiences",
    icon: <Brush className="w-10 h-10 text-primary" />,
    features: ["User Research", "Wireframing", "Prototype Testing", "Interaction Design"],
    href: "/ui-ux-design",
    delay: 0.8
  },
  {
    title: "Mobile App Development",
    description: "Native and cross-platform mobile applications that deliver seamless user experiences across devices",
    icon: <Smartphone className="w-10 h-10 text-primary" />,
    features: ["iOS & Android", "React Native", "Flutter", "App Store Optimization"],
    href: "/mobile-app-development",
    delay: 1.0
  }
];

const PROJECTS = [
  {
    title: "E-commerce Platform",
    description: "A full-featured online shopping platform with advanced product filtering and secure checkout",
    category: "Web Development",
    image: "https://images.unsplash.com/photo-1661956602116-aa6865609028?ixlib=rb-4.0.3&auto=format&fit=crop&w=1280&q=80",
    featured: true,
    color: THEME.accent.blue
  },
  {
    title: "Corporate Rebrand",
    description: "Complete visual identity overhaul for a Fortune 500 financial services company",
    category: "Logo Design",
    image: "https://images.unsplash.com/photo-1558655146-9f40138edfeb?ixlib=rb-4.0.3&auto=format&fit=crop&w=1280&q=80",
    stats: "40% increase in brand recognition",
    color: THEME.accent.orange
  },
  {
    title: "Mobile RPG Game",
    description: "Fantasy role-playing game with immersive 3D environments and strategic combat",
    category: "Game Development",
    image: "https://images.unsplash.com/photo-1614294148960-9aa740632a87?ixlib=rb-4.0.3&auto=format&fit=crop&w=1280&q=80",
    featured: true,
    color: THEME.accent.green
  },
  {
    title: "Promotional Video Series",
    description: "Award-winning product launch videos featuring cinematic visuals and compelling storytelling",
    category: "Video Editing",
    image: "https://images.unsplash.com/photo-1536240478700-b869070f9279?ixlib=rb-4.0.3&auto=format&fit=crop&w=1280&q=80",
    stats: "2M+ views",
    color: THEME.accent.cyan
  },
  {
    title: "Banking App Redesign",
    description: "User experience transformation resulting in 40% increase in mobile transactions",
    category: "UI/UX Design",
    image: "https://images.unsplash.com/photo-1563986768609-322da13575f3?ixlib=rb-4.0.3&auto=format&fit=crop&w=1280&q=80",
    stats: "85% user satisfaction",
    color: THEME.secondary.DEFAULT
  }
];

const TESTIMONIALS = [
  {
    quote: "Jason Tech Solutions transformed our operations with their cloud migration strategy. Our infrastructure costs decreased by 40% while performance improved significantly.",
    author: "Sarah Johnson",
    position: "CTO, Global Retail Inc.",
    image: "/api/placeholder/64/64",
    delay: 0
  },
  {
    quote: "The AI solution implemented by the team has revolutionized how we analyze customer data. We're now able to predict trends and make proactive decisions.",
    author: "Michael Chen",
    position: "Data Director, FinTech Solutions",
    image: "/api/placeholder/64/64",
    delay: 0.2
  },
  {
    quote: "After experiencing a security breach, we hired Jason Tech to overhaul our cybersecurity. Their comprehensive approach has given us peace of mind and protected our reputation.",
    author: "Emma Rodriguez",
    position: "CISO, Healthcare Systems",
    image: "/api/placeholder/64/64",
    delay: 0.4
  }
];

const WHY_CHOOSE_US = [
  {
    title: "Expert Team",
    description: "Senior engineers and consultants with 10+ years of industry experience",
    icon: <Users className="w-6 h-6 text-primary" />
  },
  {
    title: "Proven Results",
    description: "Track record of delivering projects on time and exceeding expectations",
    icon: <Award className="w-6 h-6 text-primary" />
  },
  {
    title: "Future-Proof Solutions",
    description: "Technology that scales with your business and adapts to changing needs",
    icon: <Lightbulb className="w-6 h-6 text-primary" />
  }
];

const HERO_SERVICES = [
  { title: "Web Development", icon: <Code className="w-4 h-4" /> },
  { title: "Game Development", icon: <Gamepad2 className="w-4 h-4" /> },
  { title: "Logo Design", icon: <Palette className="w-4 h-4" /> },
  { title: "Video Editing", icon: <VideoIcon className="w-4 h-4" /> },
  { title: "UI/UX Design", icon: <Brush className="w-4 h-4" /> },
  { title: "Mobile App Development", icon: <Smartphone className="w-4 h-4" /> },
];

/* HERO SECTION */
const HeroSection = () => {
  return (
    <section className="relative min-h-screen flex items-center justify-center overflow-hidden pt-20 pb-16 md:pb-24" aria-labelledby="hero-heading">
      {/* Enhanced background with depth layers */}

      {/* Improved globe with better positioning and effects 
     <div className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 pointer-events-none">
        <motion.div

          className="w-[min(110vw,110vh)] h-[min(110vw,110vh)] md:w-[800px] md:h-[800px]"
        >
          <Globe />
        </motion.div>
      </div>*/}

      {/* Main content with improved layout */}
      <div className="relative z-20 container mx-auto px-4 md:px-6 py-8">
        <div className="max-w-4xl mx-auto text-center space-y-8 md:space-y-10">
          {/* Enhanced label with improved design */}
          <motion.div
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            className="inline-flex items-center gap-2 px-4 py-1.5 rounded-full border border-primary/20 bg-primary/5 backdrop-blur-sm shadow-lg shadow-primary/5"
          >
            <span className="flex h-2.5 w-2.5 relative">
              <span className="animate-ping absolute inline-flex h-full w-full rounded-full bg-primary opacity-75"></span>
              <span className="relative inline-flex rounded-full h-2.5 w-2.5 bg-primary"></span>
            </span>
            <span className="text-sm font-semibold text-primary">Enterprise Technology Solutions</span>
          </motion.div>
          
          {/* Improved heading with better typography */}
          <div className="space-y-4">
            <motion.h1 
              id="hero-heading"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.7, delay: 0.1 }}
              className="text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-extrabold leading-tight tracking-tight"
            >
              <span className="bg-clip-text text-transparent bg-gradient-to-r from-primary via-blue-600 to-violet-700 drop-shadow[0_1px_2px_rgba(0,0,0,0.15)]-sm">
                Jason Tech Solutions
              </span>
            </motion.h1>
            
            {/* Static typing effect replaced here */}
            <div className="h-14 flex items-center justify-center">
              <h2 className="text-xl md:text-2xl lg:text-3xl font-medium text-foreground/80">
                We help companies <span className="text-primary relative">transform businesses</span>
              </h2>
            </div>
          </div>
          
          {/* Service tags - hover effect removed */}
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ duration: 0.6, delay: 0.5 }}
            className="flex flex-wrap justify-center gap-2.5 md:gap-3 px-2 mx-auto max-w-3xl"
          >
            {HERO_SERVICES.map((service, i) => (
              <motion.div
                className="
              px-3.5 py-2 rounded-full border border-primary/20 
    bg-primary/5 backdrop-blur-md flex items-center gap-2.5 shadow-sm cursor-default
    dark:bg-neutral-900/80 dark:border-primary/40 dark:backdrop-blur-xl
  "
              >
                <span className="text-primary p-1 bg-primary/10 rounded-full">{service.icon}</span>
                <span className="text-sm font-medium text-foreground/90 dark:text-foreground/90">{service.title}</span>
              </motion.div>
            ))}
          </motion.div>
          
          {/* Improved CTA buttons */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6, delay: 0.3 }}
            className="flex flex-col sm:flex-row gap-5 sm:gap-6 justify-center pt-4"
          >
            <CTAButton 
              primary
              className="group shadow-xl shadow-primary/20 hover:shadow-primary/40 border-primary backdrop-blur-md"
            >
              Get Started
              {/* Keep button hover effect for CTA */}
              <ArrowRight className="group-hover:translate-x-1.5 transition-transform duration-300" size={18} />
            </CTAButton>
            
            <CTAButton 
              primary={false}
              className="group backdrop-blur-md"
              onClick={() => {
                const section = document.getElementById('our-services-section');
                if (section) section.scrollIntoView({ behavior: 'smooth' });
              }}
            >
              Our Services
              <ArrowDown className="ml-1 group-hover:translate-x-1 transition-transform duration-300" size={18} />
            </CTAButton>
          </motion.div>
          
          {/* Improved stats with enhanced visuals */}
          <motion.div 
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6, delay: 0.4 }}
            className="flex flex-wrap gap-12 justify-center pt-6 mt-6 border-t border-secondary/10 py-5 px-8 backdrop-blur-sm bg-white/5 rounded-2xl"
          >
            {[
              { label: "Projects Delivered", value: "500+", icon: <Award className="w-5 h-5" /> },
              { label: "Client Satisfaction", value: "99%", icon: <BadgeCheck className="w-5 h-5" /> },
              { label: "Team Experts", value: "50+", icon: <Users className="w-5 h-5" /> }
            ].map((stat, i) => (
              <motion.div 
                key={i} 
                className="text-center"
                // Removed whileHover for stats
                transition={{ type: "spring", stiffness: 400, damping: 10 }}
              >
                <div className="flex items-center justify-center mb-2">
                  <div className="p-2 rounded-full bg-primary/10 text-primary mr-2">
                    {stat.icon}
                  </div>
                  <div className="text-3xl font-bold bg-gradient-to-r from-primary to-blue-500 bg-clip-text text-transparent">{stat.value}</div>
                </div>
                <div className="text-sm text-foreground/70 font-medium dark:text-foreground/80">{stat.label}</div>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </div>
    </section>
  );
};

/* PROJECTS SECTION OPTIMIZATION */
// Optimized Project Card Component
const ProjectCard = memo(({ project, isHovered, onHoverChange }) => {
  return (
    <div
      className="group relative overflow-hidden rounded-2xl border border-secondary/20 hover:border-primary/50 transition-all duration-300"
      style={{ height: '470px' }} // Unified height for all cards
      onMouseEnter={() => onHoverChange(project.title)}
      onMouseLeave={() => onHoverChange(null)}
    >
      <div className="relative w-full h-full overflow-hidden">
        {/* Background gradient overlay */}
        <div className="absolute inset-0 bg-gradient-to-t from-black/90 via-black/50 to-transparent z-10"></div>
        <div className="absolute inset-0 bg-gradient-to-r from-black/30 to-transparent z-10"></div>
        
        {/* Project image with CSS transforms instead of motion */}
        <div
          className="absolute inset-0 w-full h-full transition-transform"
          style={{ 
            transform: isHovered ? 'scale(1.05)' : 'scale(1)',
            transition: 'transform 0.8s cubic-bezier(0.33, 1, 0.68, 1)',
            willChange: 'transform'
          }}
        >
          <img 
            src={project.image}
            alt={project.title}
            className="w-full h-full object-cover"
            loading="lazy"
            width="600"
            height="400"
          />
        </div>
        
        {/* Content container - static positioning with CSS transitions */}
        <div className="absolute z-20 bottom-0 w-full p-6 transition-all duration-500">
          <div className="space-y-2 mb-4">
            <div className="flex flex-wrap gap-2 items-center justify-between">
              <span 
                className="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium text-white backdrop-blur-sm shadow-lg shadow-black/20"
                style={{ backgroundColor: `${project.color}70` }}
              >
                {project.category.replace(/\w\S*/g, (txt) => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase())}
              </span>
              
              {project.featured && (
                <span className="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-yellow-500/50 text-white backdrop-blur-sm shadow-lg">
                  <BadgeCheck className="w-3 h-3 mr-1" />
                  Featured
                </span>
              )}
            </div>
          </div>
          
          <div className="transform transition-all duration-500">
            <h3 className="text-2xl sm:text-3xl font-bold text-white mb-2 group-hover:text-primary/90 transition-colors">
              <span className="relative inline-block">
                {project.title.replace(/\w\S*/g, (txt) => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase())}
                <span 
                  className="absolute bottom-0 left-0 h-0.5 bg-primary transition-all duration-300"
                  style={{ width: isHovered ? '100%' : '0%' }}
                />
              </span>
            </h3>
            
            <p 
              className="text-white/80 mb-6 max-w-lg line-clamp-2 transition-all duration-300"
              style={{ 
                opacity: isHovered ? 1 : 0.8,
                transform: `translateY(${isHovered ? 0 : 5}px)`
              }}
            >
              {project.description}
            </p>
            
            <div className="flex flex-wrap gap-2 mb-6">
              {['React', 'TypeScript', 'Node.js', 'Tailwind', 'Next.js'].slice(0, 3 + Math.floor(Math.random() * 2)).map((tech, i) => (
                <span 
                  key={i} 
                  className="px-2 py-1 bg-white/10 backdrop-blur-sm border border-white/10 rounded-md text-xs text-white/90 transition-all duration-300"
                  style={{ 
                    opacity: isHovered ? 1 : 0.6,
                    transform: `translateY(${isHovered ? 0 : 5}px)`,
                    transitionDelay: `${0.1 + (i * 0.05)}s`
                  }}
                >
                  {tech}
                </span>
              ))}
            </div>
            
            <div 
              className="flex items-center justify-between transition-all duration-300"
              style={{ 
                opacity: isHovered ? 1 : 0.8,
                transform: `translateY(${isHovered ? 0 : 5}px)`
              }}
            >
              {project.stats && (
                <div className="flex items-center text-primary/90 text-sm bg-black/40 px-4 py-2 rounded-full backdrop-blur-sm border border-white/5">
                  <BarChart className="w-4 h-4 mr-2" />
                  {project.stats}
                </div>
              )}
              
              <button className="bg-primary hover:bg-primary/90 text-white px-5 py-2.5 rounded-full font-medium transition-all flex items-center group/btn">
                View Project
                <ArrowRight size={16} className="ml-2 group-hover/btn:translate-x-1 transition-transform" />
              </button>
            </div>
          </div>
        </div>
        
        <div 
          className="absolute top-0 right-0 w-32 h-32 opacity-60 rounded-bl-full z-10 transition-opacity duration-300 group-hover:opacity-80"
          style={{ background: `radial-gradient(circle at top right, ${project.color}, transparent 70%)` }}
        />
      </div>
    </div>
  );
});

const ProjectsSection = memo(() => {
  const [activeFilter, setActiveFilter] = useState('All');
  const [hoveredProject, setHoveredProject] = useState(null);
  
  // Memoize these values to prevent unnecessary rerenders
  const categories = useMemo(() => ['All', 'Web Development', 'Logo Design', 'Game Development', 'Video Editing', 'UI/UX Design'], []);
  
  // Use useMemo to optimize filtering
  const filteredProjects = useMemo(() => {
    if (activeFilter === 'All') {
      return PROJECTS;
    }
    return PROJECTS.filter(project => project.category === activeFilter);
  }, [activeFilter]);

  // Use useCallback for event handlers
  const handleHoverChange = useCallback((projectTitle) => {
    setHoveredProject(projectTitle);
  }, []);

  return (
    <Section id="projects">
      <SectionHeading 
        eyebrow="Our Portfolio" 
        title="Featured Projects" 
        description="Explore our award-winning work delivered for clients across industries"
        center={true} 
      />
      
      {/* Static filter tabs with CSS transitions */}
      <div className="relative mb-16">
        <div className="flex flex-wrap justify-center gap-2 mb-2">
          {categories.map((category, index) => {
            const isActive = activeFilter === category;
            return (
              <button
                key={index}
                onClick={() => setActiveFilter(category)}
                className={`relative px-5 py-2.5 rounded-full text-sm font-medium transition-all ${
                  isActive 
                    ? 'text-white bg-primary' 
                    : 'text-foreground/70 hover:text-foreground'
                }`}
              >
                <span className="relative z-10">{category}</span>
              </button>
            );
          })}
        </div>
        
        {/* Removed showing results text */}
        {/* <p className="text-center text-sm text-foreground/50 mt-2">
          Showing {filteredProjects.length} {filteredProjects.length === 1 ? 'project' : 'projects'}
          {activeFilter !== 'All' ? ` in ${activeFilter}` : ''}
        </p> */}
      </div>
      
      {/* Optimized grid without AnimatePresence */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8">
        {filteredProjects.map((project, index) => (
          <ProjectCard 
            key={project.title}
            project={project} 
            isHovered={hoveredProject === project.title}
            onHoverChange={handleHoverChange}
          />
        ))}
      </div>
      
      {/* Empty state without animations */}
      {filteredProjects.length === 0 && (
        <div className="bg-secondary/5 backdrop-blur-sm border border-secondary/20 rounded-2xl p-12 text-center my-8">
          <div className="w-20 h-20 mx-auto mb-6 rounded-full bg-primary/10 flex items-center justify-center">
            <LineChart className="w-10 h-10 text-primary/60" />
          </div>
          <p className="text-xl font-medium mb-4">No projects found</p>
          <p className="text-foreground/60 mb-8 max-w-md mx-auto">
            We couldn't find any projects in the {activeFilter} category. Try selecting a different category or check back later.
          </p>

        </div>
      )}

    </Section>
  );
});

/* DESIGNS SECTION */
const DesignsSection = memo(() => {
  const [activeTab, setActiveTab] = useState('ui-ux');
  const [selectedDesign, setSelectedDesign] = useState(null);
  
  // Design categories with consistent structure
  const designCategories = {
    'ui-ux': {
      title: 'UI/UX Design',
      description: 'Modern interfaces that enhance user experience and drive engagement',
      designs: [
        {
          id: 'ui-1',
          title: 'Banking Dashboard',
          preview: 'https://images.unsplash.com/photo-1551288049-bebda4e38f71?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
          color: THEME.accent.blue,
          tools: ['Figma', 'Adobe XD', 'Sketch'],
          description: 'Reimagined financial management interface with intuitive analytics and transaction tracking'
        },
        {
          id: 'ui-2',
          title: 'Health App',
          preview: 'https://images.unsplash.com/photo-1576091160550-2173dba999ef?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
          color: THEME.accent.green,
          tools: ['Figma', 'Protopie', 'Illustrator'],
          description: 'Wellness tracking application with personalized insights and progress visualization'
        },
        {
          id: 'ui-3',
          title: 'E-commerce Store',
          preview: 'https://images.unsplash.com/photo-1486312338219-ce68d2c6f44d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
          color: THEME.accent.orange,
          tools: ['Figma', 'Adobe XD', 'After Effects'],
          description: 'High-conversion shopping platform with seamless checkout and personalized recommendations'
        }
      ]
    },
    'brand': {
      title: 'Brand Identity',
      description: 'Cohesive visual systems that communicate brand values and resonate with audiences',
      designs: [
        {
          id: 'brand-1',
          title: 'Eco Wellness',
          preview: 'https://images.unsplash.com/photo-1542744094-24638eff58bb?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
          color: THEME.accent.cyan,
          tools: ['Illustrator', 'Photoshop', 'InDesign'],
          description: 'Complete visual identity for sustainable wellness brand including logo system and packaging'
        },
        {
          id: 'brand-2',
          title: 'Tech Startup',
          preview: 'https://images.unsplash.com/photo-1561070791-2526d30994b5?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
          color: THEME.primary.DEFAULT,
          tools: ['Illustrator', 'Figma', 'After Effects'],
          description: 'Dynamic brand system for AI technology company with adaptable visual elements'
        },
        {
          id: 'brand-3',
          title: 'Urban Cafe',
          preview: 'https://images.unsplash.com/photo-1620799140408-edc6dcb6d633?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
          color: THEME.accent.yellow,
          tools: ['Illustrator', 'Photoshop', 'Procreate'],
          description: 'Artisanal coffee shop branding with hand-drawn elements and signature typography'
        }
      ]
    },
    'print': {
      title: 'Print Design',
      description: 'Tangible brand experiences through thoughtfully crafted physical materials',
      designs: [
        {
          id: 'print-1',
          title: 'Annual Report',
          preview: 'https://images.unsplash.com/photo-1586281380349-632531db7ed4?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
          color: THEME.secondary.DEFAULT,
          tools: ['InDesign', 'Illustrator', 'Photoshop'],
          description: 'Award-winning financial report design with data visualization and editorial layout'
        },
        {
          id: 'print-2',
          title: 'Event Materials',
          preview: 'https://images.unsplash.com/photo-1607799279861-4dd421887fb3?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
          color: THEME.accent.blue,
          tools: ['InDesign', 'Illustrator', 'Photoshop'],
          description: 'Comprehensive conference collateral including invitations, programs, and signage'
        },
        {
          id: 'print-3',
          title: 'Packaging',
          preview: 'https://images.unsplash.com/photo-1636622433525-127afdf3662d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80',
          color: THEME.accent.green,
          tools: ['Illustrator', 'Photoshop', 'Dimension'],
          description: 'Sustainable product packaging with innovative structural design and eco-friendly materials'
        }
      ]
    }
  };

  // Get current designs based on active tab
  const currentDesigns = designCategories[activeTab]?.designs || [];
  
  // Design detail modal
  const DesignDetailModal = ({ design, onClose }) => {
    if (!design) return null;
    
    return (
      <motion.div 
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        exit={{ opacity: 0 }}
        className="fixed inset-0 bg-black/70 backdrop-blur-sm z-50 flex items-center justify-center p-4"
        onClick={onClose}
      >
        <motion.div 
          initial={{ scale: 0.9, y: 20 }}
          animate={{ scale: 1, y: 0 }}
          exit={{ scale: 0.9, y: 20 }}
          className="bg-background max-w-4xl w-full max-h-[90vh] overflow-y-auto rounded-2xl shadow-xl"
          onClick={(e) => e.stopPropagation()}
        >
          <div className="relative">
            <div className="h-[300px] md:h-[400px] w-full overflow-hidden">
              <img
                src={design.preview}
                alt={design.title}
                className="w-full h-full object-cover"
              />
            </div>
            
            <button 
              onClick={onClose}
              className="absolute top-4 right-4 bg-black/40 hover:bg-black/60 text-white p-2 rounded-full backdrop-blur-sm transition-colors"
              aria-label="Close modal"
            >
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                <line x1="18" y1="6" x2="6" y2="18"></line>
                <line x1="6" y1="6" x2="18" y2="18"></line>
              </svg>
            </button>
          </div>
          
          <div className="p-6 md:p-8">
            <div 
              className="inline-block px-3 py-1 rounded-full text-sm font-medium mb-4"
              style={{ backgroundColor: `${design.color}20`, color: design.color }}
            >
              {designCategories[activeTab].title}
            </div>
            
            <h3 className="text-2xl md:text-3xl font-bold mb-4">{design.title}</h3>
            <p className="text-foreground/70 mb-6 text-lg">{design.description}</p>
            
            <div className="mb-8">
              <h4 className="text-sm uppercase tracking-wider text-foreground/50 mb-3">Design Tools</h4>
              <div className="flex gap-2 flex-wrap">
                {design.tools.map((tool, idx) => (
                  <span key={idx} className="px-3 py-1 bg-primary/10 text-primary text-sm rounded-full">
                    {tool}
                  </span>
                ))}
              </div>
            </div>
            
            <div className="grid grid-cols-2 gap-6 mb-8">
              <div>
                <h4 className="text-sm uppercase tracking-wider text-foreground/50 mb-3">Project Scope</h4>
                <ul className="space-y-2">
                  {['Research', 'Wireframing', 'Visual Design', 'Prototyping'].map((item, idx) => (
                    <li key={idx} className="flex items-center text-foreground/80">
                      <CheckCircle className="w-4 h-4 text-primary mr-2" />
                      {item}
                    </li>
                  ))}
                </ul>
              </div>
              
              <div>
                <h4 className="text-sm uppercase tracking-wider text-foreground/50 mb-3">Deliverables</h4>
                <ul className="space-y-2">
                  {['Design System', 'Interactive Prototype', 'Source Files', 'Documentation'].map((item, idx) => (
                    <li key={idx} className="flex items-center text-foreground/80">
                      <CheckCircle className="w-4 h-4 text-primary mr-2" />
                      {item}
                    </li>
                  ))}
                </ul>
              </div>
            </div>
            
            <div className="flex justify-end">
              <Button variant="primary" size="lg">
                Request Similar Design
                <ArrowRight className="ml-1 w-4 h-4" />
              </Button>
            </div>
          </div>
        </motion.div>
      </motion.div>
    );
  };

  const DesignCard = ({ design }) => {
    return (
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        whileInView={{ opacity: 1, y: 0 }}
        viewport={{ once: true }}
        transition={{ duration: 0.5 }}
        className="group cursor-pointer"
        onClick={() => setSelectedDesign(design)}
      >
        <div className="relative overflow-hidden rounded-xl aspect-[4/3] mb-4">
          {/* Overlay with gradient */}
          <div className="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-end p-6">
            <div>
              <p className="text-white font-medium">{design.title}</p>
              <div className="flex mt-2 gap-2">
                {design.tools.slice(0, 2).map((tool, idx) => (
                  <span key={idx} className="text-xs bg-white/20 backdrop-blur-sm px-2 py-1 rounded-full text-white">
                    {tool}
                  </span>
                ))}
              </div>
            </div>
          </div>
          
          {/* Image */}
          <img 
            src={design.preview} 
            alt={design.title}
            className="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
            loading="lazy"
          />
          
          {/* Color accent */}
          <div 
            className="absolute top-0 right-0 w-24 h-24 opacity-60 rounded-bl-full"
            style={{ background: `radial-gradient(circle at top right, ${design.color}, transparent 70%)` }}
          />
        </div>
        
        <h3 className="font-medium text-lg group-hover:text-primary transition-colors">
          {design.title}
        </h3>
        <p className="text-sm text-foreground/60 line-clamp-1">{design.description}</p>
      </motion.div>
    );
  };

  return (
    <Section id="designs" pattern={true}>
      <SectionHeading
        eyebrow="Design Showcase" 
        title="Creative Design Solutions" 
        description="Explore our design work across various mediums and industries"
        center={true}
      />
      
      {/* Category tabs */}
      <div className="flex justify-center mb-12">
        <div className="inline-flex bg-secondary/10 p-1 rounded-xl">
          {Object.entries(designCategories).map(([key, category]) => (
            <button
              key={key}
              onClick={() => setActiveTab(key)}
              className={`px-5 py-2 rounded-lg text-sm font-medium transition-all ${
                activeTab === key
                  ? 'bg-primary text-white shadow-lg'
                  : 'text-foreground/70 hover:text-foreground hover:bg-secondary/5'
              }`}
            >
              {category.title}
            </button>
          ))}
        </div>
      </div>
      
      {/* Description of current category */}
      <div className="text-center mb-12">
        <p className="text-lg text-foreground/70 max-w-xl mx-auto">
          {designCategories[activeTab]?.description}
        </p>
      </div>
      
      {/* Design grid with exit animations */}
      <AnimatePresence mode="wait">
        <motion.div
          key={activeTab}
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          exit={{ opacity: 0 }}
          transition={{ duration: 0.3 }}
          className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"
        >
          {currentDesigns.map((design) => (
            <DesignCard key={design.id} design={design} />
          ))}
        </motion.div>
      </AnimatePresence>
      
      {/* Design detail modal */}
      <AnimatePresence>
        {selectedDesign && (
          <DesignDetailModal 
            design={selectedDesign} 
            onClose={() => setSelectedDesign(null)} 
          />
        )}
      </AnimatePresence>
      
      {/* Contact CTA */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        whileInView={{ opacity: 1, y: 0 }}
        viewport={{ once: true }}
        className="mt-16 text-center bg-gradient-to-r from-primary/5 to-secondary/5 p-8 rounded-2xl border border-primary/10"
      >
        <h3 className="text-2xl font-bold mb-4">Need custom design solutions?</h3>
        <p className="text-foreground/70 mb-6 max-w-lg mx-auto">
          Our design team is ready to help bring your vision to life with tailored creative solutions that align with your brand and business objectives.
        </p>
        <div className="flex flex-wrap gap-4 justify-center">
          <Button variant="primary" size="lg" href="/contact">
            Request a Design Consultation
            <ArrowRight className="ml-1 w-4 h-4 group-hover:translate-x-1 transition-transform" />
          </Button>
          <Button variant="secondary" size="lg" href="/portfolio">
            View Full Portfolio
          </Button>
        </div>
      </motion.div>
    </Section>
  );
});

/* 3D CARD SHOWCASE */
const ThreeDCardShowcase = memo(() => {
  const [activeCard, setActiveCard] = useState(0);
  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });
  
  const handleMouseMove = (e) => {
    const card = e.currentTarget.getBoundingClientRect();
    const x = (e.clientX - card.left) / card.width - 0.5;  // -0.5 to 0.5
    const y = (e.clientY - card.top) / card.height - 0.5;  // -0.5 to 0.5
    setMousePosition({ x, y });
  };
  
  const featuredWorks = [
    {
      title: "Immersive 3D Visualization",
      description: "Interactive product showcase with WebGL and Three.js for a premium automotive brand",
      image: "https://images.unsplash.com/photo-1543964198-d54e4f2a833d?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80",
      color: THEME.accent.blue,
      tags: ["Three.js", "WebGL", "Animation"]
    },
    {
      title: "AR Product Experience",
      description: "Augmented reality mobile application enabling virtual product trials before purchase",
      image: "https://images.unsplash.com/photo-1633356122544-f134324a6cee?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80",
      color: THEME.accent.green,
      tags: ["AR", "Mobile", "3D Modeling"]
    },
    {
      title: "Interactive Data Dashboard",
      description: "Real-time analytics platform with advanced filtering and customizable visualizations",
      image: "https://images.unsplash.com/photo-1551288049-bebda4e38f71?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80",
      color: THEME.accent.orange,
      tags: ["Data Viz", "Dashboard", "Real-time"]
    }
  ];
  
  return (
    <Section id="featured-work" className="py-24 overflow-hidden">
      <div className="max-w-7xl mx-auto">
        <SectionHeading 
          eyebrow="Featured Work" 
          title="Innovative Digital Experiences" 
          description="Pushing the boundaries of what's possible with emerging technologies and creative design"
          center={true}
        />
        
        <div className="mt-16 md:mt-24">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
            {/* Left side - 3D interactive card */}
            <div className="relative h-[500px] w-full">
              <AnimatePresence mode="wait">
                <motion.div
                  key={activeCard}
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  exit={{ opacity: 0 }}
                  transition={{ duration: 0.5 }}
                  className="absolute inset-0"
                  onMouseMove={handleMouseMove}
                  onMouseLeave={() => setMousePosition({ x: 0, y: 0 })}
                >
                  <div 
                    className="h-full w-full rounded-2xl overflow-hidden relative group shadow-2xl shadow-black/20"
                    style={{ 
                      perspective: '1500px',
                      transformStyle: 'preserve-3d',
                    }}
                  >
                    <motion.div
                      className="h-full w-full relative"
                      style={{ 
                        transformStyle: 'preserve-3d',
                        transform: `
                          rotateY(${mousePosition.x * 20}deg) 
                          rotateX(${-mousePosition.y * 20}deg)
                          scale(1.05)
                        `,
                        transition: 'transform 0.5s ease-out'
                      }}
                    >
                      {/* Main image */}
                      <div className="absolute inset-0 rounded-2xl overflow-hidden border border-white/10">
                        <div 
                          className="absolute inset-0 bg-gradient-to-br from-black/10 via-transparent to-primary/30 opacity-70 mix-blend-overlay z-10"
                        ></div>
                        <img 
                          src={featuredWorks[activeCard].image} 
                          alt={featuredWorks[activeCard].title} 
                          className="w-full h-full object-cover"
                        />
                      </div>
                      
                      {/* Glowing edges */}
                      <div 
                        className="absolute inset-0 rounded-2xl opacity-0 group-hover:opacity-100 transition-opacity"
                        style={{
                          background: `linear-gradient(45deg, ${featuredWorks[activeCard].color}00, ${featuredWorks[activeCard].color}40, ${featuredWorks[activeCard].color}00)`,
                          backgroundSize: '200% 200%',
                          animation: 'gradient-animation 3s ease infinite',
                          border: `1px solid ${featuredWorks[activeCard].color}60`,
                          boxShadow: `0 0 40px ${featuredWorks[activeCard].color}40`,
                          transform: 'translateZ(20px)'
                        }}
                      ></div>
                      
                      {/* Content overlay */}
                      <div 
                        className="absolute inset-x-0 bottom-0 p-8 text-white z-20"
                        style={{ transform: 'translateZ(50px)' }}
                      >
                        <div className="flex gap-2 mb-4">
                          {featuredWorks[activeCard].tags.map((tag, index) => (
                            <span 
                              key={index} 
                              className="px-3 py-1 rounded-full text-xs font-medium backdrop-blur-sm"
                              style={{ 
                                backgroundColor: `${featuredWorks[activeCard].color}40`,
                                border: `1px solid ${featuredWorks[activeCard].color}80`
                              }}
                            >
                              {tag}
                            </span>
                          ))}
                        </div>
                        
                        <h3 className="text-2xl md:text-3xl font-bold mb-2">{featuredWorks[activeCard].title}</h3>
                        <p className="text-white/80 max-w-md">{featuredWorks[activeCard].description}</p>
                        
                        <div className="mt-6">
                          <button 
                            className="px-5 py-2.5 rounded-full bg-white/10 hover:bg-white/20 backdrop-blur-md border border-white/20 text-white text-sm font-medium flex items-center gap-2 transition-all"
                          >
                            Explore Case Study
                            <ArrowRight size={16} />
                          </button>
                        </div>
                      </div>
                      
                      {/* Floating geometric elements */}
                      <div 
                        className="absolute top-8 left-8 w-20 h-20 border border-white/20 rounded-lg opacity-50"
                        style={{ 
                          transform: 'translateZ(30px) rotateZ(10deg)',
                          boxShadow: `0 0 20px ${featuredWorks[activeCard].color}30`
                        }}
                      ></div>
                      
                      <div 
                        className="absolute bottom-32 right-16 w-12 h-12 rounded-full opacity-60"
                        style={{ 
                          background: `linear-gradient(45deg, ${featuredWorks[activeCard].color}60, transparent)`,
                          transform: 'translateZ(40px)'
                        }}
                      ></div>
                    </motion.div>
                  </div>
                </motion.div>
              </AnimatePresence>
            </div>
            
            {/* Right side - Project details & navigation */}
            <div className="space-y-8">
              <div className="space-y-6">
                <span className="text-primary text-sm font-medium uppercase tracking-wider bg-primary/10 px-4 py-1 rounded-full inline-block">
                  Pushing Boundaries
                </span>
                
                <h3 className="text-3xl md:text-4xl font-bold">
                  Next-generation digital experiences
                </h3>
                
                <p className="text-foreground/70">
                  We combine cutting-edge technologies with innovative design approaches to create immersive, 
                  interactive experiences that captivate users and drive meaningful engagement.
                </p>
                
                <div className="flex flex-wrap gap-3 pt-2">
                  {["WebGL", "Three.js", "AR/VR", "React Three Fiber", "Motion Graphics"].map((tech, idx) => (
                    <span key={idx} className="px-3 py-1 bg-secondary/5 border border-secondary/10 rounded-md text-sm text-foreground/70">
                      {tech}
                    </span>
                  ))}
                </div>
              </div>
              
              <div className="space-y-4">
                <h4 className="text-lg font-medium">Featured Projects</h4>
                
                <div className="space-y-3">
                  {featuredWorks.map((work, index) => (
                    <div 
                      key={index}
                      className={`p-4 rounded-xl cursor-pointer transition-all duration-300 flex items-center gap-4 ${
                        activeCard === index 
                          ? 'bg-primary/10 border border-primary/30' 
                          : 'hover:bg-secondary/5'
                      }`}
                      onClick={() => setActiveCard(index)}
                    >
                      <div 
                        className="w-12 h-12 rounded-lg overflow-hidden shrink-0"
                        style={{ 
                          boxShadow: activeCard === index ? `0 0 0 2px ${work.color}` : 'none',
                          transition: 'box-shadow 0.3s ease'
                        }}
                      >
                        <img 
                          src={work.image} 
                          alt={work.title} 
                          className="w-full h-full object-cover"
                        />
                      </div>
                      
                      <div>
                        <h5 className={`font-medium transition-colors ${
                          activeCard === index ? 'text-primary' : 'text-foreground'
                        }`}>
                          {work.title}
                        </h5>
                        <p className="text-sm text-foreground/60 line-clamp-1">
                          {work.description}
                        </p>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
              
              <a 
                href="/case-studies" 
                className="inline-flex items-center text-primary hover:text-primary/80 font-medium transition-colors"
              >
                View all case studies
                <ArrowRight size={16} className="ml-2" />
              </a>
            </div>
          </div>
        </div>
      </div>
      
      <style jsx global>{`
        @keyframes gradient-animation {
          0% { background-position: 0% 50%; }
          50% { background-position: 100% 50%; }
          100% { background-position: 0% 50%; }
        }
      `}</style>
    </Section>
  );
});

/* INTERACTIVE PROCESS TIMELINE */
const ProcessTimeline = memo(() => {
  const [activeStep, setActiveStep] = useState(1);
  const [isScrolling, setIsScrolling] = useState(false);
  const timelineRef = useRef(null);
  
  const processSteps = [
    {
      step: 1,
      title: "Discovery & Research",
      description: "We dive deep into your business needs, market landscape, and user expectations to establish clear project goals.",
      icon: <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><circle cx="12" cy="12" r="10"/><path d="m15 9-6 6"/><path d="m9 9 6 6"/></svg>,
      color: THEME.accent.blue,
      benefits: [
        "Comprehensive market analysis",
        "User research & persona development",
        "Competitive landscape assessment"
      ]
    },
    {
      step: 2,
      title: "Strategic Planning",
      description: "We develop a tailored roadmap that aligns with your business objectives and addresses user needs.",
      icon: <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><path d="M2 17 12 22l10-5"/><path d="m2 12 10 5 10-5"/><path d="M12 2 2 7l10 5 10-5-10-5Z"/></svg>,
      color: THEME.accent.green,
      benefits: [
        "Technology stack recommendations",
        "Feature prioritization framework",
        "Implementation timeline & milestones"
      ]
    },
    {
      step: 3,
      title: "Design & Prototype",
      description: "We create intuitive, engaging designs and interactive prototypes that bring your vision to life.",
      icon: <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><path d="M12 20a8 8 0 1 0 0-16 8 8 0 0 0 0 16Z"/><path d="M12 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z"/><path d="M12 2v2"/><path d="M12 22v-2"/><path d="m17 20.66-1-1.73"/><path d="M11 10.27 7 3.34"/><path d="m20.66 17-1.73-1"/><path d="m3.34 7 1.73 1"/><path d="M14 12h8"/><path d="M2 12h2"/><path d="m20.66 7-1.73 1"/><path d="m3.34 17 1.73-1"/><path d="m17 3.34-1 1.73"/><path d="m11 13.73-4 6.93"/></svg>,
      color: THEME.accent.cyan,
      benefits: [
        "User-centered design approach",
        "Interactive wireframes & mockups",
        "Usability testing & refinement"
      ]
    },
    {
      step: 4,
      title: "Development & Testing",
      description: "Our engineering team builds your solution using modern technologies and best practices.",
      icon: <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><path d="m8 3 4 8 5-5 5 15H2L8 3z"/></svg>,
      color: THEME.accent.orange,
      benefits: [
        "Agile development methodology",
        "Comprehensive quality assurance",
        "Regular progress demonstrations"
      ]
    },
    {
      step: 5,
      title: "Deployment & Support",
      description: "We ensure a smooth launch and provide ongoing support to keep your solution performing optimally.",
      icon: <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><rect width="20" height="14" x="2" y="3" rx="2"/><line x1="8" x2="16" y1="21" y2="21"/><line x1="12" x2="12" y1="17" y2="21"/></svg>,
      color: THEME.accent.yellow,
      benefits: [
        "Seamless deployment process",
        "Performance monitoring & optimization",
        "Ongoing maintenance & updates"
      ]
    }
  ];
  
  // Handle scroll-based timeline navigation
  useEffect(() => {
    const handleScroll = () => {
      if (!timelineRef.current || isScrolling) return;
      
      const timelineRect = timelineRef.current.getBoundingClientRect();
      const viewportCenter = window.innerHeight / 2;
      const timelineCenter = timelineRect.top + timelineRect.height / 2;
      
      // Calculate which step should be active based on scroll position
      const scrollPercentage = (viewportCenter - timelineRect.top) / timelineRect.height;
      const clampedPercentage = Math.max(0, Math.min(1, scrollPercentage));
      const stepIndex = Math.round(clampedPercentage * (processSteps.length - 1)) + 1;
      
      if (stepIndex !== activeStep && stepIndex >= 1 && stepIndex <= processSteps.length) {
        setActiveStep(stepIndex);
      }
    };
    
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, [activeStep, isScrolling, processSteps.length]);
  
  const handleStepClick = (step) => {
    setIsScrolling(true);
    setActiveStep(step);
    
    // Reset isScrolling after animation completes
    setTimeout(() => {
      setIsScrolling(false);
    }, 1000);
  };
  
  return (
    <Section id="our-process" pattern={true} className="py-24">
      <SectionHeading 
        eyebrow="Our Process" 
        title="How We Deliver Excellence" 
        description="A systematic approach that ensures consistent results and exceptional quality across all projects"
        center={true}
      />
      
      <div className="mt-20 relative max-w-6xl mx-auto" ref={timelineRef}>
        {/* Timeline line */}
        <div className="absolute top-0 bottom-0 left-1/2 w-0.5 bg-secondary/20 transform -translate-x-1/2"></div>
        
        {/* Progress line animating based on active step */}
        <div 
          className="absolute top-0 left-1/2 w-0.5 bg-primary transform -translate-x-1/2 transition-all duration-1000 ease-out"
          style={{ 
            height: `${(activeStep / processSteps.length) * 100}%`,
            maxHeight: '100%'
          }}
        ></div>
        
        {/* Timeline steps */}
        {processSteps.map((process, index) => {
          const isActive = activeStep >= process.step;
          const isPast = activeStep > process.step;
          const isExactlyActive = activeStep === process.step;
          
          return (
            <div key={index} className="relative mb-24 last:mb-0">
              {/* Timeline marker */}
              <div className="absolute left-1/2 transform -translate-x-1/2 flex items-center justify-center">
                <div 
                  className={`
                    h-14 w-14 rounded-full flex items-center justify-center z-10 
                    ${isActive 
                      ? 'bg-primary text-white border-4 border-white shadow-lg shadow-primary/30' 
                      : 'bg-white border-4 border-secondary/20 text-secondary/40'
                    }
                    transition-all duration-500
                  `}
                  style={{
                    transform: isExactlyActive ? 'scale(1.2)' : 'scale(1)'
                  }}
                >
                  <span className="text-lg font-bold">{process.step}</span>
                </div>
                
                {/* Pulsing effect for active step */}
                {isExactlyActive && (
                  <div className="absolute inset-0 -z-10">
                    <div className="absolute inset-0 rounded-full bg-primary/20 animate-ping opacity-75"></div>
                    <div className="absolute inset-[-8px] rounded-full border-2 border-primary/30"></div>
                  </div>
                )}
              </div>
              
              {/* Content card with alternating layout */}
              <div className={`relative max-w-lg mx-auto md:mx-0 ${
                index % 2 === 0 
                  ? 'md:ml-auto md:mr-[calc(50%+2rem)]' 
                  : 'md:mr-auto md:ml-[calc(50%+2rem)]'
              }`}>
                <motion.div 
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true, margin: "-100px" }}
                  transition={{ duration: 0.5 }}
                  className={`
                    rounded-xl p-6 border shadow-lg transform transition-all duration-500 cursor-pointer
                    ${isActive 
                      ? 'bg-white border-primary/20 shadow-primary/5' 
                      : 'bg-secondary/5 border-secondary/20'
                    }
                    hover:shadow-xl
                  `}
                  onClick={() => handleStepClick(process.step)}
                >
                  <div className="flex items-start gap-4">
                    <div 
                      className={`p-3 rounded-lg ${
                        isActive 
                          ? 'text-white' 
                          : 'text-secondary/60 bg-secondary/10'
                      } transition-colors duration-500`}
                      style={{ 
                        backgroundColor: isActive ? process.color : undefined 
                      }}
                    >
                      {process.icon}
                    </div>
                    
                    <div>
                      <h3 className={`text-xl font-bold mb-2 transition-colors duration-500 ${
                        isActive ? 'text-foreground' : 'text-foreground/60'
                      }`}>
                        {process.title}
                      </h3>
                      <p className="text-foreground/70 mb-4">{process.description}</p>
                      
                      {/* Benefits list with reveal animation */}
                      <AnimatePresence>
                        {isExactlyActive && (
                          <motion.div
                            initial={{ opacity: 0, height: 0 }}
                            animate={{ opacity: 1, height: 'auto' }}
                            exit={{ opacity: 0, height: 0 }}
                            transition={{ duration: 0.3 }}
                            className="mt-4 pt-4 border-t border-secondary/10"
                          >
                            <h4 className="font-medium mb-2 text-sm uppercase tracking-wider text-foreground/60">Key Benefits</h4>
                            <ul className="space-y-2">
                              {process.benefits.map((benefit, idx) => (
                                <motion.li 
                                  key={idx}
                                  initial={{ opacity: 0, x: -10 }}
                                  animate={{ opacity: 1, x: 0 }}
                                  transition={{ delay: idx * 0.1 }}
                                  className="flex items-center gap-2"
                                >
                                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="text-primary">
                                    <polyline points="20 6 9 17 4 12"></polyline>
                                  </svg>
                                  <span>{benefit}</span>
                                </motion.li>
                              ))}
                            </ul>
                          </motion.div>
                        )}
                      </AnimatePresence>
                    </div>
                  </div>
                  
                  {/* Progress indicator for current step */}
                  {isExactlyActive && (
                    <div className="mt-4 pt-4 border-t border-secondary/10">
                      <div className="flex items-center justify-between text-xs text-foreground/60">
                        <span>Progress</span>
                        <span>{Math.round((process.step / processSteps.length) * 100)}%</span>
                      </div>
                      <div className="mt-1 bg-secondary/10 rounded-full h-1.5 overflow-hidden">
                        <div
                          className="h-full bg-primary transition-all duration-1000 ease-out"
                          style={{ width: `${(process.step / processSteps.length) * 100}%` }}
                        ></div>
                      </div>
                    </div>
                  )}
                </motion.div>
              </div>
            </div>
          );
        })}
      </div>
      
      {/* Bottom CTA section */}
      <motion.div
        initial={{ opacity: 0, y: 30 }}
        whileInView={{ opacity: 1, y: 0 }}
        viewport={{ once: true }}
        transition={{ duration: 0.5 }}
        className="mt-20 text-center"
      >
        <div className="bg-white rounded-2xl border border-primary/20 shadow-xl shadow-primary/5 p-8 max-w-3xl mx-auto">
          <h3 className="text-2xl font-bold mb-3">Ready to start your project?</h3>
          <p className="text-foreground/70 mb-6 max-w-lg mx-auto">
            Our proven process ensures your project will be delivered on-time, on-budget, and exceed expectations.
          </p>
          <div className="flex flex-wrap justify-center gap-4">
            <Button variant="primary" size="lg" href="/contact">
              Schedule a Consultation
              <ArrowRight className="w-4 h-4 ml-2" />
            </Button>
            <Button variant="secondary" size="lg" href="/case-studies">
              View Case Studies
            </Button>
          </div>
        </div>
      </motion.div>
    </Section>
  );
});

/* MAIN COMPONENT */
function Home() {
  return (
    <PageTransition>
      <div className="min-h-screen">
        <div className="relative bg-gradient-to-b from-background to-background/95">
          <div className="absolute inset-0 w-full h-full">
          </div>
          
          <AuroraBackground className="absolute inset-0" showRadialGradient={true} />

          <HeroSection />

          {/* PARTNERSHIPS SECTION */}
          <section className="relative py-12 px-4">
            <div className="relative z-10 max-w-7xl mx-auto">
              <motion.div 
                initial={{ opacity: 0 }}
                whileInView={{ opacity: 1 }}
                viewport={{ once: true }}
                className="text-center mb-8"
              >
                <h2 id="partnerships-heading" className="text-primary/80 text-sm font-medium uppercase tracking-wider bg-primary/10 px-4 py-1 rounded-full inline-block">
                  TRUSTED BY INDUSTRY LEADERS
                </h2>
              </motion.div>
              
              <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-8 items-center">
                {COMPANY_LOGOS.map((logo, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, y: 20 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    viewport={{ once: true }}
                    transition={{ delay: index * 0.1, duration: 0.4 }}
                    className="flex items-center justify-center"
                  >
                    <div className="p-4 w-full flex justify-center">
                      <img 
                        src={logo} 
                        alt={`Partner company ${index + 1}`} 
                        className="h-12 opacity-80" 
                      />
                    </div>
                  </motion.div>
                ))}
              </div>
            </div>
          </section>
        </div>

        {/* SERVICES SECTION */}
        <ServicesSection />


       

        {/* PROJECTS SECTION */}
        <ProjectsSection />

        {/* WHY CHOOSE US SECTION - REDESIGNED */}
        <Section className="py-16 md:py-24">
          <div className="grid grid-cols-1 lg:grid-cols-12 gap-8 md:gap-16 items-center">
            {/* Left content */}
            <motion.div
              initial={{ opacity: 0, x: -20 }}
              whileInView={{ opacity: 1, x: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.6 }}
              className="lg:col-span-5 order-2 lg:order-1"
            >
              <div className="relative">
                {/* Background elements */}
                <div className="absolute -left-6 -top-6 w-24 h-24 bg-primary/10 rounded-full blur-xl"></div>
                <div className="absolute -right-10 -bottom-10 w-32 h-32 bg-secondary/10 rounded-full blur-xl"></div>
                
                {/* Main image with floating elements */}
                <div className="relative z-10 rounded-2xl overflow-hidden shadow-2xl border border-primary/20">
                  <img 
                    src="https://images.unsplash.com/photo-1522071820081-009f0129c71c?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80" 
                    alt="Team collaboration" 
                    className="w-full h-auto rounded-2xl"
                    loading="lazy"
                  />
                </div>
                
                {/* Floating stats cards */}
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ delay: 0.3 }}
                  className="absolute -right-5 -top-10 bg-white shadow-xl rounded-lg p-3 border border-primary/10 z-20"
                >
                  <div className="flex items-center gap-3">
                    <div className="w-10 h-10 bg-primary/10 rounded-full flex items-center justify-center">
                      <Users className="w-5 h-5 text-primary" />
                    </div>
                    <div>
                      <p className="text-xs text-foreground/60">Team Size</p>
                      <p className="text-lg font-bold text-primary">50+ Experts</p>
                    </div>
                  </div>
                </motion.div>
                
                <motion.div
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  viewport={{ once: true }}
                  transition={{ delay: 0.4 }}
                  className="absolute -left-5 -bottom-8 bg-white shadow-xl rounded-lg p-3 border border-primary/10 z-20"
                >
                  <div className="flex items-center gap-3">
                    <div className="w-10 h-10 bg-primary/10 rounded-full flex items-center justify-center">
                      <Award className="w-5 h-5 text-primary" />
                    </div>
                    <div>
                      <p className="text-xs text-foreground/60">Experience</p>
                      <p className="text-lg font-bold text-primary">12+ Years</p>
                    </div>
                  </div>
                </motion.div>
              </div>
            </motion.div>
            
            {/* Right content */}
            <motion.div
              initial={{ opacity: 0, x: 20 }}
              whileInView={{ opacity: 1, x: 0 }}
              viewport={{ once: true }}
              transition={{ duration: 0.6 }}
              className="lg:col-span-7 order-1 lg:order-2"
            >
              <motion.span
                initial={{ opacity: 0 }}
                whileInView={{ opacity: 1 }}
                viewport={{ once: true }}
                className="text-primary text-sm font-medium uppercase tracking-wider bg-primary/10 px-4 py-1 rounded-full inline-block"
              >
                Why Choose Us
              </motion.span>
              
              <motion.h2
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: 0.1 }}
                className="text-3xl md:text-4xl font-bold mt-4 mb-6"
              >
                <span className="bg-clip-text text-transparent bg-gradient-to-r from-primary to-secondary">Technology expertise</span> that drives business growth
              </motion.h2>
              
              <motion.p
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: 0.2 }}
                className="text-foreground/70 mb-10 text-base md:text-lg"
              >
                At Jason Tech Solutions, we combine technical excellence with strategic thinking to deliver solutions 
                that not only solve today's challenges but position your business for future success.
              </motion.p>
              
              <div className="space-y-8">
                {WHY_CHOOSE_US.map((item, index) => (
                  <motion.div 
                    key={index}
                    initial={{ opacity: 0, y: 20 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    viewport={{ once: true }}
                    transition={{ duration: 0.5, delay: 0.2 + index * 0.1 }}
                    whileHover={{ x: 5 }}
                    className="flex gap-5 group"
                  >
                    <div className="mt-1 bg-gradient-to-br from-primary/20 to-secondary/20 h-14 w-14 rounded-2xl flex items-center justify-center shrink-0 shadow-md group-hover:shadow-lg group-hover:shadow-primary/10 transition-all" aria-hidden="true">
                      {item.icon}
                    </div>
                    <div>
                      <h3 className="text-xl font-semibold mb-2 group-hover:text-primary transition-colors">{item.title}</h3>
                      <p className="text-foreground/70">{item.description}</p>
                    </div>
                  </motion.div>
                ))}
              </div>

            </motion.div>
          </div>
        </Section>

        {/* TESTIMONIALS SECTION */}
        <Section>
          <SectionHeading 
            eyebrow="Testimonials" 
            title="What Our Clients Say" 
            description="Don't just take our word for it. Here's what our clients have to say about their experience working with us."
            center={true} 
          />
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {TESTIMONIALS.map((testimonial, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ duration: 0.5, delay: testimonial.delay * 0.5 }}
                className="p-8 rounded-2xl bg-background/50 backdrop-blur border border-secondary/20 relative group hover:border-primary/30 transition-all hover:shadow-lg hover:shadow-primary/10"
              >
                <div className="absolute -top-5 left-8 text-5xl text-primary/20" aria-hidden="true">"</div>
                <p className="text-foreground/80 mb-6 relative z-10">{testimonial.quote}</p>
                <div className="flex items-center">
                  <div className="w-12 h-12 rounded-full overflow-hidden mr-4">
                    <img 
                      src={testimonial.image} 
                      alt={testimonial.author}
                      className="w-full h-full object-cover"
                    />
                  </div>
                  <div>
                    <h4 className="font-semibold">{testimonial.author}</h4>
                    <p className="text-sm text-foreground/60">{testimonial.position}</p>
                  </div>
                </div>
              </motion.div>
            ))}
          </div>
          
          <motion.div 
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.5, delay: 0.3 }}
            className="mt-8 text-center"
          >
            <a href="#" className="inline-flex items-center text-primary font-medium hover:underline">
              Read more testimonials
              <ArrowRight size={16} className="ml-2 group-hover:translate-x-1 transition-transform" />
            </a>
          </motion.div>
        </Section>

        {/* DESIGNS SECTION */}
        <DesignsSection />

        {/* 3D CARD SHOWCASE SECTION */}
        <ThreeDCardShowcase />

        {/* INTERACTIVE PROCESS TIMELINE */}
        <ProcessTimeline />
      </div>
    </PageTransition>
  );
}

export default Home;
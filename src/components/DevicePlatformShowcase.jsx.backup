import { useState, useEffect } from "react";
import { motion, AnimatePresence } from "framer-motion";
import Iphone15Pro from "@/components/magicui/iphone-15-pro";
import Android from "@/components/magicui/android";
import { 
  Phone, 
  Smartphone, 
  ArrowRight, 
  Zap, 
  Star, 
  Users, 
  Shield, 
  Layers, 
  Moon, 
  Sun, 
  CheckCircle2,
  ArrowUpRight,
  Code,
  Settings,
  AppWindowIcon,
  CodeIcon
} from "lucide-react";

import {
  Tabs,
  TabsContent,
  TabsList,
  TabsTrigger,
} from "@/components/ui/tabs";

import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";

const DevicePlatformShowcase = ({ theme, toggleTheme }) => {
  const [activeTab, setActiveTab] = useState("iphone");
  const [activePlatformFeature, setActivePlatformFeature] = useState("overview");
  // Elegant Floating Orb Component
  const FloatingOrb = () => {
    return (
      <motion.div 
        key={`orb-${activeTab}`}
        initial={{ opacity: 0, scale: 0.8 }}
        animate={{ 
          opacity: 1, 
          scale: 1,
        }}
        exit={{ opacity: 0, scale: 0.8 }}
        transition={{ 
          type: "spring", 
          stiffness: 80, 
          damping: 25,
          duration: 0.6 
        }}
        className="absolute top-1/4 -right-16 w-32 h-32 rounded-full blur-2xl hidden lg:block"
        style={{
          background: `radial-gradient(circle at center, ${platforms[activeTab]?.color}30, ${platforms[activeTab]?.secondaryColor}20, transparent 70%)`,
        }}
      >
        <motion.div
          animate={{ 
            y: [0, -8, 0],
            opacity: [0.6, 0.8, 0.6]
          }}
          transition={{ 
            duration: 4,
            repeat: Infinity,
            ease: "easeInOut"
          }}
          className="w-full h-full rounded-full"
          style={{
            background: `linear-gradient(45deg, ${platforms[activeTab]?.color}20, ${platforms[activeTab]?.secondaryColor}15)`,
          }}
        />
      </motion.div>
    );
  };
    // Apply device-platform-specific theme class to document
  useEffect(() => {
    if (theme === 'dark') {
      document.documentElement.classList.add('device-platform-dark');
      document.documentElement.classList.remove('device-platform-light');
    } else {
      document.documentElement.classList.add('device-platform-light');
      document.documentElement.classList.remove('device-platform-dark');
    }
    
    // Add theme transition class
    document.documentElement.classList.add('theme-transition');
    
    // Remove transition class after transitions complete
    const timeoutId = setTimeout(() => {
      document.documentElement.classList.remove('theme-transition');
    }, 500);
    
    return () => clearTimeout(timeoutId);
  }, [theme]);    // Add theme transition styles
  useEffect(() => {
    // Create style element
    const style = document.createElement('style');
    style.id = 'theme-transition-styles';
    style.textContent = `
      .theme-transition,
      .theme-transition *,
      .theme-transition *:before,
      .theme-transition *:after {
        transition: all 0.5s ease !important;
        transition-delay: 0s !important;
      }
    `;
    document.head.appendChild(style);
    
    return () => {
      // Clean up
      const styleEl = document.getElementById('theme-transition-styles');
      if (styleEl) {
        document.head.removeChild(styleEl);
      }
    };
  }, []);
  
  // Define platform-specific content and styling
  const platforms = {
    iphone: {
      name: "iOS",
      color: "#007AFF",
      secondaryColor: "#34AADC",
      icon: <Phone className="w-5 h-5" />,
      borderRadius: "70px",
      features: [
        { id: "overview", name: "Overview", 
          content: "Deliver exceptional iOS experiences with Swift and SwiftUI. Our iOS development leverages Apple's Human Interface Guidelines to create beautiful, intuitive applications that feel right at home on iPhone.",
          icon: <Layers className="w-5 h-5" /> },
        { id: "design", name: "Beautiful UI", 
          content: "Create stunning interfaces with Apple's design system. Modern controls, fluid animations, and rich haptics provide a truly native experience that users expect from premium iOS apps.",
          icon: <Star className="w-5 h-5" /> },
        { id: "ecosystem", name: "Apple Ecosystem", 
          content: "Leverage the comprehensive Apple ecosystem with integrations for iCloud, Apple Pay, HealthKit, ARKit, and more. Deliver seamless experiences across iPhone, iPad, Apple Watch, and Mac.",
          icon: <Users className="w-5 h-5" /> },
        { id: "security", name: "Privacy & Security", 
          content: "Build with Apple's industry-leading security and privacy features. Integrate Face ID, Touch ID, App Tracking Transparency, and secure enclaves to protect user data and build trust.",
          icon: <Shield className="w-5 h-5" /> }
      ],
      stats: [
        { label: "iOS Users", value: "1B+" },
        { label: "App Store Revenue", value: "$72B" },
        { label: "Average Rating", value: "4.8" }
      ],
      services: [
        "Swift & SwiftUI Development",
        "Human Interface Guidelines",
        "App Store Submission",
        "TestFlight Beta Testing"
      ]
    },
    android: {
      name: "Android",
      color: "#3DDC84",
      secondaryColor: "#32DE84",
      icon: <Smartphone className="w-5 h-5" />,
      borderRadius: "40px",
      features: [
        { id: "overview", name: "Overview",
          content: "Build powerful Android applications with Kotlin and Jetpack Compose. Our Android development focuses on material design, performance optimization, and support for the diverse Android device ecosystem.",
          icon: <Layers className="w-5 h-5" /> },
        { id: "material", name: "Material Design",
          content: "Create beautiful interfaces with Google's Material Design system. Consistent UI patterns, responsive layouts, and adaptive components ensure your app looks great on any Android device.",
          icon: <Star className="w-5 h-5" /> },
        { id: "ecosystem", name: "Google Services",
          content: "Integrate seamlessly with Google's extensive ecosystem including Firebase, Maps, ML Kit, and Play Services. Leverage Google's cloud infrastructure for powerful backend services and analytics.",
          icon: <Users className="w-5 h-5" /> },
        { id: "fragmentation", name: "Device Support",
          content: "Navigate Android's device diversity with confidence. Our development practices ensure your app works flawlessly across different screen sizes, resolutions, hardware specifications, and Android versions.",
          icon: <Shield className="w-5 h-5" /> }
      ],
      stats: [
        { label: "Android Users", value: "2.5B+" },
        { label: "Market Share", value: "71%" },
        { label: "Device Types", value: "24K+" }
      ],
      services: [
        "Kotlin & Jetpack Compose",
        "Material Design Implementation",
        "Google Play Store Distribution",
        "Firebase Integration"
      ]
    }
  };
  const currentPlatform = platforms[activeTab];  return (
    <section className={`relative w-full py-20 px-6 sm:px-8 lg:px-12 transition-colors duration-300 overflow-hidden ${
      theme === 'dark' 
        ? 'bg-gradient-to-b from-background to-background/95 text-white' 
        : 'bg-gradient-to-br from-background via-white to-background/95 text-foreground'
    }`}>{/* Background elements with subtle platform-aware gradients */}
      <div className="absolute inset-0 bg-grid-pattern opacity-5 -z-10"></div>
      <motion.div 
        key={`bg-primary-${activeTab}`}
        initial={{ opacity: 0 }}
        animate={{ opacity: 0.7 }}
        transition={{ duration: 1 }}
        className="absolute top-0 right-0 w-[45vw] h-[45vw] max-w-[800px] max-h-[800px] rounded-full filter blur-[120px] -z-10"
        style={{
          background: `radial-gradient(circle at center, ${platforms[activeTab]?.color}20, transparent 70%)`
        }}
      />
      <motion.div 
        key={`bg-secondary-${activeTab}`}
        initial={{ opacity: 0 }}
        animate={{ opacity: 0.6 }}
        transition={{ duration: 1.2, delay: 0.2 }}
        className="absolute bottom-10 left-10 w-[30vw] h-[30vw] max-w-[600px] max-h-[600px] rounded-full filter blur-[100px] -z-10"
        style={{
          background: `radial-gradient(circle at center, ${platforms[activeTab]?.secondaryColor}20, transparent 70%)`
        }}
      />      <div className="max-w-7xl mx-auto relative z-10">
        {/* Main Content Grid */}
        <div className="grid grid-cols-1 lg:grid-cols-12 gap-8 lg:gap-16 relative">
          {/* Floating Orb - positioned relative to the grid */}
          <FloatingOrb />
          {/* Left Column - Device Display (5 cols) - KEPT INTACT */}
          <div className="lg:col-span-5 flex justify-center items-center px-4 lg:px-0">
            <AnimatePresence mode="wait">
              <motion.div
                key={activeTab}
                initial={{ opacity: 0, scale: 0.9, y: 20 }}
                animate={{ opacity: 1, scale: 1, y: 0 }}
                exit={{ opacity: 0, scale: 0.9, y: -20 }}
                transition={{ type: "spring", duration: 0.5 }}
                className="relative"
              >
                {/* Enhanced Futuristic Background Glow */}
                <div 
                  className="absolute -inset-8 rounded-full blur-3xl"
                  style={{ 
                    background: `radial-gradient(circle at center, ${currentPlatform.color}60, ${currentPlatform.secondaryColor}30, transparent 70%)`,
                    animation: "pulse 6s infinite alternate",
                    opacity: 0.6
                  }}
                ></div>
                
                {/* Futuristic particle effect rings */}
                <motion.div 
                  className="absolute -inset-10 rounded-full border-[1px] opacity-20"
                  style={{ borderColor: currentPlatform.color }}
                  animate={{ scale: [0.8, 1], opacity: [0.1, 0.3, 0.1] }}
                  transition={{ duration: 8, repeat: Infinity, ease: "easeInOut" }}
                ></motion.div>
                
                <motion.div 
                  className="absolute -inset-16 rounded-full border-[1px] opacity-10"
                  style={{ borderColor: currentPlatform.secondaryColor }}
                  animate={{ scale: [1, 1.2], opacity: [0.05, 0.2, 0.05] }}
                  transition={{ duration: 10, repeat: Infinity, ease: "easeInOut", delay: 1 }}
                ></motion.div>
                  {/* Device Container */}                <div className={`relative overflow-hidden transition-all duration-500 group ${
                    theme === 'dark' ? 'border-zinc-800/20' : 'border-slate-200/70'
                  }`}
                  style={{ 
                    borderRadius: currentPlatform.borderRadius,
                    boxShadow: `0 25px 60px -12px ${currentPlatform.color}${theme === 'dark' ? '60' : '40'}`,
                    border: theme === 'dark' ? '3px solid rgba(0, 0, 0, 0.8)' : '3px solid rgba(0, 0, 0, 0.8)'
                  }}
                >
                  {/* Enhanced background effect */}
                  <div className="absolute -inset-1 bg-gradient-to-r from-primary/20 via-blue-500/10 to-purple-500/20 rounded-full blur-2xl opacity-70 animate-pulse"></div>
                  {/* Futuristic device glow */}
                  <div 
                    className={`absolute inset-0 bg-gradient-to-tr from-[${currentPlatform.color}20] to-transparent z-10 backdrop-blur-sm`} 
                    style={{ borderRadius: currentPlatform.borderRadius }}
                  ></div>
                  
                  {/* Holographic effect */}                  <motion.div
                    animate={{ 
                      opacity: [0, 0.07, 0],
                      x: ["-100%", "100%"]
                    }}
                    transition={{ 
                      duration: 3,
                      repeat: Infinity,
                      repeatType: "loop",
                      ease: "easeInOut",
                      delay: 1
                    }}
                    className="absolute inset-0 z-20 bg-gradient-to-r from-transparent via-white/10 to-transparent skew-x-12"
                    style={{ borderRadius: currentPlatform.borderRadius }}
                  />
                  
                  {/* Futuristic scanline effect */}
                  <motion.div
                    animate={{ 
                      y: ["-100%", "100%"]
                    }}
                    transition={{ 
                      duration: 8,
                      repeat: Infinity,
                      repeatType: "loop",
                      ease: "linear"
                    }}
                    className="absolute inset-x-0 h-[2px] z-20 bg-[#ffffff30]"
                  />

                  {/* Device Component with Online Platform-specific Screenshots */}                  {activeTab === "iphone" ? (
                    <Iphone15Pro
                      scale={0.7}
                      className="w-[280px] h-[560px] drop-shadow-[0_15px_25px_rgba(0,0,0,0.6)] group-hover:scale-[1.01] transition-transform duration-500"
                      alt="iPhone App Development Preview"
                    >
                      <div className="w-full h-full overflow-hidden">
                        {activePlatformFeature === "overview" && (
                          <img 
                            src="https://images.unsplash.com/photo-1621946911155-919eecd0f8d5?q=80&w=1536&auto=format&fit=crop"
                            alt="iOS Interface" 
                            className="w-full h-full object-cover"
                          />
                        )}
                        {activePlatformFeature === "design" && (
                          <img 
                            src="https://images.unsplash.com/photo-1636622433525-127afdf3662d?q=80&w=1540&auto=format&fit=crop"
                            alt="iOS Design" 
                            className="w-full h-full object-cover"
                          />
                        )}
                        {activePlatformFeature === "ecosystem" && (
                          <img 
                            src="https://images.unsplash.com/photo-1619508698656-156c1d7e66df?q=80&w=1471&auto=format&fit=crop"
                            alt="Apple Ecosystem" 
                            className="w-full h-full object-cover"
                          />
                        )}
                        {activePlatformFeature === "security" && (
                          <img 
                            src="https://images.unsplash.com/photo-1614064641938-3bbee52942c7?q=80&w=1587&auto=format&fit=crop"
                            alt="iOS Security" 
                            className="w-full h-full object-cover"
                          />
                        )}
                        {/* Overlay with iOS brand styling */}
                        <div className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-4">
                          <div className="flex items-center">
                            <div className="w-8 h-8 bg-[#007AFF] rounded-xl flex items-center justify-center mr-2">
                              <svg width="16" height="20" viewBox="0 0 38 48" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M31.4 25.5C31.4 19.2 36.6 16.5 36.8 16.4C34.2 12.5 30.2 12 29 11.9C25.6 11.5 22.3 14 20.7 14C19 14 16.5 11.9 13.6 12C9.9 12 6.5 14.1 4.7 17.4C1 24.1 3.8 34.1 7.4 39.4C9.2 42 11.3 44.9 14 44.8C16.5 44.7 17.5 43 20.6 43C23.6 43 24.6 44.8 27.2 44.7C29.9 44.6 31.7 42 33.5 39.4C35.6 36.3 36.5 33.2 36.5 33C36.4 33 31.4 31 31.4 25.5Z" fill="white"/>
                                <path d="M26.1 7.7C27.5 5.9 28.5 3.5 28.2 1C26.1 1.1 23.4 2.4 22 4.2C20.7 5.7 19.5 8.2 19.8 10.6C22.2 10.8 24.7 9.5 26.1 7.7Z" fill="white"/>
                              </svg>
                            </div>
                            <div className="text-white">
                              <p className="text-xs opacity-80">Apple Design System</p>
                              <p className="text-sm font-bold">iOS {activePlatformFeature.charAt(0).toUpperCase() + activePlatformFeature.slice(1)}</p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </Iphone15Pro>
                  ) : (                    <Android
                      scale={0.7}
                      className="w-[280px] h-[560px] drop-shadow-[0_15px_25px_rgba(0,0,0,0.6)] group-hover:scale-[1.01] transition-transform duration-500"
                      alt="Android App Development Preview"
                    >
                      <div className="w-full h-full overflow-hidden">
                        {activePlatformFeature === "overview" && (
                          <img 
                            src="https://images.unsplash.com/photo-1607252650355-f7fd0460ccdb?q=80&w=1470&auto=format&fit=crop"
                            alt="Android Interface" 
                            className="w-full h-full object-cover"
                          />
                        )}
                        {activePlatformFeature === "material" && (
                          <img 
                            src="https://images.unsplash.com/photo-1635236066451-a17f04caa37c?q=80&w=1469&auto=format&fit=crop"
                            alt="Material Design" 
                            className="w-full h-full object-cover"
                          />
                        )}
                        {activePlatformFeature === "ecosystem" && (
                          <img 
                            src="https://images.unsplash.com/photo-1596558450255-7c0b7be9d56a?q=80&w=1470&auto=format&fit=crop"
                            alt="Google Services" 
                            className="w-full h-full object-cover"
                          />
                        )}
                        {activePlatformFeature === "fragmentation" && (
                          <img 
                            src="https://images.unsplash.com/photo-1573739022854-abceaeb585dc?q=80&w=1470&auto=format&fit=crop"
                            alt="Device Support" 
                            className="w-full h-full object-cover"
                          />
                        )}
                        {/* Overlay with Android brand styling */}
                        <div className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-4">
                          <div className="flex items-center">
                            <div className="w-8 h-8 bg-[#3DDC84] rounded-xl flex items-center justify-center mr-2">
                              <svg width="16" height="18" viewBox="0 0 16 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M1.5 5V11C1.5 11.55 1.95 12 2.5 12H3V14.5C3 15.05 3.45 15.5 4 15.5C4.55 15.5 5 15.05 5 14.5V12H11V14.5C11 15.05 11.45 15.5 12 15.5C12.55 15.5 13 15.05 13 14.5V12H13.5C14.05 12 14.5 11.55 14.5 11V5H1.5ZM14.5 3H1.5C1.5 1.62 2.12 0.42 3.16 -0.17L2.14 -1.19C1.96 -1.37 1.96 -1.66 2.14 -1.84C2.32 -2.02 2.61 -2.02 2.79 -1.84L4.2 -0.43C4.85 -0.75 5.59 -0.94 6.37 -0.98C7.14 -1.02 7.9 -0.89 8.59 -0.61L10.05 -2.07C10.23 -2.25 10.52 -2.25 10.7 -2.07C10.88 -1.89 10.88 -1.6 10.7 -1.42L9.59 -0.31C10.79 0.27 11.63 1.58 11.63 3H14.5ZM4.75 2C4.34 2 4 1.66 4 1.25C4 0.84 4.34 0.5 4.75 0.5C5.16 0.5 5.5 0.84 5.5 1.25C5.5 1.66 5.16 2 4.75 2ZM11.25 2C10.84 2 10.5 1.66 10.5 1.25C10.5 0.84 10.84 0.5 11.25 0.5C11.66 0.5 12 0.84 12 1.25C12 1.66 11.66 2 11.25 2Z" fill="white"/>
                              </svg>
                            </div>
                            <div className="text-white">
                              <p className="text-xs opacity-80">Material Design</p>
                              <p className="text-sm font-bold">Android {activePlatformFeature.charAt(0).toUpperCase() + activePlatformFeature.slice(1)}</p>
                            </div>
                          </div>
                        </div>
                      </div>
                    </Android>
                  )}

                  {/* Futuristic iPhone Notch */}
                  {activeTab === "iphone" && (
                    <div className="absolute top-3 left-1/2 -translate-x-1/2 w-[26%] h-7 bg-black/90 rounded-full z-30 flex items-center justify-center overflow-hidden backdrop-blur border-b border-white/10">
                      <motion.div 
                        className="absolute inset-0 opacity-20"
                        style={{ 
                          background: `linear-gradient(90deg, transparent, ${currentPlatform.color}40, transparent)` 
                        }}
                        animate={{ 
                          x: ["-100%", "100%"] 
                        }}
                        transition={{ 
                          duration: 3, 
                          repeat: Infinity,
                          ease: "easeInOut" 
                        }}
                      />
                      
                      <div className="flex items-center space-x-2">
                        <motion.div 
                          className="w-1.5 h-1.5 rounded-full"
                          style={{ backgroundColor: `${currentPlatform.color}80` }}
                          animate={{ opacity: [0.4, 0.9, 0.4] }}
                          transition={{ duration: 2, repeat: Infinity, delay: 0.2 }}
                        />
                        <motion.div 
                          className="w-2 h-2 rounded-full"
                          style={{ backgroundColor: `${currentPlatform.secondaryColor}80` }}
                          animate={{ opacity: [0.5, 1, 0.5] }}
                          transition={{ duration: 1.5, repeat: Infinity }}
                        />
                        <motion.div 
                          className="w-1.5 h-1.5 rounded-full"
                          style={{ backgroundColor: `${currentPlatform.color}80` }}
                          animate={{ opacity: [0.4, 0.9, 0.4] }}
                          transition={{ duration: 2, repeat: Infinity, delay: 0.5 }}
                        />
                      </div>
                    </div>
                  )}
                </div>

                {/* Futuristic Interactive Elements */}
                <div className="absolute -left-6 top-1/4 flex flex-col gap-3 items-center">
                  <motion.div 
                    className="w-1 h-16 rounded-full"
                    style={{ background: `linear-gradient(to bottom, ${currentPlatform.color}, transparent)` }}
                    animate={{ height: [12, 24, 12] }}
                    transition={{ duration: 3, repeat: Infinity }}
                  />
                  <motion.div 
                    className="w-6 h-6 rounded-full bg-transparent backdrop-blur-lg border-[1px] flex items-center justify-center"
                    style={{ borderColor: currentPlatform.color }}
                    animate={{ 
                      boxShadow: [`0 0 0px ${currentPlatform.color}50`, `0 0 15px ${currentPlatform.color}60`, `0 0 0px ${currentPlatform.color}50`] 
                    }}
                    transition={{ duration: 2, repeat: Infinity }}
                  >
                    <motion.div 
                      className="w-2 h-2"
                      style={{ backgroundColor: currentPlatform.color }}
                      animate={{ scale: [0.8, 1.2, 0.8] }}
                      transition={{ duration: 2, repeat: Infinity }}
                    />
                  </motion.div>
                </div>
                
                <div className="absolute -right-6 bottom-1/4 flex flex-col gap-3 items-center">
                  <motion.div 
                    className="w-6 h-6 rounded-full bg-transparent backdrop-blur-lg border-[1px] flex items-center justify-center"
                    style={{ borderColor: currentPlatform.secondaryColor }}
                    animate={{ 
                      boxShadow: [`0 0 0px ${currentPlatform.secondaryColor}50`, `0 0 15px ${currentPlatform.secondaryColor}60`, `0 0 0px ${currentPlatform.secondaryColor}50`] 
                    }}
                    transition={{ duration: 2.5, repeat: Infinity, delay: 0.5 }}
                  >
                    <motion.div 
                      className="w-2 h-2"
                      style={{ backgroundColor: currentPlatform.secondaryColor }}
                      animate={{ scale: [0.8, 1.2, 0.8] }}
                      transition={{ duration: 2.5, repeat: Infinity, delay: 0.5 }}
                    />
                  </motion.div>
                  <motion.div 
                    className="w-1 h-16 rounded-full"
                    style={{ background: `linear-gradient(to top, ${currentPlatform.secondaryColor}, transparent)` }}
                    animate={{ height: [12, 24, 12] }}
                    transition={{ duration: 3.5, repeat: Infinity, delay: 0.7 }}
                  />
                </div>
              </motion.div>
            </AnimatePresence>
          </div>          {/* Right Column - Glassmorphic Design (7 cols) */}
          <div className="lg:col-span-7 space-y-8 px-4 lg:px-0">
            
            {/* Platform Header Section */}
            <div className="flex flex-col md:flex-row justify-between items-start md:items-center gap-6">
              {/* Glassmorphic Platform Header */}
              <div className="w-full md:flex-1">
                <motion.div
                  initial={{ opacity: 0, y: 30 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.8 }}
                  className={`relative p-6 rounded-2xl backdrop-blur-xl border shadow-lg overflow-hidden ${
                    theme === 'dark' 
                      ? 'bg-white/5 border-white/10 shadow-black/20' 
                      : 'bg-white/20 border-white/20 shadow-black/5'
                  }`}
                >
                  {/* Glassmorphic background gradient */}
                  <div 
                    className="absolute inset-0 opacity-30"
                    style={{
                      background: `linear-gradient(135deg, ${currentPlatform.color}15, transparent 50%, ${currentPlatform.secondaryColor}10)`
                    }}
                  />                    <div className="relative z-10">
                    <div className="flex items-center gap-4">
                      <div className="flex items-start gap-3">
                        <div>
                          <h1 className="text-3xl md:text-4xl lg:text-5xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-primary via-blue-500 to-purple-500 mb-3">
                            {currentPlatform.name}
                          </h1>
                          <p className={`text-base lg:text-lg ${
                            theme === 'dark' ? 'text-white/70' : 'text-slate-600/80'
                          }`}>Development Platform</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </motion.div>
              </div>              {/* Platform Tab Switcher */}
              <div className={`relative backdrop-blur-xl rounded-2xl shadow-lg overflow-hidden border ${
                theme === 'dark' 
                  ? 'bg-white/5 border-white/10 shadow-black/20' 
                  : 'bg-white/30 border-white/30 shadow-black/5'
              }`}>
                {/* Subtle gradient overlay */}
                <div 
                  className="absolute inset-0 opacity-20"
                  style={{
                    background: `linear-gradient(90deg, transparent, ${currentPlatform.color}20, transparent)`
                  }}
                />                
                <div className="relative flex gap-0 p-1.5">
                  {/* Animated Highlight Line */}
                  <motion.div
                    className="absolute bottom-0 h-[2px] z-10"
                    style={{
                      background: `linear-gradient(to right, ${currentPlatform.color}, #3B82F6, #8B5CF6)`,
                      left: activeTab === "iphone" ? "0" : "50%",
                      width: "50%",
                    }}
                    transition={{ type: "spring", bounce: 0.1, duration: 0.4 }}
                    layoutId="activeTabIndicator"
                  />
                  
                  {/* Tab Buttons */}
                  {Object.entries(platforms).map(([id, platform]) => (
                    <button
                      key={id}
                      onClick={() => {
                        setActiveTab(id);
                        setActivePlatformFeature("overview");
                      }}
                      className={`relative z-10 px-4 py-3 text-sm transition-all duration-300 flex items-center gap-2 justify-center flex-1 group rounded-xl ${
                        activeTab === id 
                          ? `font-semibold backdrop-blur-sm ${
                              theme === 'dark' 
                                ? 'text-white bg-white/10' 
                                : 'text-slate-800 bg-white/40'
                            }`
                          : `${
                              theme === 'dark' 
                                ? 'text-white/70 hover:text-white/90 hover:bg-white/5' 
                                : 'text-slate-600 hover:text-slate-800 hover:bg-white/20'
                            }`
                      }`}
                    >
                      <motion.span 
                        className="transition-all duration-300"
                        animate={{ 
                          color: activeTab === id ? currentPlatform.color : 'inherit',
                          scale: activeTab === id ? 1.1 : 1
                        }}
                      >
                        {platform.icon}
                      </motion.span>
                      <span className={`font-medium tracking-tight ${activeTab === id ? 'font-semibold' : ''}`}>
                        {platform.name}
                      </span>
                        {/* Glassmorphic glow effect */}
                      {activeTab === id && (
                        <motion.div
                          className="absolute inset-0 -z-10 opacity-20 rounded-xl"
                          initial={{ opacity: 0 }}
                          animate={{ opacity: 0.2 }}
                          style={{ 
                            background: `radial-gradient(circle at center, ${currentPlatform.color}40 0%, transparent 70%)` 
                          }}
                        />
                      )}
                    </button>
                  ))}
                </div>
              </div>
            </div>
                {/* Glassmorphic Feature Cards */}
              <div className="space-y-6">
                <div className={`flex justify-between items-center p-5 rounded-xl backdrop-blur-lg border ${
                  theme === 'dark' 
                    ? 'bg-white/5 border-white/10' 
                    : 'bg-white/30 border-white/20'
                }`}>
                  <div className="flex items-center gap-3">
                    <h3 className={`text-lg font-semibold ${
                      theme === 'dark' 
                        ? 'text-white' 
                        : 'text-slate-800'
                    }`}>
                      Features & Capabilities
                    </h3>
                  </div>
                </div>
                
                <div className="space-y-4">
                  <Tabs defaultValue={currentPlatform.features[0].id} 
                      onValueChange={(value) => setActivePlatformFeature(value)}
                      value={activePlatformFeature}>
                    <TabsList className="w-full justify-start mb-4">
                      {currentPlatform.features.map((feature) => (                      
                        <TabsTrigger 
                          key={feature.id} 
                          value={feature.id}
                        >
                          <div className="flex items-center gap-2">
                            {feature.icon}
                            <span>{feature.name}</span>
                          </div>
                        </TabsTrigger>
                      ))}
                    </TabsList>                    
                    {currentPlatform.features.map((feature) => (
                      <TabsContent key={feature.id} value={feature.id}>                      
                        <Card className={`backdrop-blur-xl border shadow-lg overflow-hidden h-[280px] flex flex-col ${
                          theme === 'dark'
                            ? 'bg-white/5 border-white/10 shadow-black/20' 
                            : 'bg-white/30 border-white/30 shadow-black/5'
                        }`}>
                          {/* Glassmorphic gradient overlay */}
                          <div 
                            className="absolute inset-0 opacity-20 pointer-events-none"
                            style={{
                              background: `linear-gradient(135deg, ${currentPlatform.color}10, transparent 50%, ${currentPlatform.secondaryColor}05)`
                            }}
                          />
                          
                          <CardHeader className="relative z-10 pb-4">
                            <CardTitle className="flex items-center gap-3 text-lg">
                              <motion.div 
                                className="w-8 h-8 rounded-lg flex items-center justify-center text-white shadow-md"
                                style={{ 
                                  background: `linear-gradient(135deg, ${currentPlatform.color}90, #3B82F6, ${currentPlatform.secondaryColor}90)`,
                                  border: '1px solid',
                                  borderColor: `${currentPlatform.color}40`
                                }}
                              >
                                {feature.icon}
                              </motion.div>
                              {feature.name}
                            </CardTitle>
                          </CardHeader>
                          
                          <CardContent className="relative z-10 flex-1 flex flex-col px-6 pt-0">
                            <motion.p
                              initial={{ opacity: 0, y: 10 }}
                              animate={{ opacity: 1, y: 0 }}
                              transition={{ duration: 0.3 }}
                              className={`text-sm leading-relaxed flex-1 mb-4 ${
                                theme === 'dark' ? 'text-white/80' : 'text-slate-700/90'
                              }`}
                            >
                              {feature.content}
                            </motion.p>
                            
                            {/* Feature-specific extra content */}
                            <div className="grid grid-cols-2 gap-3 min-h-[60px]">{feature.id === 'ecosystem' && (
                              <>
                                <div className={`p-2 rounded-lg backdrop-blur-sm ${
                                  theme === 'dark' ? 'bg-white/10 border border-white/20' : 'bg-white/40 border border-white/30'
                                }`}>
                                  <div className="flex items-center gap-1">
                                    <CheckCircle2 className="w-3 h-3 text-green-500" />
                                    <span className="text-xs font-medium">Seamless Integration</span>
                                  </div>
                                </div>
                                <div className={`p-2 rounded-lg backdrop-blur-sm ${
                                  theme === 'dark' ? 'bg-white/10 border border-white/20' : 'bg-white/40 border border-white/30'
                                }`}>
                                  <div className="flex items-center gap-1">
                                    <CheckCircle2 className="w-3 h-3 text-green-500" />
                                    <span className="text-xs font-medium">Cross-device Sync</span>
                                  </div>
                                </div>
                              </>
                            )}
                            
                            {feature.id === 'security' && (
                              <>
                                <div className={`p-2 rounded-lg backdrop-blur-sm ${
                                  theme === 'dark' ? 'bg-white/10 border border-white/20' : 'bg-white/40 border border-white/30'
                                }`}>
                                  <div className="flex items-center gap-1">
                                    <Shield className="w-3 h-3 text-blue-500" />
                                    <span className="text-xs font-medium">Advanced Encryption</span>
                                  </div>
                                </div>
                                <div className={`p-2 rounded-lg backdrop-blur-sm ${
                                  theme === 'dark' ? 'bg-white/10 border border-white/20' : 'bg-white/40 border border-white/30'
                                }`}>
                                  <div className="flex items-center gap-1">
                                    <Shield className="w-3 h-3 text-blue-500" />
                                    <span className="text-xs font-medium">Secure Authentication</span>
                                  </div>
                                </div>
                              </>
                            )}
                          </div>
                        </CardContent>                        <CardFooter className="flex justify-between relative z-10 pt-2">
                          <button
                            className={`px-3 py-1 text-xs rounded-full transition-all duration-300 flex items-center gap-1 backdrop-blur-sm border ${
                              theme === 'dark' 
                                ? 'bg-white/10 text-white border-white/20 hover:bg-white/20' 
                                : 'bg-white/40 text-slate-700 border-white/30 hover:bg-white/60'
                            }`}
                          >
                            <Code className="w-3 h-3" /> Documentation
                          </button>

                        </CardFooter>
                      </Card>
                    </TabsContent>
                  ))}
                </Tabs>
              </div>
            </div>        

          </div>
          
        </div>
        
      </div>
                  <div className="mt-12">
              <div className={`relative flex flex-col md:flex-row items-center justify-between p-8 backdrop-blur-xl rounded-2xl border shadow-lg overflow-hidden ${
                theme === 'dark' 
                  ? 'bg-white/5 border-white/10 shadow-black/20' 
                  : 'bg-white/30 border-white/30 shadow-black/5'
              }`}>
                {/* Animated gradient background */}
                <div 
                  className="absolute inset-0 opacity-30 pointer-events-none"
                  style={{
                    background: `linear-gradient(135deg, ${currentPlatform.color}20, transparent 40%, ${currentPlatform.secondaryColor}15, transparent 80%)`
                  }}
                />
                
                {/* Floating particles effect */}
                <div className="absolute inset-0 overflow-hidden pointer-events-none">
                  <motion.div
                    className="absolute w-2 h-2 rounded-full opacity-40"
                    style={{ backgroundColor: currentPlatform.color }}
                    animate={{
                      x: [20, 300, 20],
                      y: [30, 80, 30],
                      opacity: [0.2, 0.6, 0.2]
                    }}
                    transition={{ duration: 8, repeat: Infinity, ease: "easeInOut" }}
                  />
                  <motion.div
                    className="absolute w-1.5 h-1.5 rounded-full opacity-30"
                    style={{ backgroundColor: currentPlatform.secondaryColor }}
                    animate={{
                      x: [250, 50, 250],
                      y: [20, 90, 20],
                      opacity: [0.1, 0.5, 0.1]
                    }}
                    transition={{ duration: 10, repeat: Infinity, ease: "easeInOut", delay: 2 }}
                  />
                </div>
                
                <div className="mb-6 md:mb-0 md:mr-10 relative z-10">
                  <h3 className={`text-2xl font-bold mb-3 ${
                    theme === 'dark' ? 'text-white' : 'text-slate-800'
                  }`}>See It In Action</h3>
                  <p className={`max-w-md ${
                    theme === 'dark' ? 'text-white/70' : 'text-slate-600/80'
                  }`}>
                    Experience the power of our interactive features with a live demonstration of our latest projects.
                  </p>
                </div>
                <a 
                  href="#demo" 
                  className={`relative z-10 px-8 py-3 rounded-xl font-medium transition-all duration-300 flex items-center justify-center gap-2 group backdrop-blur-sm border ${
                    theme === 'dark'
                      ? 'bg-white/10 text-white border-white/20 hover:bg-white/20 hover:shadow-lg hover:shadow-white/10'
                      : 'bg-white/40 text-slate-800 border-white/30 hover:bg-white/60 hover:shadow-lg hover:shadow-black/10'
                  }`}
                >                  Watch Demo
                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" className="w-4 h-4 group-hover:translate-x-1 transition-transform"><polygon points="5 3 19 12 5 21 5 3"></polygon></svg>
                </a>
              </div>
            </div>
          </div>
        </div>
      </section>
    
  );
};

// Default props for when theme props are not provided
DevicePlatformShowcase.defaultProps = {
  theme: 'dark',
  toggleTheme: () => console.warn('toggleTheme prop is not provided to DevicePlatformShowcase')
};

export default DevicePlatformShowcase;